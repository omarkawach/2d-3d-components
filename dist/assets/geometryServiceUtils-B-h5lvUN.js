import{k as c,s as l,Q as s}from"./index-8ERthB3p.js";import{p as m,n as g}from"./project-7u3NBcq6.js";import"./utils-1zmckiYC.js";import"./utils-D-bI9C7C.js";async function u(e=null,a){var i,r;if(c.geometryServiceUrl)return c.geometryServiceUrl;if(!e)throw new l("internal:geometry-service-url-not-configured");let t;t="portal"in e?e.portal||s.getDefault():e,await t.load({signal:a});const n=(r=(i=t.helperServices)==null?void 0:i.geometry)==null?void 0:r.url;if(!n)throw new l("internal:geometry-service-url-not-configured");return n}async function v(e,a,t=null,n){const i=await u(t,n),r=new m;r.geometries=[e],r.outSpatialReference=a;const o=await g(i,r,{signal:n});if(o&&Array.isArray(o)&&o.length===1)return o[0];throw new l("internal:geometry-service-projection-failed")}export{u as getGeometryServiceURL,v as projectGeometry};
