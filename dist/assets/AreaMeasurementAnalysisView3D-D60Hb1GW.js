function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
import{cj as Ae,di as Y,dm as T,bX as Ve,bW as m,bR as Re,dt as Ge,mB as ze,fm as Oe,fs as Ie,cg as Ee,g4 as Te,cf as x,dj as Z,fx as je,pF as ne,T as We,cp as Ue,o as a,y as d,X as B,bO as re,cr as z,cu as ae,bE as ke,bH as he,hV as Fe,ej as ee,dF as He,P as Ne,Z as qe,_ as Be,dE as F,cd as le,c4 as de,kM as Xe,jr as Ze,kV as ce,jp as pe,jX as Je,j3 as me,j5 as Ke,gl as Qe,gJ as P,ql as Ye,dS as et,g6 as tt,fN as it,fM as st,fL as rt,fK as ot,j6 as nt}from"./index-8ERthB3p.js";import{e as at}from"./defaultUnit-gjMTMp_C.js";import{s as ht}from"./AnalysisView3D-BwgdxIXS.js";import{e as te}from"./interfaces-js1RL7O8.js";import{a as ie,p as lt,w as dt}from"./spatialReferenceEllipsoidUtils-CmEPjh7T.js";import{i as I,a as ue,c as ct}from"./quantityUtils-9zDVxeky.js";import{o as ge,m as pt,r as mt}from"./vec2-Dt9Foiri.js";import{n as _e,r as De}from"./vec2f64-Diu2Kaa8.js";import{n as H}from"./projectVectorToVector-C3SBBDgz.js";import{c as J}from"./projectPointToVector-qKp-AJ2b.js";import{t as ut}from"./projectPointToWGS84ComparableLonLat-D5kdMIn_.js";import{t as fe}from"./Indices-DP3oX5Sg.js";import{w as gt}from"./sphere-Bf4ezJdT.js";import{S as _t}from"./triangle-CTblFuF6.js";import{L as ft,w as yt,k as vt,T as Lt,G as Ct,S as wt,d as St,W as Pt}from"./measurementUtils-BB1pb2Gz.js";import{c as $t}from"./ElevationProvider-Bd4qfXCi.js";import{d as se,b as ye,p as bt}from"./mathUtils-iSLnUy_4.js";import{k as ve}from"./euclideanAreaMeasurementUtils-CIzlnp3G.js";import{t as Mt}from"./UnitNormalizer-DMsoj8NV.js";import{t as At,f as E}from"./LineVisualElement-DVtpCq1A.js";import{V as Le,p as Vt,P as Gt,l as Dt}from"./EditGeometryOperations-3XHFCAp6.js";import{h as Ce}from"./quantityFormatUtils-DfDZUKJh.js";import{e as xt}from"./mat4f64-Dk4dwAN8.js";import{f as we,_ as Rt,m as zt}from"./Segment-BxtK7jJN.js";import{a as Ot}from"./Object3DVisualElement-D2TYUCro.js";import{t as Se}from"./Attribute-B-NAci_J.js";import{I as It}from"./Geometry-CqGtfd4N.js";import{O as Et,u as Tt,h as G}from"./Material-DwPnlQDw.js";import{e as N}from"./VertexAttribute-BnAa5VW0.js";import{a as jt,g as Wt,i as Ut,y as kt,h as Pe,e as Ft,l as Ht,r as Nt,m as qt,n as Bt,A as K,aG as Q,s as Xt}from"./Texture-C7A05GrI.js";import{r as Zt}from"./VertexColor.glsl-CScvx9pF.js";import{c as Jt}from"./DefaultLayouts-BrmJbx_o.js";import{e as Kt}from"./ColorMaterial.glsl-uPKQoFFi.js";import{o as j,g as Qt,S as Yt,A as ei,l as ti,a as ii,E as si,_ as ri}from"./OrderIndependentTransparency-Cua2R8AE.js";import{R as W}from"./enums-DSseSvdG.js";import{r as V}from"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import{h as oi}from"./lineStippleUtils-B9K4R8oO.js";import{o as $e}from"./interfaces-B8ge7Jg9.js";import"./BindType-BmZEZMMh.js";import"./getDefaultUnitForView-BEilgbp7.js";import"./projectVectorToWGS84ComparableLonLat-DuPw0-Mv.js";import"./ObjectStack-BPo9QGhV.js";import"./plane-Du3EYICn.js";import"./mat3f64-BBpwCtoL.js";import"./quatf64-BrpT0VRp.js";import"./lineSegment-DVvvMBnG.js";import"./geometryEngine-MBwx6Ib1.js";import"./geometryEngineBase-Cz__5BKm.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-7yclY7Co.js";import"./geodesicUtils-D1kRRrco.js";import"./ViewingMode-Dodu7ZZk.js";import"./boundedPlane-CLJ-Xnn_.js";import"./verticalOffsetUtils-BYv4Nk2v.js";import"./mat3-CqxUQBLP.js";import"./orientedBoundingBox-BQvYwCTM.js";import"./quat-DUnoL8dP.js";import"./computeTranslationToOriginAndRotation-BbJd4iYX.js";import"./earcut-BqgeR2O3.js";import"./measurementUtils-CUrVHWre.js";import"./RenderGeometry-rcUvJmRA.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-068mylUp.js";import"./ContentObject-BTgEhnct.js";import"./Util-B8vYs4k8.js";import"./hydratedFeatures-DqrDm0_F.js";import"./axisAngleDegrees-CaSFQR2z.js";import"./weather-D00pIeau.js";import"./RenderState-DaVlEYWY.js";import"./NestedMap-DgiGbX8E.js";import"./frustum-BrAPXuhm.js";import"./basicInterfaces-DngWxyLO.js";import"./Octree-E7a40xr7.js";import"./InterleavedLayout-s3MgOYN8.js";import"./BufferView-CHYzaV9A.js";import"./types-D0PSWh4d.js";import"./floatRGBA-CCqnXShd.js";import"./Texture-O7Pyotwx.js";import"./Intersector-8rpRuT_8.js";import"./glUtil-DS73TAjp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-Cv4RwmVi.js";import"./BufferObject-CaEbWulZ.js";import"./Scheduler-DaHJO6l7.js";import"./signal-DoM1gSF0.js";import"./debugFlags-BbJIqrPU.js";import"./geometry2dUtils-DoOkpuKA.js";import"./unitFormatUtils-3MMEFLJJ.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./Cyclical-BY9qISY1.js";import"./VisualElement-CI1nOGdz.js";import"./viewUtils-DC86MEAQ.js";import"./elevationInfoUtils-sHEwmo9N.js";import"./jsxFactory-BxQYPm-b.js";import"./TextOverlayItem-BPy-0Tbh.js";import"./doublePrecisionUtils-B0owpBza.js";import"./requestImageUtils-DP1V3HlH.js";import"./triangulationUtils-C0V38kt7.js";import"./deduplicate-j8p9VETP.js";function be(t,e,i,s,r){Ae(U,t),Y(k,t,e),H(U,i,U,r),H(k,i,k,r),T(s,k,U),Ve(s,s)}const U=m(),k=m();class ni{get numVertices(){return this._length}get hasStagedVertex(){return this._hasCursorPoint}constructor(e,i){this.validMeasurement=!1,this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=m(),this.areaCentroidRenderCoords=m(),this.geodesicAreaCentroidRenderCoords=m(),this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=m(),this._planeWorldCoords=Re(),this._worldUp=m(),this._worldTangent=m(),this._frame=[m(),m(),m()],this._pathVersion=-1,this._hasCursorPoint=!1,this._mode=null,this._tempU=m(),this._tempV=m(),this._tempVec3=m(),this._tempSphere=gt(),this._sceneView=e,this.unitNormalizer=i}update(e,i,s,r,o,n){const h=i!=null,l=this._pathVersion===e.version,p=this._hasCursorPoint===h,c=this._mode===o;return!(l&&!n&&p&&c&&e.isValidPolygon)&&(this._pathVersion=e.version,this._hasCursorPoint=h,this._updateCursorSegmentLength(e,i),this._update(e,i,s,r,o),!0)}_update(e,i,s,r,o){const n=this.unitNormalizer,h=this._sceneView.renderSpatialReference,l=this.unitNormalizer.spatialReference;let p=e.numVertices;const c=!(i==null||i.equals(e.lastPoint)||p>2&&i.equals(e.firstPoint));c&&(p+=1);const u=!e.polygonIsClosed&&p>2,g=e.polygonIsClosed||u;this._resize(p);const f=ie(s.spatialReference),$=Ge(s.spatialReference,f)&&ze(s.spatialReference),{positionsGeographic:C,positionsWorldCoords:M,positionsRenderCoords:b,positionsSpherical:D}=this,O=(y,v)=>{ai(s.elevationProvider,y),J(y,M[v],l),J(y,b[v],h),$&&(ut(y,C[v]),J(y,D[v],f),Ve(D[v],D[v]))};e.forEachVertexPosition((y,v)=>O(y,v)),c&&O(i,p-1);const S=this._updatePathLengths(g);if(this.pathLength=this._length>1?I(n.normalizeDistance(S),"meters"):null,$){const y=this._updateGeodesicPathLengths(g,l);this.geodesicPathLength=this._length>1?I(y,"meters"):null}else this.geodesicPathLength=null;if(this._updateMode(o),!g)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),void(this.validMeasurement=!1);this._updateAreaAndPerimeterLength(s,n,h,l,r),$&&this._updateGeodesicArea(s),this.validMeasurement=!0}getData(){return{validMeasurement:this.validMeasurement,numVertices:this.numVertices,hasStagedVertex:this.hasStagedVertex,positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(m()),this.positionsRenderCoords.push(m()),this.positionsProjectedWorldCoords.push(_e()),this.positionsFittedRenderCoords.push(m()),this.positionsGeographic.push(m()),this.positionsSpherical.push(m()),this.positionsStereographic.push(_e()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const i=this.positionsWorldCoords,s=this.pathSegmentLengths;let r=0;for(let o=0;o<this._length;++o){const n=s[o]=Oe(i[o],i[(o+1)%this._length]);(o<this._length-1||e)&&(r+=n)}return r}_updateGeodesicPathLengths(e,i){const s=this.positionsGeographic,r=this.geodesicPathSegmentLengths;let o=0;for(let n=0;n<this._length;++n){const h=r[n]=ft(s[n],s[(n+1)%this._length],i??void 0);(n<this._length-1||e)&&(o+=h)}return o}_updateAreaAndPerimeterLength(e,i,s,r,o){const n=e.renderCoordsHelper,h=this.positionsWorldCoords,l=this.positionsRenderCoords,p=this.positionsProjectedWorldCoords,c=this.positionsFittedRenderCoords,u=this._planeWorldCoords,g=this._centroidRenderCoords;se(l,g),n.worldUpAtPosition(g,this._worldUp),n.worldBasisAtPosition(g,Ie.X,this._worldTangent),be(g,this._worldUp,s,this._worldUp,r),be(g,this._worldTangent,s,this._worldTangent,r),h.length>2&&yt(h,u),this.fittingMode=this._selectFittingMode(u,h,this._worldUp,o);let f=0;if(this.fittingMode==="horizontal"){let S=-1/0;l.forEach((y,v)=>{const oe=n.getAltitude(l[v]);oe>S&&(S=oe,f=v)})}const $=h[f];let C=u,M=this._worldTangent;this.fittingMode==="horizontal"?C=this._worldUp:this.fittingMode==="vertical"&&(C=this._tempVec3,M=this._worldUp,ye(u,this._worldUp,C)),Ae(this._frame[2],C),ye(M,C,this._frame[0]),Ee(this._frame[1],this._frame[0],this._frame[2]),Te(this._frame[1],this._frame[1]);const b=this._tempVec3,D=this._tempU,O=this._tempV;for(let S=0;S<this._length;++S){const y=p[S],v=c[S];T(b,h[S],$),ge(y,x(this._frame[0],b),x(this._frame[1],b)),Z(D,this._frame[0],y[0]),Z(O,this._frame[1],y[1]),Y(b,D,O),Y(b,b,$),H(b,r,v,s)}this.perimeterLength=this._length>0?I(i.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,se(c,this.areaCentroidRenderCoords),H(this.areaCentroidRenderCoords,s,this.areaCentroidWorldCoords,r),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?ue(i.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const{renderCoordsHelper:i,spatialReference:s}=e,{positionsSpherical:r,positionsStereographic:o}=this,n=this._tempVec3,h=vt(r,n);if(!h)return void(this.geodesicArea=null);const l=this._tempU,p=this._tempV;bt(n,l,p);for(let c=0;c<this._length;++c){const u=x(r[c],l),g=x(r[c],p),f=x(r[c],n);ge(o[c],u/f,g/f)}Z(n,n,je(s).radius),i.toRenderCoords(n,ie(s),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=h&&this.geodesicIntersectingSegments.size===0?ue(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,i=this.perimeterSegmentLengths;let s=0;for(let r=0;r<this._length;++r)s+=i[r]=pt(e[r],e[(r+1)%this._length]);return s}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,i=this.intersectingSegments;i.clear();for(let s=0;s<this._length;++s)for(let r=s+2;r<this._length;++r){if((r+1)%this._length===s)continue;const o=e[s],n=e[(s+1)%this._length],h=e[r],l=e[(r+1)%this._length];ne(o,n,h,l)&&(i.add(s),i.add(r))}}_computeArea(){const e=this.positionsProjectedWorldCoords,i=this.triangleIndices=fe(ve(e));let s=0;for(let r=0;r<i.length;r+=3)s+=_t(e[i[r]],e[i[r+1]],e[i[r+2]]);return s}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,i=this.geodesicIntersectingSegments;i.clear();for(let s=0;s<this._length;++s)for(let r=s+2;r<this._length;++r){if((r+1)%this._length===s)continue;const o=e[s],n=e[(s+1)%this._length],h=e[r],l=e[(r+1)%this._length];ne(o,n,h,l)&&(i.add(s),i.add(r))}}_computeGeodesicArea(){const e=this.positionsGeographic,i=this.positionsStereographic,s=this.geodesicTriangleIndices=fe(ve(i));let r=0;for(let o=0;o<s.length;o+=3)r+=Lt(e[s[o]],e[s[o+1]],e[s[o+2]],We.WGS84);return r}_selectFittingMode(e,i,s,r){const o=i.map(c=>Math.abs(Ct(e,c))).reduce((c,u)=>Math.max(c,u),0);wt(i,this._tempSphere);const n=o/(2*this._tempSphere[3]),h=n<r.maxRelativeErrorCoplanar,l=n<r.maxRelativeErrorAlmostCoplanar;let p="horizontal";return h?p="oblique":l&&(p=Math.abs(x(s,e))>Math.cos(Ue(r.verticalAngleThreshold))?"horizontal":"vertical"),p}_updateCursorSegmentLength(e,i){const s=e.lastPoint;e.isValidPolygon||s==null||i==null?(this.geodesicStagedSegmentLength=null,this.stagedSegmentLength=null):(this.geodesicStagedSegmentLength=I(St(s,i),"meters"),this.stagedSegmentLength=I(this.unitNormalizer.normalizeDistance(Pt(s,i,this.unitNormalizer.spatialReference)),"meters"))}_updateMode(e){if(e===te.Auto){this.actualMeasurementMode="euclidean";let i=0;this.geodesicPathLength!=null&&(i+=this.geodesicPathLength.value),i>hi&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=e===te.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=e}}function ai(t,e){e.hasZ||(e.z=$t(t,e,"ground")??0)}const hi=1e5;let R=class extends re{constructor(e){super(e)}initialize(){const e=this.view.spatialReference,i=ie(e),s=i===lt?dt:i,r=!e||Ge(e,s)?s:e,o=new Mt(r);this._measurementDataManager=new ni(this.view,o),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),z(()=>this.analysisViewData.stagedPoint,()=>this._update(),ae),z(()=>this.analysisViewData.mode,()=>this._update(),ae)]),this._update()}_update(e=!1){const{analysisViewData:i,view:s}=this,r={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(i.path,i.stagedPoint,s,r,i.mode,e)&&(i.measurementData=this._measurementDataManager.getData())}};a([d({constructOnly:!0})],R.prototype,"view",void 0),a([d({constructOnly:!0})],R.prototype,"analysis",void 0),a([d({constructOnly:!0})],R.prototype,"analysisViewData",void 0),R=a([B("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],R);let w=class extends ke.EventedAccessor{constructor(e={}){super(e),this._version=0,this._internalGeometryChange=!1,this._extent=he()}set areaMeasurement(e){this._set("areaMeasurement",e),e!=null&&this.view!=null&&this._initialize(e,this.view)}set view(e){this._set("view",e),e!=null&&this.areaMeasurement!=null&&this._initialize(this.areaMeasurement,e)}get constructed(){return this.areaMeasurement!=null&&this.view!=null}get version(){return this._version}get isEmptyPolygon(){return!this.constructed||this._editGeometry.components.length===0}get isValidPolygon(){return this.constructed&&this.polygonIsClosed}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const e=he(this._extent);return this.forEachVertex(i=>{Fe(e,i.pos)}),e}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(e,i){this.removeAllHandles(),this.addHandles(z(()=>e.geometry,()=>{this._updateEditGeometryFromModelGeometry(e,i)},ee)),this._makeDirty(!0)}_makeDirty(e=!1){this.notifyChange("polygonIsClosed"),this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,i){if(this._version++,this._internalGeometryChange)return;this.removeHandles("EditGeometry");let s=e.geometry;if(s!=null){const r=He(s,i.spatialReference);r==null&&At(e,s.spatialReference,Ne.getLogger(this)),s=r}this._editGeometryOperations=s!=null?Le.fromGeometry(s,i.state.viewingMode):new Le(new Vt("polygon",Gt(!0,!1,i.spatialReference))),this._makeDirty(!0),this.emit("change"),this.addHandles(this._editGeometry.on("change",r=>{this._makeDirty(r.addedVertices!=null||r.removedVertices!=null),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex(i=>{e.push(i)}),e}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get polygonIsClosed(){return this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get firstPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getFirstVertex();if(e!=null)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getLastVertex();if(e!=null)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}getVertex(e){if(!this.constructed||this._editGeometry.components.length===0||this._editGeometry.components[0].vertices.length===0)return null;const i=this._editGeometry.components[0].vertices[0];let s=i;do{if(s.index===e)return s;s=s.rightEdge.rightVertex}while(s!==i&&s!=null);return null}getVertexPositionAsPoint(e){return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const i=this._editGeometry.coordinateHelper;this.forEachVertex((s,r)=>{i.vectorToPoint(s.pos,Me),e(Me,r)})}clear(){this.areaMeasurement!=null&&(this.areaMeasurement.geometry=null)}add(e){if(!this.constructed)return null;if(this._editGeometry.components.length===0){const s=this.view;this._editGeometry.components.push(new Dt(s.spatialReference,s.state.viewingMode))}const i=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),i}close(){if(!this.constructed||this._editGeometry.components.length===0)return null;const e=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),e}ensureContains(e,i=""){let s=!1;if(this._editGeometry.components.forEach(r=>{r.iterateVertices(o=>{o===e&&(s=!0)})}),!s)throw new Error(`vertex doesnt exist ${i}`);return s}setVertexPosition(e,i){if(!this.constructed)return null;const s=this._editGeometryOperations.setVertexPosition(e,this._editGeometry.coordinateHelper.pointToVector(i));return this.emit("change"),s}equals(e){if(this.numVertices!==e.numVertices)return!1;let i=!0;return this.forEachVertexPosition((s,r)=>{const o=e.getVertexPositionAsPointFromIndex(r);s.equals(o)||(i=!1)}),!!i}};a([d({value:null})],w.prototype,"areaMeasurement",null),a([d({value:null})],w.prototype,"view",null),a([d()],w.prototype,"isEmptyPolygon",null),a([d()],w.prototype,"isValidPolygon",null),a([d()],w.prototype,"extent",null),a([d()],w.prototype,"spatialReference",null),a([d()],w.prototype,"numVertices",null),a([d()],w.prototype,"polygonIsClosed",null),w=a([B("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper")],w);const Me=new qe;function xe(t){const e=new jt,{vertex:i,fragment:s}=e;return Wt(i,t),e.attributes.add(N.POSITION,"vec3"),e.attributes.add(N.UV0,"vec2"),e.varyings.add("vUV","vec2"),t.multipassEnabled&&e.varyings.add("depth","float"),i.code.add($e`
    void main(void) {
      vUV = uv0;
      ${t.multipassEnabled?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.include(Ut,t),s.uniforms.add(new kt("size",r=>r.size)),s.uniforms.add(new Pe("color1",r=>r.color1)),s.uniforms.add(new Pe("color2",r=>r.color2)),s.include(Ft),s.code.add($e`
    void main() {
      ${t.multipassEnabled?"terrainDepthTest(depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      fragColor = mix(color2, color1, t);
      ${t.transparencyPassType===j.Color?"fragColor = premultiplyAlpha(fragColor);":""}
    }
  `),e}const li=Object.freeze(Object.defineProperty({__proto__:null,build:xe},Symbol.toStringTag,{value:"Module"}));class X extends Nt{initializeProgram(e){return new qt(e.rctx,X.shader.get().build(this.configuration),Et)}_setPipelineState(e){const i=this.configuration,s=e===j.NONE,r=e===j.FrontFace;return Yt({blending:i.transparent?s?ci:ei(e):null,depthTest:{func:ti(e)},depthWrite:s?i.writeDepth?ii:null:si(e),colorWrite:ri,polygonOffset:s||r?i.polygonOffset?di:null:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}X.shader=new Ht(li,()=>Be(()=>Promise.resolve().then(()=>yi),void 0));const di={factor:0,units:-25},ci=Qt(W.SRC_ALPHA,W.ONE,W.ONE_MINUS_SRC_ALPHA,W.ONE_MINUS_SRC_ALPHA);class A extends Bt{constructor(){super(...arguments),this.transparencyPassType=j.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.multipassEnabled=!1,this.cullAboveGround=!1}}a([V({count:j.COUNT})],A.prototype,"transparencyPassType",void 0),a([V()],A.prototype,"transparent",void 0),a([V()],A.prototype,"writeDepth",void 0),a([V()],A.prototype,"polygonOffset",void 0),a([V()],A.prototype,"multipassEnabled",void 0),a([V()],A.prototype,"cullAboveGround",void 0),a([V({constValue:!1})],A.prototype,"occlusionPass",void 0);class pi extends Kt{constructor(e){super(e,new ui),this.produces=new Map([[K.OPAQUE_MATERIAL,i=>Q(i)&&!this.parameters.transparent],[K.TRANSPARENT_MATERIAL,i=>Q(i)&&this.parameters.transparent&&this.parameters.writeDepth],[K.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,i=>Q(i)&&this.parameters.transparent&&!this.parameters.writeDepth]]),this._configuration=new A}getConfiguration(e,i){return this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.transparencyPassType=i.transparencyPassType,this._configuration.multipassEnabled=i.multipassEnabled,this._configuration.cullAboveGround=i.multipassTerrain.cullAboveGround,this._configuration}createGLMaterial(e){return new mi(e)}createBufferWriter(){return new Zt(Jt)}}class mi extends Xt{beginSlot(e){return this.ensureTechnique(X,e)}}let ui=class extends Tt{constructor(){super(...arguments),this.size=De(1,1),this.color1=F(.75,.75,.75,1),this.color2=F(.5,.5,.5,1),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}};class gi extends Ot{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=G.OccludeAndTransparent,this._geometry=null,this._size=De(1,1),this._color1=F(1,.5,0,.5),this._color2=F(1,1,1,.5),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){mt(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){le(e,this._color1)||(de(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){le(e,this._color2)||(de(this._color2,e),this._updateMaterial())}_updateMaterial(){this._checkerBoardMaterial!=null&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new pi({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:this.isDecoration})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){this._checkerBoardMaterial!=null&&e(this._checkerBoardMaterial)}createGeometries(e){if(this._geometry==null||this._checkerBoardMaterial==null)return;const i=_i;Xe(i,this.transform);const s=this._geometry,r=[],o=m();s.position.forEach(l=>{T(o,l,i),r.push(o[0],o[1],o[2])});const n=[];s.uv.forEach(l=>{n.push(l[0],l[1])});const h=new It(this._checkerBoardMaterial,[[N.POSITION,new Se(r,s.triangleIndices,3,!0)],[N.UV0,new Se(n,s.triangleIndices,2,!0)]]);e.addGeometry(h)}}const _i=m();let L=class extends re{get _parameters(){const{accentColor:t,textColor:e}=this.view.effectiveTheme,i=Ze(t),s=ce(t,.5),r=ce(pe(t),.5),o=pe(e,Je.Low);return{accentColor:i,transparentAccentColor:s,transparentContrastColor:r,intersectingLineColor:[1,.2,0,1],textColor:e,textBackgroundColor:me(o,.6),textCalloutColor:me(o,.5),pathLineWidth:3,perimeterLineWidth:2,projectionLineWidth:2,projectionLineStippleSize:5,labelDistance:25}}get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,perimeterLength:this._perimeterLengthLabel}}}constructor(t){super(t),this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._origin=m(),this._originTransform=xt(),this.messages=null,this.viewData=fi,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:t,_parameters:e,view:i}=this;this._path=new E({view:i,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:!0}),this._intersectedPath=new E({view:i,attached:!0,width:e.pathLineWidth,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:!0}),this._perimeter=new E({view:i,attached:!0,width:e.perimeterLineWidth,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:!0}),this._intersectedPerimeter=new E({view:i,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:!0}),this._projectionLines=new E({view:i,attached:!0,width:e.projectionLineWidth,stipplePattern:oi(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:G.OccludeAndTransparent,isDecoration:!0}),this._measurementArea=new gi({view:i,attached:!0,isDecoration:!0});const s={attached:!0,view:i,isDecoration:!0};this._areaLabel=new we({...s,fontSize:q.Large}),this._perimeterLengthLabel=new we({...s,fontSize:q.Small}),this.addHandles([z(()=>[t.mode,this.visible,t.unit,t.measurementData,t.stagedPoint],()=>this._update(),ee),z(()=>{var r;return(r=i.state)==null?void 0:r.camera},()=>this._updateLabels(),ee),Ke(()=>this._updateMessageBundle()),z(()=>this._parameters,({accentColor:r,transparentAccentColor:o,transparentContrastColor:n,textColor:h,textBackgroundColor:l,textCalloutColor:p})=>{const{_path:c,_intersectedPath:u,_perimeter:g,_projectionLines:f,_measurementArea:$,_areaLabel:C,_perimeterLengthLabel:M}=this;c.color=r,u.color=r,g.color=r,f.color=r,$.color1=o,$.color2=n,C.textColor=h,C.backgroundColor=l,C.calloutColor=p,M.textColor=h,M.backgroundColor=l,M.calloutColor=p},Qe)]),this._updateMessageBundle()}destroy(){this._measurementArea=P(this._measurementArea),this._path=P(this._path),this._intersectedPath=P(this._intersectedPath),this._perimeter=P(this._perimeter),this._intersectedPerimeter=P(this._intersectedPerimeter),this._areaLabel=P(this._areaLabel),this._perimeterLengthLabel=P(this._perimeterLengthLabel),this._projectionLines=P(this._projectionLines),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;t!=null&&(this._updateViewData(t,e.path,e.stagedPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e,i){const s=t.validMeasurement,r=t.actualMeasurementMode==="geodesic",o=r?t.geodesicArea:t.area;let n=1;if(o){const l=this._toPreferredAreaUnit(o,this.analysisViewData.unit);n=Ye(Math.sqrt(l.value)/Math.sqrt(300)),n*=Math.sqrt(et(1,l.unit,"square-meters")),n/=t.unitNormalizer.normalizeDistance(1)}const h={validMeasurement:s,numVertices:t.numVertices,hasStagedVertex:t.hasStagedVertex,path:e,pathVersion:e.version,stagedPoint:i,measurementData:t,mode:t.actualMeasurementMode,positionsGeographic:t.positionsGeographic,positionsRenderCoords:t.positionsRenderCoords,positionsProjected:t.positionsProjectedWorldCoords,positionsFittedRenderCoords:t.positionsFittedRenderCoords,intersectingSegments:r?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:r?t.geodesicTriangleIndices:t.triangleIndices,fittingMode:t.fittingMode,areaCentroid:r?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:s?0:e.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:n};this._set("viewData",h)}_updateOrigin(){const t=this.viewData;se(t.positionsRenderCoords,this._origin),tt(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,i=this.view.renderCoordsHelper.spatialReference,s=e.mode,r=[],o=[],n=[],h=e.numVertices,l=e.validMeasurement?h:h-1;for(let c=0;c<l;++c){const u=e[t][c],g=e[t][(c+1)%h];let f=null;switch(s){case"euclidean":f=new zt(u,g);break;case"geodesic":f=new Rt(u,g,i)}e.intersectingSegments.has(c)?n.push(f):o.push(f),r.push(f)}let p=null;return e.validMeasurement&&e.hasStagedVertex&&l>=2?p=r[r.length-2]:e.hasStagedVertex&&l>=1&&(p=r[r.length-1]),{all:r,nonIntersecting:o,intersecting:n,stagedSegment:p}}_updatePathSegments(){const{visible:t}=this,e=this._createSegments("positionsRenderCoords");this._path.setGeometryFromSegments(e.nonIntersecting,this._origin),this._path.visible=t,this._intersectedPath.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPath.visible=t,this._pathSegments=e.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean",e=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsProjected,position:t.positionsFittedRenderCoords,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,i=t.mode,s=t.numVertices;if(s>0&&t.validMeasurement&&i==="euclidean"){const r=[];for(let o=0;o<s;++o){const n=m();T(n,t.positionsRenderCoords[o],this._origin);const h=m();T(h,t.positionsFittedRenderCoords[o],this._origin),r.push([n,h])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{measurementData:e,mode:i,path:s}=t;if(!s)return;const r=this.visible,o=this._formatAreaLabel(this.messages,i==="geodesic"?e.geodesicArea:e.area,this.analysisViewData.unit);if(o!=null?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=o,this._areaLabel.visible=t.validMeasurement&&t.intersectingSegments.size===0&&r):this._areaLabel.visible=!1,this._set("areaLabel",o),t.validMeasurement&&t.intersectingSegments.size===0){const n=t.mode==="geodesic",h=n?e.geodesicPathLength:e.validMeasurement?e.perimeterLength:e.pathLength,l=this._formatLengthLabel(this.messages,h,this.analysisViewData.unit);this._set("perimeterLengthLabel",l),this._perimeterLengthLabel.distance=this._parameters.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=l,this._perimeterLengthLabel.visible=!0;let p=!0;for(let c=0;c<t.numVertices;++c){const u=(t.perimeterLengthLabelSegmentIndex+c)%t.numVertices,g=n||!e.validMeasurement?this._pathSegments[u]:this._perimeterSegments[u];if(p=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:g,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;p=!1}this._perimeterLengthLabel.visible=p&&r}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(t,e){return ct(t,this._preferredAreaUnit(t,e))}_preferredAreaUnit(t,e){switch(e){case"metric":return st(t.value,t.unit);case"imperial":return it(t.value,t.unit);default:return e}}_preferredLengthUnit(t,e){const i=this._deriveLengthUnitFromAreaUnit(e);switch(i){case"metric":return ot(t.value,t.unit);case"imperial":return rt(t.value,t.unit);default:return i}}_deriveLengthUnitFromAreaUnit(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(t,e,i){return t&&e&&Ce(t,e,this._preferredAreaUnit(e,i))}_formatLengthLabel(t,e,i){return t&&e&&Ce(t,e,this._preferredLengthUnit(e,i))}_updateMessageBundle(){this.loadingMessages=!0,nt("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};var q;a([d()],L.prototype,"_parameters",null),a([d()],L.prototype,"view",void 0),a([d()],L.prototype,"messages",void 0),a([d()],L.prototype,"analysis",void 0),a([d()],L.prototype,"viewData",void 0),a([d()],L.prototype,"analysisViewData",void 0),a([d({readOnly:!0})],L.prototype,"areaLabel",void 0),a([d({readOnly:!0})],L.prototype,"perimeterLengthLabel",void 0),a([d()],L.prototype,"loadingMessages",void 0),a([d()],L.prototype,"visible",null),L=a([B("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],L),function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"}(q||(q={}));const fi={validMeasurement:!1,numVertices:0,hasStagedVertex:!1,path:null,pathVersion:-1,stagedPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null};let _=class extends ht(re){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.stagedPoint=null,this.mode=te.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new w({view:e,areaMeasurement:t}),this.analysisVisualization=new L({view:e,analysis:t,analysisViewData:this}),this.analysisController=new R({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=P(this.analysisController),this.analysisVisualization=P(this.analysisVisualization),this.path.destroy()}get updating(){var t;return!!((t=this.analysisVisualization)!=null&&t.loadingMessages)}get result(){const{measurementData:t}=this;return t==null?{area:null,mode:null,perimeter:null}:t.actualMeasurementMode==="euclidean"?{area:t.area,perimeter:t.perimeterLength,mode:"euclidean"}:{area:t.geodesicArea,perimeter:t.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};a([d({readOnly:!0})],_.prototype,"type",void 0),a([d({constructOnly:!0,nonNullable:!0})],_.prototype,"analysis",void 0),a([d()],_.prototype,"updating",null),a([d()],_.prototype,"analysisVisualization",void 0),a([d()],_.prototype,"analysisController",void 0),a([d()],_.prototype,"result",null),a([d()],_.prototype,"measurementData",void 0),a([d()],_.prototype,"viewData",null),a([d()],_.prototype,"validMeasurement",null),a([d()],_.prototype,"path",void 0),a([d()],_.prototype,"lastDraggedVertex",void 0),a([d()],_.prototype,"stagedPoint",void 0),a([d()],_.prototype,"mode",void 0),a([d()],_.prototype,"unit",null),a([d(at)],_.prototype,"_defaultUnit",void 0),_=a([B("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],_);const mr=_,yi=Object.freeze(Object.defineProperty({__proto__:null,build:xe},Symbol.toStringTag,{value:"Module"}));export{mr as default};
