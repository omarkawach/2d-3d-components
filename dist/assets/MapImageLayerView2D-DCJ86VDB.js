import{a_ as n,P as g,cr as d,o as a,y as h,X as l}from"./index-8ERthB3p.js";import{c as u}from"./GraphicsCollection-CKieR40M.js";import{a as c}from"./BitmapContainer-Cmneaqp9.js";import{m as f}from"./LayerView2D-BSaaWl8y.js";import{$ as y}from"./GraphicsView2D-DdW_GboH.js";import{h as _}from"./HighlightGraphicContainer-JbKoneRB.js";import{v as H}from"./ExportStrategy-D5tWx3Ul.js";import{u as w}from"./LayerView-DO6TerBv.js";import{p as v}from"./MapImageLayerView-BsY2zu-r.js";import{i as $}from"./RefreshableLayerView-B0936Ssp.js";import{U as x}from"./MapServiceLayerViewHelper-C2LKJQB0.js";import{r as U}from"./drapedUtils-BdDXXXz6.js";import"./WGLContainer-DrWw77ek.js";import"./definitions-B54owTRu.js";import"./LabelMetric-B0IKUycz.js";import"./enums-DSseSvdG.js";import"./enums-BRqP_wXA.js";import"./Texture-O7Pyotwx.js";import"./Program-BB52p2Mx.js";import"./BufferObject-CaEbWulZ.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-BhuXqU4L.js";import"./vec2f32-BbH2jxlN.js";import"./VertexArrayObject-Cv4RwmVi.js";import"./WGLBrushVTLSymbol-DSNnpuOI.js";import"./DefaultUI-DIlogOoy.js";import"./jsxFactory-BxQYPm-b.js";import"./UpdatingHandles-ugzlsvZF.js";import"./screenUtils-BuM_Fswi.js";import"./signal-DoM1gSF0.js";import"./ReactiveMap-C-O0lKvJ.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./heightModelInfoUtils-CdtST1Ra.js";import"./ViewingMode-Dodu7ZZk.js";import"./Viewpoint-CB1GAuK3.js";import"./Cyclical-BY9qISY1.js";import"./mat2d-D9yIh3Tx.js";import"./mat2df32-orApM5a3.js";import"./mat2df64-CBKYtunK.js";import"./mat3-CqxUQBLP.js";import"./vec2-Dt9Foiri.js";import"./vec2f64-Diu2Kaa8.js";import"./normalizeUtils-Cm7zySIZ.js";import"./normalizeUtilsCommon-DRIluWnF.js";import"./utils-1zmckiYC.js";import"./utils-D-bI9C7C.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-DfZw-NIf.js";import"./accessibleHandler-DsewpcQ5.js";import"./Compass-C-feYp_a.js";import"./utils-DsJqvptN.js";import"./GoTo-BzS22eXk.js";import"./NavigationToggle-QjJqvxo5.js";import"./Zoom-Ct1er6X1.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-pu9RBNlY.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-BlB59bbU.js";import"./DefaultVertexAttributeLayouts-Co_GH1pH.js";import"./DisplayObject-B9oc5ibO.js";import"./TileKey-Drwp1tmy.js";import"./Container-lXzdRU2v.js";import"./EffectView-C6VBe3AA.js";import"./highlightReasons-LsVPCozu.js";import"./Tile-BZM3wEBG.js";import"./quickselect-D0_cvEX6.js";import"./earcut-BqgeR2O3.js";import"./featureConversionUtils-BzfH5fda.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./OptimizedGeometry-DLPswkPy.js";import"./scaleUtils-0K_Ry6I1.js";import"./ClipRect-tFFfZq22.js";import"./CIMSymbolHelper-C-U_lWVp.js";import"./BidiEngine-DL33fnW5.js";import"./fontUtils-Dz0hN_7q.js";import"./GeometryUtils-_MjrRDxY.js";import"./Rect-CUzevAry.js";import"./AttributeStore-Iy7eed8g.js";import"./UpdateTracking2D-BUPNqTRV.js";import"./TurboLine-B0jwHtDu.js";import"./BindType-BmZEZMMh.js";import"./Util-B8vYs4k8.js";import"./constants-D5zmR9t2.js";import"./labelFormatUtils-BN4HkzS9.js";import"./TimeOnly-CdukLkzZ.js";import"./centroid-DdLmOD72.js";import"./timeSupport-BFvqZpey.js";import"./json-Wa8cmqdu.js";import"./FeatureCommandQueue-ury-Cf8e.js";import"./heatmapTextureUtils-Ccf4XLi5.js";import"./QueueProcessor-DFkcFyJt.js";import"./normalizeUtilsSync-CrK-RMPr.js";import"./AGraphicContainer-CZXUn-ju.js";import"./TechniqueInstance-c4xdpVEx.js";import"./TileContainer-BpQW-7a1.js";import"./vec3f32-Cw9Q6TO_.js";import"./TileInfo-BsGWbS2H.js";import"./TileKey-DZd6gJy7.js";import"./Bitmap-B3-IcBfD.js";import"./TileStrategy-BMTAwxMt.js";import"./ExportImageParameters-cP65v3sA.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-Bh-ioSNZ.js";import"./popupUtils-BHYiW8I-.js";let p=class extends v($(f(w))){constructor(){super(...arguments),this._highlightGraphics=new u,this._updateHash=""}fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(r=>{n(r)||g.getLogger(this).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:r}=this.layer,e=r>=10.3,s=r>=10;this._bitmapContainer=new c,this.container.addChild(this._bitmapContainer),this._highlightView=new y({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new _(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new x({createFetchPopupFeaturesQueryGeometry:(o,m)=>U(o,m,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(o,m)=>{this._highlightView.graphicUpdateHandler({graphic:o,property:m})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new H({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:e,imageNormalizationSupported:s,hidpi:!0}),this.addAttachHandles(d(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,r,e){return this.layer.fetchImage(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...e})}fetchImageBitmap(t,i,r,e){return this.layer.fetchImageBitmap(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...e})}highlight(t){return this._popupHighlightHelper.highlight(t)}};a([h()],p.prototype,"strategy",void 0),a([h()],p.prototype,"updating",void 0),p=a([l("esri.views.2d.layers.MapImageLayerView2D")],p);const Ci=p;export{Ci as default};
