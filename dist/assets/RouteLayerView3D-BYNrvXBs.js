import{gl as d,cs as h,gJ as u,eb as y,ak as l,cr as c,o as e,y as p,X as g}from"./index-8ERthB3p.js";import{m as f,c as b,O as I,f as _,j as w,g as O}from"./RouteInfo-Cu7cXOCu.js";import{O as v}from"./Stop-CReeEpiF.js";import{n as V}from"./LayerView3D-y7LfmsJ-.js";import{O as S}from"./GraphicsProcessor-B0rTvHPS.js";import{t as G}from"./WaterSurface.glsl-JBHYhfkH.js";import{l as C}from"./projectExtentUtils-9sG7uFGp.js";import{h as $}from"./EventedSet-DUmR4FeL.js";import{C as P}from"./RenderGeometry-rcUvJmRA.js";import{u as R}from"./LayerView-DO6TerBv.js";import"./heightModelInfoUtils-CdtST1Ra.js";import"./UpdatingHandles-ugzlsvZF.js";import"./hydratedFeatures-DqrDm0_F.js";import"./projectVectorToVector-C3SBBDgz.js";import"./projectPointToVector-qKp-AJ2b.js";import"./Graphics3DObjectStates-CZBjX6i5.js";import"./dehydratedFeatures-Cp-_lWz0.js";import"./Scheduler-DaHJO6l7.js";import"./signal-DoM1gSF0.js";import"./debugFlags-BbJIqrPU.js";import"./RenderState-DaVlEYWY.js";import"./rendererConversion-eHDRAZSQ.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedGeometry-DLPswkPy.js";import"./optimizedFeatureQueryEngineAdapter-DY8fepQr.js";import"./centroid-DdLmOD72.js";import"./ColorMaterial.glsl-uPKQoFFi.js";import"./mat3-CqxUQBLP.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./vec2f64-Diu2Kaa8.js";import"./BufferView-CHYzaV9A.js";import"./vec2-Dt9Foiri.js";import"./Texture-C7A05GrI.js";import"./interfaces-B8ge7Jg9.js";import"./BindType-BmZEZMMh.js";import"./Util-B8vYs4k8.js";import"./enums-DSseSvdG.js";import"./Texture-O7Pyotwx.js";import"./VertexAttribute-BnAa5VW0.js";import"./basicInterfaces-DngWxyLO.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Material-DwPnlQDw.js";import"./ContentObject-BTgEhnct.js";import"./ViewingMode-Dodu7ZZk.js";import"./requestImageUtils-DP1V3HlH.js";import"./InterleavedLayout-s3MgOYN8.js";import"./types-D0PSWh4d.js";import"./VertexColor.glsl-CScvx9pF.js";import"./OrderIndependentTransparency-Cua2R8AE.js";import"./floatRGBA-CCqnXShd.js";import"./PooledRBush-CjYPNqwP.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./ElevationProvider-Bd4qfXCi.js";import"./sphere-Bf4ezJdT.js";import"./ObjectStack-BPo9QGhV.js";import"./plane-Du3EYICn.js";import"./quatf64-BrpT0VRp.js";import"./mathUtils-iSLnUy_4.js";import"./boundedPlane-CLJ-Xnn_.js";import"./lineSegment-DVvvMBnG.js";import"./verticalOffsetUtils-BYv4Nk2v.js";import"./orientedBoundingBox-BQvYwCTM.js";import"./quat-DUnoL8dP.js";import"./spatialReferenceEllipsoidUtils-CmEPjh7T.js";import"./computeTranslationToOriginAndRotation-BbJd4iYX.js";import"./Attribute-B-NAci_J.js";import"./screenUtils-BuM_Fswi.js";import"./popupUtils-BHYiW8I-.js";import"./layerViewUtils-Bi2wmOiN.js";import"./Geometry-CqGtfd4N.js";import"./Indices-DP3oX5Sg.js";import"./triangle-CTblFuF6.js";import"./vec2f32-BbH2jxlN.js";import"./featureConversionUtils-BzfH5fda.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./edgeUtils-D8J_3GIe.js";import"./earcut-BqgeR2O3.js";import"./DoubleArray-068mylUp.js";import"./vec3-DPXcG_yS.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-C0V38kt7.js";import"./deduplicate-j8p9VETP.js";import"./Normals-BAXqRpCA.js";import"./objectResourceUtils-D-wPKn4W.js";import"./devEnvironmentUtils-Blrp8lZ5.js";import"./DefaultMaterial_COLOR_GAMMA-D4SZcGoz.js";import"./resourceUtils-ayGD6aG4.js";import"./NestedMap-DgiGbX8E.js";import"./symbolColorUtils-B_k_VgHH.js";import"./CIMSymbolHelper-C-U_lWVp.js";import"./BidiEngine-DL33fnW5.js";import"./fontUtils-Dz0hN_7q.js";import"./GeometryUtils-_MjrRDxY.js";import"./enums-BRqP_wXA.js";import"./definitions-B54owTRu.js";import"./mat2d-D9yIh3Tx.js";import"./mat2df32-orApM5a3.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./cimSymbolUtils-DwzauUMk.js";import"./utils-j-RBNfeR.js";import"./lineStippleUtils-B9K4R8oO.js";import"./projectVectorToPoint-CPW7kXva.js";import"./MeshComponent-BCGFLGQh.js";import"./imageUtils-D1MsbWS6.js";import"./meshVertexSpaceUtils-KRc33Yrq.js";import"./MeshLocalVertexSpace-C8ABjEju.js";import"./georeference-CwPKO8dc.js";import"./axisAngleDegrees-CaSFQR2z.js";import"./interfaces-DkjgzG8v.js";import"./frustum-BrAPXuhm.js";import"./DefaultLayouts-BrmJbx_o.js";import"./webStyleSymbolUtils-BzDS5WjL.js";import"./glUtil-DS73TAjp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./Octree-E7a40xr7.js";import"./BufferObject-CaEbWulZ.js";import"./Intersector-CTjLkyei.js";import"./weather-D00pIeau.js";import"./geometryServiceUtils-B-h5lvUN.js";import"./project-7u3NBcq6.js";import"./utils-1zmckiYC.js";import"./utils-D-bI9C7C.js";import"./vec3f32-Cw9Q6TO_.js";import"./Intersector-8rpRuT_8.js";import"./VertexArrayObject-Cv4RwmVi.js";function E(t){return t instanceof f||t instanceof b||t instanceof I||t instanceof _||t instanceof w||t instanceof O||t instanceof v}let o=class extends V(R){constructor(){super(...arguments),this.type="route-3d",this.loadedGraphics=new $,this._byObjectID=new Map,this.slicePlaneEnabled=!1,this.fullExtentInLocalViewSpatialReference=null}initialize(){this._set("processor",new S({owner:this,scaleVisibilityEnabled:!0,frustumVisibilityEnabled:!0})),this.addResolvingPromise(this.processor.initializePromise),this._updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),d),this.addResolvingPromise(C(this).then(t=>this.fullExtentInLocalViewSpatialReference=t)),this.addHandles(h(()=>{var t,r;return(r=(t=this.view)==null?void 0:t.basemapTerrain)==null?void 0:r.ready},()=>()=>this.notifyChange("updating"),{once:!0}))}destroy(){var t;this._updatingHandles.removeAll(),this._set("processor",u(this.processor)),(t=this._get("_routeItems"))==null||t.destroy()}get _routeItems(){return new y({getCollections:()=>[this.layer.pointBarriers,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.stops,this.layer.directionLines,this.layer.directionPoints,this.layer.routeInfo!=null?new l([this.layer.routeInfo]):null]})}_routeItemsChanged(t){if(t.removed.length){this.loadedGraphics.removeMany(t.removed.map(r=>{const i=this._byObjectID.get(r);return this._byObjectID.delete(r),i}));for(const r of t.removed)this.removeHandles(r)}if(t.added.length){this.loadedGraphics.addMany(t.added.map(r=>{const i=r.toGraphic();return this._byObjectID.set(r,i),i}));for(const r of t.added)this.addHandles([c(()=>r.geometry,(i,s)=>{this._updateGraphic(r,"geometry",i,s)}),c(()=>r.symbol,(i,s)=>{this._updateGraphic(r,"symbol",i,s)})],r)}}get legendEnabled(){var t;return this.canResume()&&!((t=this.processor)!=null&&t.frustumVisibilitySuspended)}getSuspendInfo(){var r,i;const t=super.getSuspendInfo();return t.outsideScaleRange=((r=this.processor)==null?void 0:r.scaleVisibilitySuspended)??!1,t.outsideOfView=((i=this.processor)==null?void 0:i.frustumVisibilitySuspended)??!1,t}getHit(t){return this.processor.getHit(t)}whenGraphicBounds(t,r){return this.processor.whenGraphicBounds(t,r)}computeAttachmentOrigin(t,r){var i;return(i=this.processor)==null?void 0:i.computeAttachmentOrigin(t,r)}getSymbolLayerSize(t,r){return this.processor.getSymbolLayerSize(t,r)}async queryGraphics(){return new l(this.loadedGraphics.toArray())}maskOccludee(t){return this.processor.maskOccludee(t)}highlight(t){return E(t)&&(t=this._byObjectID.get(t)),this.processor.highlight(t)}get updatePolicy(){var t;return((t=this.processor)==null?void 0:t.graphicsCore.effectiveUpdatePolicy)||P.SYNC}canResume(){var t;return super.canResume()&&!((t=this.processor)!=null&&t.scaleVisibilitySuspended)}isUpdating(){var t,r,i;return!(!((t=this.processor)!=null&&t.updating)&&((i=(r=this.view)==null?void 0:r.basemapTerrain)!=null&&i.ready))}get performanceInfo(){var t,r;return new G(((t=this.processor)==null?void 0:t.graphicsCore.usedMemory)??0,this.loadedGraphics.length,-1,-1,0,((r=this.processor)==null?void 0:r.graphicsCore.performanceInfo)??null)}_updateGraphic(t,r,i,s){var n;const a=this._byObjectID.get(t);a[r]=i,m.graphic=a,m.property=r,m.oldValue=s,m.newValue=i,(n=this.processor)==null||n.graphicsCore.graphicUpdateHandler(m)}};e([p()],o.prototype,"_routeItems",null),e([p()],o.prototype,"loadedGraphics",void 0),e([p({readOnly:!0})],o.prototype,"legendEnabled",null),e([p()],o.prototype,"layer",void 0),e([p({readOnly:!0})],o.prototype,"processor",void 0),e([p({type:Boolean})],o.prototype,"slicePlaneEnabled",void 0),o=e([g("esri.views.3d.layers.RouteLayerView3D")],o);const m={graphic:null,property:null,oldValue:null,newValue:null},Zr=o;export{Zr as default};
