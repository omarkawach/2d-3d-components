function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["assets/I3STreeDebugger-CxNqTMxr.js","assets/index-8ERthB3p.js","assets/index-CzRN3C0i.css","assets/mat4f64-Dk4dwAN8.js","assets/TileTreeDebugger-4lTkqSUZ.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
import{bE as V,kk as j,gJ as y,gl as N,cr as H,_ as q,hv as Q,P as w,de as D,kl as U,g5 as T,dg as k,km as z,kn as B,a7 as F,cU as W,hT as Y,W as S,o as c,y as m,gL as Z,X as K,bW as J}from"./index-8ERthB3p.js";import{n as X,e as ee}from"./projectVectorToVector-C3SBBDgz.js";import{t as G,e as te}from"./DoubleArray-068mylUp.js";import{o as re}from"./LayerConstants-B33OP6sh.js";import{Z as ie}from"./dehydratedFeatures-Cp-_lWz0.js";import{c as oe}from"./hydratedFeatures-DqrDm0_F.js";import{D as A,Y as se}from"./I3SOverrides-DN8WSBS7.js";import{h as ae}from"./WorkerHandle-DKpIZ9kk.js";import{n as ne}from"./LayerView3D-y7LfmsJ-.js";import{P as de,l as le}from"./HeatmapDensity.glsl-BN4vWD93.js";import{w as pe,c as he,i as ue,u as ce,f as me,a as ge}from"./SceneLayerView-Okr6zrc1.js";import{Y as _e,t as fe,N as ye,A as be,Q as R}from"./I3SUtil-DvcgZFwB.js";import{u as ve,t as Ie}from"./TemporalSceneLayerView-DbfVwYek.js";import{t as xe}from"./WaterSurface.glsl-JBHYhfkH.js";import{i as Ee}from"./PopupSceneLayerView-DPpelsIn.js";import{t as C}from"./Material-DwPnlQDw.js";import{J as we}from"./orientedBoundingBox-BQvYwCTM.js";import{t as Ne}from"./EdgeShader.glsl-DNm98Ote.js";import{s as Ce}from"./Attribute-B-NAci_J.js";import{C as Oe}from"./RenderGeometry-rcUvJmRA.js";import{u as De}from"./popupUtils-BHYiW8I-.js";import{I as Fe}from"./Scheduler-DaHJO6l7.js";import"./projectPointToVector-qKp-AJ2b.js";import"./ViewingMode-Dodu7ZZk.js";import"./mat3-CqxUQBLP.js";import"./mat3f64-BBpwCtoL.js";import"./RenderTexture-D39vYIOj.js";import"./meshVertexSpaceUtils-KRc33Yrq.js";import"./MeshLocalVertexSpace-C8ABjEju.js";import"./vec3-DPXcG_yS.js";import"./sphere-Bf4ezJdT.js";import"./ObjectStack-BPo9QGhV.js";import"./plane-Du3EYICn.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-BrpT0VRp.js";import"./vec2f64-Diu2Kaa8.js";import"./mathUtils-iSLnUy_4.js";import"./resourceUtils-ayGD6aG4.js";import"./basicInterfaces-DngWxyLO.js";import"./Texture-C7A05GrI.js";import"./interfaces-B8ge7Jg9.js";import"./BindType-BmZEZMMh.js";import"./Util-B8vYs4k8.js";import"./enums-DSseSvdG.js";import"./Texture-O7Pyotwx.js";import"./VertexAttribute-BnAa5VW0.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./vec2-Dt9Foiri.js";import"./requestImageUtils-DP1V3HlH.js";import"./ContentObject-BTgEhnct.js";import"./objectResourceUtils-D-wPKn4W.js";import"./devEnvironmentUtils-Blrp8lZ5.js";import"./BufferView-CHYzaV9A.js";import"./DefaultMaterial_COLOR_GAMMA-D4SZcGoz.js";import"./quat-DUnoL8dP.js";import"./Indices-DP3oX5Sg.js";import"./vec2f32-BbH2jxlN.js";import"./NestedMap-DgiGbX8E.js";import"./Geometry-CqGtfd4N.js";import"./triangle-CTblFuF6.js";import"./lineSegment-DVvvMBnG.js";import"./InterleavedLayout-s3MgOYN8.js";import"./types-D0PSWh4d.js";import"./VertexColor.glsl-CScvx9pF.js";import"./OrderIndependentTransparency-Cua2R8AE.js";import"./verticalOffsetUtils-BYv4Nk2v.js";import"./symbolColorUtils-B_k_VgHH.js";import"./RenderState-DaVlEYWY.js";import"./I3SNode-CDG95tIx.js";import"./ElevationRange-BrgM1moX.js";import"./I3SBinaryReader-Y2aVLbE7.js";import"./spatialReferenceEllipsoidUtils-CmEPjh7T.js";import"./frustum-BrAPXuhm.js";import"./layerViewUtils-Bi2wmOiN.js";import"./ReactiveSet-B8Rb7Vms.js";import"./meshFeatureSet-Bt56ZleR.js";import"./Mesh-CJEK7lO8.js";import"./axisAngleDegrees-CaSFQR2z.js";import"./MeshComponent-BCGFLGQh.js";import"./imageUtils-D1MsbWS6.js";import"./georeference-CwPKO8dc.js";import"./computeTranslationToOriginAndRotation-BbJd4iYX.js";import"./triangulationUtils-C0V38kt7.js";import"./earcut-BqgeR2O3.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./deduplicate-j8p9VETP.js";import"./External-tJCk07ZV.js";import"./infoFor3D-CxOdoily.js";import"./FeatureLayerView3D-BH2hEfk0.js";import"./FeatureLayerViewBase3D-BjnNcvU0.js";import"./query-BtFvR4zF.js";import"./normalizeUtils-Cm7zySIZ.js";import"./normalizeUtilsCommon-DRIluWnF.js";import"./utils-1zmckiYC.js";import"./utils-D-bI9C7C.js";import"./pbfQueryUtils-D79yLlDs.js";import"./pbf-C8CvrhFv.js";import"./OptimizedGeometry-DLPswkPy.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./EventedSet-DUmR4FeL.js";import"./signal-DoM1gSF0.js";import"./FeatureLayerView-Dov96BNZ.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./LayerView-DO6TerBv.js";import"./UpdatingHandles-ugzlsvZF.js";import"./RefreshableLayerView-B0936Ssp.js";import"./geometryServiceUtils-B-h5lvUN.js";import"./project-7u3NBcq6.js";import"./ReactiveMap-C-O0lKvJ.js";import"./dehydratedFeatureComparison-DdCJ1gSj.js";import"./Viewpoint-CB1GAuK3.js";import"./Cyclical-BY9qISY1.js";import"./jsxFactory-BxQYPm-b.js";import"./GraphicsCollection-CKieR40M.js";import"./vec3f32-Cw9Q6TO_.js";import"./ElevationProvider-Bd4qfXCi.js";import"./boundedPlane-CLJ-Xnn_.js";import"./weather-D00pIeau.js";import"./Octree-E7a40xr7.js";import"./floatRGBA-CCqnXShd.js";import"./Intersector-8rpRuT_8.js";import"./glUtil-DS73TAjp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-Cv4RwmVi.js";import"./BufferObject-CaEbWulZ.js";import"./debugFlags-BbJIqrPU.js";import"./ColorMaterial.glsl-uPKQoFFi.js";import"./featureConversionUtils-BzfH5fda.js";import"./edgeUtils-D8J_3GIe.js";import"./SnappingCandidate-O5eRSE6e.js";import"./Normals-BAXqRpCA.js";import"./CIMSymbolHelper-C-U_lWVp.js";import"./BidiEngine-DL33fnW5.js";import"./fontUtils-Dz0hN_7q.js";import"./GeometryUtils-_MjrRDxY.js";import"./enums-BRqP_wXA.js";import"./definitions-B54owTRu.js";import"./mat2d-D9yIh3Tx.js";import"./mat2df32-orApM5a3.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./cimSymbolUtils-DwzauUMk.js";import"./utils-j-RBNfeR.js";import"./lineStippleUtils-B9K4R8oO.js";import"./projectVectorToPoint-CPW7kXva.js";import"./interfaces-DkjgzG8v.js";import"./DefaultLayouts-BrmJbx_o.js";import"./webStyleSymbolUtils-BzDS5WjL.js";import"./Intersector-CTjLkyei.js";import"./RenderCoordsHelper-zH8WjGkC.js";import"./scaleUtils-0K_Ry6I1.js";import"./DefaultUI-DIlogOoy.js";import"./screenUtils-BuM_Fswi.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./heightModelInfoUtils-CdtST1Ra.js";import"./mat2df64-CBKYtunK.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-DfZw-NIf.js";import"./accessibleHandler-DsewpcQ5.js";import"./Compass-C-feYp_a.js";import"./utils-DsJqvptN.js";import"./GoTo-BzS22eXk.js";import"./NavigationToggle-QjJqvxo5.js";import"./Zoom-Ct1er6X1.js";import"./viewpointUtils-BxfIO3H-.js";import"./earthUtils-ir2LnhMw.js";import"./spatialReferenceSupport-DPLkW2jK.js";import"./ElevationSamplerData-CC_B5wrl.js";import"./terrainUtils-hfv3Mblf.js";import"./TileInfo-BsGWbS2H.js";import"./TileKey-DZd6gJy7.js";import"./Environment-B2HYg6Z1.js";import"./projectPointToWGS84ComparableLonLat-D5kdMIn_.js";import"./projectVectorToWGS84ComparableLonLat-DuPw0-Mv.js";import"./Program-BB52p2Mx.js";import"./ShadowCastVisualizeTechniqueConfiguration-DqJ__9Ii.js";import"./ray-CCzLdiTI.js";import"./ZoomMomentumEstimator-PITOvV-p.js";import"./labelFormatUtils-BN4HkzS9.js";import"./FeatureTileDescriptor3D-BLJXkD6Q.js";import"./elevationInfoUtils-sHEwmo9N.js";import"./ElevationQueryTileCache-CV2Fph_A.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./LercDecoder-FUH0zkya.js";import"./RenderableTile-CQN7Nxvi.js";import"./enums-BRzLM11V.js";import"./TileStrategy-BMTAwxMt.js";import"./TileKey-Drwp1tmy.js";import"./QueueProcessor-DFkcFyJt.js";import"./config-MDUrh2eL.js";import"./DefaultVertexAttributeLayouts-Co_GH1pH.js";import"./DisplayObject-B9oc5ibO.js";import"./rasterUtils-DImlUReg.js";import"./StyleDefinition-pu9RBNlY.js";import"./resources-DJFXXcdR.js";import"./edgeProcessing-Crq4tMpw.js";import"./EdgeWorkerHandle-CAkTfCpv.js";import"./workerHelper-CE2O_zfa.js";import"./testSVGPremultipliedAlpha-Dsq4J0WV.js";import"./RenderingContext-CzjLpUzJ.js";import"./ProgramCache-DX9Ty2iR.js";import"./queryForSymbologySnapping-8JLrvhsd.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-CZBjX6i5.js";import"./rendererConversion-eHDRAZSQ.js";import"./optimizedFeatureQueryEngineAdapter-DY8fepQr.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-CjYPNqwP.js";import"./quickselect-D0_cvEX6.js";import"./QueryEngine-BnxbU8wo.js";import"./WhereClause-CDY1MzWK.js";import"./TimeOnly-CdukLkzZ.js";import"./timeSupport-BFvqZpey.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-RSnx-Q9D.js";import"./utils-B6UP7_Wm.js";import"./utils-8IYHD2E1.js";import"./ClassBreaksDefinition-CNLSnW5r.js";import"./FeatureStore-BZ4BTL-O.js";import"./BoundsStore-CvIYB3Tm.js";import"./heatmapTextureUtils-Ccf4XLi5.js";import"./projectExtentUtils-9sG7uFGp.js";class P extends ae{constructor(t){super("SceneLayerWorker","dracoDecompressPointCloudData",{dracoDecompressPointCloudData:i=>[i.geometryBuffer]},t,{hasInitialize:!0})}}class Se extends V{constructor(t,i){super(),this._updateAndCompare=t,this._notifyUpdated=i,this._nodes=new Map,this._graphics=new Map,this._duplicates=new Map}clear(){if(this._graphics.size>0){const t=this.toArray();this._graphics.clear(),this.emit("change",{added:[],removed:t})}this._nodes.clear()}get length(){return this._graphics.size}get(t){return this._graphics.get(t)}getNode(t){return this._nodes.get(t)}hasNode(t){return this._nodes.has(t)}nodes(){return this._nodes.values()}addNode(t,i){this._nodes.set(t,i);const r=i.graphics;if(r.length===0)return;const o=new Set;for(let a=0;a<r.length;a++){const n=r[a],d=n.objectId,p=this._graphics.get(d);if(p){o.add(d),n!==p&&(r[a]=p);const h=this._duplicates.get(d);h?h.push(t):this._duplicates.set(d,[p.nodeIndex,t])}else n.nodeIndex=t,this._graphics.set(d,n)}o.size&&this._updateForeignGraphics(i);const s=o.size>0?r.filter(a=>!o.has(a.objectId)):r;s.length>0&&this.emit("change",{added:s,removed:[]})}removeNode(t){const i=this._nodes.get(t);if(!i)return void console.error("Removing unknown node");this._nodes.delete(t);const r=new Set,o=[];for(const s of i.graphics){const a=s.objectId,n=this._graphics.get(a);if(!n)continue;const d=this._duplicates.get(a);if(d){const p=d.indexOf(t);if(p===-1){console.error("error: removing graphic from node that should not reference it.");continue}if(d.splice(p,1),n.nodeIndex===t){let h=this.getNode(d[0]);for(let l=1;l<d.length;l++){const g=this.getNode(d[l]);(h==null||g!=null&&g.node.level>h.node.level)&&(h=g)}h!=null&&r.add(h)}d.length===1&&this._duplicates.delete(a)}else this._graphics.delete(a),o.push(s)}o.length>0&&this.emit("change",{added:[],removed:o}),r.forEach(s=>this._updateForeignGraphics(s))}_updateForeignGraphics(t){const i=[],r=t.node.index,o=t.node.level;let s=0;for(;s<t.graphics.length;){const a=t.graphics[s].nodeIndex;if(a===r){s++;continue}let n=1;for(;s+n<t.graphics.length&&t.graphics[s+n].nodeIndex===a;)n++;const d=this.getNode(a);if(d!=null&&d.node.level>o)s+=n;else{for(let p=s;p<s+n;p++){const h=t.graphics[p];h.nodeIndex=r,this._updateAndCompare(h,t,p)&&i.push(h)}s+=n}}this._notifyUpdated(i)}toArray(){return Array.from(this._graphics.values())}find(t){let i;return j(this._graphics,r=>!!t(r)&&(i=r,!0)),i}forEach(t){this._graphics.forEach(i=>t(i))}forEachNode(t){this._nodes.forEach((i,r)=>t(i,r))}get nodeCount(){return this._nodes.size}_checkInvariants(){const t=new Map;this._nodes.forEach((r,o)=>{o!==r.node.index&&console.error("Mismatched node index"),r.graphics.forEach(s=>{t.set(s.objectId,1+(t.get(s.objectId)??0));const a=this._duplicates.get(s.objectId);a&&!a.includes(o)&&console.error("Node not listed in duplicate list"),a||s.nodeIndex===o||console.error("Unique graphic does not reference owning node index")})}),this._graphics.size!==t.size&&console.error("Mismatch between actual and expected number of graphics");let i=0;t.forEach((r,o)=>{i+=r>1?1:0;const s=this._graphics.get(o);if(!s)return void console.error("Missing graphic entry");const a=this._nodes.get(s.nodeIndex);if(!a)return void console.error("Graphic references unkown node");const n=this._duplicates.get(o);n?(n.length!==r&&console.error("Wrong number of entries in duplicate list"),n.forEach(d=>{const p=this._nodes.get(d);p?p.node.level>a.node.level&&console.error("Duplicated graphic does not reference highest level node"):console.error("Unknown node in duplicate list")})):r>1&&console.error("Missing duplicates entry")}),this._duplicates.size!==i&&console.error("Mismatch between expected and actual number of duplicate entries")}}const M=ge();class Ge{constructor(t,i,r,o){this.graphics=t,this.featureIds=i,this.attributeInfo=r,this.node=o}}let u=class extends ve(Ie(Ee(ne(pe)))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this._pendingEditsQueue=Promise.resolve(),this.loadedGraphics=new Se((e,t,i)=>Pe(e,t,i),e=>this.processor.graphicsCore.recreateGraphics(e)),this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}tryRecycleWith(e,t){return e.url===this.layer.url&&this._i3sOverrides.isEmpty?e.load(t).then(()=>{var r;_e(this.layer,e,this._i3sOverrides),this.layer=e,this._i3sOverrides.destroy();const i=(r=this.view.resourceController)==null?void 0:r.memoryController;this._i3sOverrides=new A({view:this.view,layer:e,memoryController:i}),y(this._queryEngine),this._setupQueryEngine(),this.processor.resetObjectStates()}):null}initialize(){var t,i;this.addResolvingPromise(this.layer.indexInfo);const e=(t=this.view.resourceController)==null?void 0:t.memoryController;this._i3sOverrides=new A({view:this.view,layer:this.layer,memoryController:e}),fe(this.layer,this.view.spatialReference,this.view.viewingMode),this._fieldsHelper=new he({layerView:this}),this._updatingHandles.add(()=>this.layer.rangeInfos,r=>this._rangeInfosChanged(r),N),this._updatingHandles.add(()=>this.layer.renderer,(r,o)=>this._rendererChange(r,o)),this._updatingHandles.add(()=>[this.parsedDefinitionExpression,this._excludeObjectIdsSorted],()=>this._filterChange()),this.addHandles(H(()=>C.I3S_TREE_SHOW_TILES,r=>{if(r&&!this._treeDebugger){const o=this._controller.crsIndex;q(()=>import("./I3STreeDebugger-CxNqTMxr.js"),__vite__mapDeps([0,1,2,3,4])).then(({I3STreeDebugger:s})=>{!this._treeDebugger&&C.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new s({lv:this,view:this.view,nodeSR:o}))})}else r||!this._treeDebugger||C.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)},N)),this._set("processor",new de({owner:this,preferredUpdatePolicy:Oe.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,setUidToIdOnAdd:!1,dataExtent:this.layer.fullExtent,updateClippingExtent:r=>this._updateClippingExtent(r)})),(i=this.processor.elevationAlignment)==null||i.events.on("invalidate-elevation",({extent:r,spatialReference:o})=>this._controller.updateElevationChanged(r,o)),this.supportsHeightUnitConversion&&(this._verticalScale=Q("point",this.layer.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.initializePromise),this._memCache=this.view.resourceController.memoryController.newCache(`psl-${this.uid}`),this._controller=new se({layerView:this,scaleVisibilityEnabled:!1}),ye(this.layer.geometryDefinitions)&&(this._worker=new P(r=>this.view.resourceController.immediate.schedule(r))),this.addHandles(this.layer.on("apply-edits",r=>this._updatingHandles.addPromise(r.result))),this.addHandles(this.layer.on("edits",r=>{const o=this._pendingEditsQueue.then(()=>this._handleEdits(r)).then();this._pendingEditsQueue=o,this._updatingHandles.addPromise(o)})),this.when(()=>{this._setupQueryEngine(),this._updatingHandles.add(()=>this.maximumNumberOfFeatures,r=>this._controller.featureTarget=r,N),this._updatingHandles.add(()=>this.suspended,r=>{r&&this._removeAllNodeData()})})}destroy(){this._treeDebugger=y(this._treeDebugger),this._i3sOverrides=y(this._i3sOverrides),this._set("processor",y(this.processor)),this._controller=y(this._controller),this._queryEngine=y(this._queryEngine),this._worker=y(this._worker),this._memCache=y(this._memCache),this.loadedGraphics.clear(),this._fieldsHelper=y(this._fieldsHelper)}get i3slayer(){return this.layer}get updatingProgressValue(){var e;return((e=this._controller)==null?void 0:e.updatingProgress)??1}get requiredFields(){var e;return((e=this._fieldsHelper)==null?void 0:e.requiredFields)??[]}get maximumNumberOfFeatures(){var t,i;const e=(i=(t=this.processor)==null?void 0:t.graphicsCore)==null?void 0:i.displayFeatureLimit;return(e==null?void 0:e.maximumNumberOfFeatures)??0}set maximumNumberOfFeatures(e){e!=null?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){var e;return!this.suspended&&!!((e=this._controller)!=null&&e.useMaximumNumberOfFeatures)&&!this._controller.leavesReached}get _excludeObjectIdsSorted(){const e=this.layer.excludeObjectIds;return e.length?e.toArray().sort((t,i)=>t-i):null}get lodFactor(){return this.layer.semantic==="Labels"?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return!1}get hasZ(){return!0}get contentVisible(){var e;return!this.suspended&&!!((e=this._controller)!=null&&e.rootNodeVisible)}get legendEnabled(){var e;return this.contentVisible&&((e=this.i3slayer)==null?void 0:e.legendEnabled)===!0}async whenGraphicAttributes(e,t){return be(this.layer,e,this._getObjectIdField(),t,()=>[...this.loadedGraphics.nodes()])}getHit(e){var r;if(!this.loadedGraphics)return null;const t=oe(this.loadedGraphics.find(o=>o.uid===e),this.layer),i=this._getObjectIdField();return(r=t==null?void 0:t.attributes)!=null&&r[i]?(t.layer=this.layer,t.sourceLayer=this.layer,{type:"graphic",graphic:t,layer:t.layer}):null}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.processor.computeAttachmentOrigin(e,t)}isUpdating(){var e,t,i;return!!((e=this._controller)!=null&&e.updating||(t=this.processor)!=null&&t.updating||(i=this._fieldsHelper)!=null&&i.updating||this.layerFilterUpdating)}highlight(e){return this.processor.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return ue(this._attributeEditingContext,e)}async _decompressBinaryPointData(e,t){const i={geometryBuffer:e.geometryBuffer};this._worker==null&&(this._worker=new P(o=>this.view.resourceController.immediate.schedule(o)));const r=await this._worker.invoke(i,t);if(r==null)throw new Error("Failed to decompress Draco point data");return{positionData:r.positions,featureIds:r.featureIds}}async addNode(e,t,i){var f;if(!O(t)&&!Ae(t))throw new Error;if(this.loadedGraphics.hasNode(e.index))return void w.getLogger(this).error("I3S node "+e.id+" already added");const r=this.layer.fullExtent!=null?Me(this.layer.fullExtent.clone(),.5):null,{featureIds:o,pointPositions:s}=O(t)?await this._extractBinaryPointPositions(e,t,i):this._extractLegacyPointPositions(t),a=new Array;this._validatePositions(e,o,s,r,a);const n=this._controller.crsVertex,d=this.view.spatialReference;D(s,n,0,s,d,0,o.length);const p=O(t)?e.level:0,h=this._createGraphics(o,s,e.index,p),l=new Ge(h,o,t.attributeDataInfo,e);if(await this._i3sOverrides.applyAttributeOverrides(l.featureIds,t.attributeDataInfo,i),e.numFeatures=l.graphics.length,this._updateNodeMemory(e),$(l),a.length>0&&(this._computeObb(e,a,n),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return void this._cacheNodeData(l);if(this._verticalScale!=null)for(const b of l.graphics)this._verticalScale(b.geometry);const g=this.view._stage.renderView.objectAndLayerIdRenderHelper;if(g!=null){const b=U(this.view.map,this.layer.uid);for(let x=0;x<l.featureIds.length;x++){const E=l.featureIds[x];g.setUidToObjectAndLayerId(E,l.graphics[x].uid,this.layer.id,this.layer.uid,this.layer.popupEnabled&&!b&&De(this.layer,(f=this.view.popup)==null?void 0:f.defaultPopupTemplateEnabled),l.node.resources.attributes,x)}}this.loadedGraphics.addNode(e.index,l),this._controller.updateLoadStatus(e.index,!0),this._filterNode(l),this._treeDebugger&&this._treeDebugger.update()}_computeObb(e,t,i){const r=this._controller.crsIndex,o=r.isGeographic?this.view.renderSpatialReference:r;D(t,i,0,t,o,0,t.length/3),e.serviceObbInIndexSR=we(new Ce(t,3)),r.isGeographic&&(X(e.serviceObbInIndexSR.center,o,I,r),e.serviceObbInIndexSR.center=I)}isNodeLoaded(e){return this.loadedGraphics.hasNode(e)}isNodeReloading(){return!1}updateNodeState(){}async _extractBinaryPointPositions(e,t,i){const r=await this._decompressBinaryPointData(t,i),o=r.positionData,s=3,a=o.length/s,n=G(3*a),d=e.serviceObbInIndexSR!=null?e.serviceObbInIndexSR.center:T,p=Math.abs(d[2])*2**-20;for(let h=0;h<a;h++){const l=h*s;n[l]=o[l]+d[0],n[l+1]=o[l+1]+d[1],n[l+2]=o[l+2]+d[2],Math.abs(n[l+2])<p&&(n[l+2]=0)}return{featureIds:r.featureIds?te(r.featureIds):[],pointPositions:n}}_extractLegacyPointPositions(e){var o,s;const t=e.pointData.length,i=G(3*t),r=new Array;for(let a=0;a<t;a++){const n=e.pointData[a],d=n.featureDataPosition,p=d.length,h=((o=n.geometries)==null?void 0:o[0])??$e[p],l=n.featureIds[0];if(h.type!=="Embedded"||h.params.type!=="points"||p<2||p>3)continue;const g=((s=h.params.vertexAttributes)==null?void 0:s.position)??[0,0,0],f=3*r.length;i[f]=d[0]+g[0],i[f+1]=d[1]+g[1],i[f+2]=p===3?d[2]+g[2]:NaN,r.push(l)}return{featureIds:r,pointPositions:i}}_validatePositions(e,t,i,r,o){if(r==null&&e.serviceObbInIndexSR)return;const s=t.length,a=3;for(let n=0;n<s;n++){const d=n*a;k(I,i[d],i[d+1],i[d+2]);const p=!Number.isNaN(i[2]);r==null||(p?z(r,I):B(r,I))||(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&w.getLogger(this).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&w.getLogger(this).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++),e.serviceObbInIndexSR||o.push(I[0],I[1],I[2])}}_createGraphics(e,t,i,r){const o=e.length,s=3,a=this._getObjectIdField(),n=this.processor.graphicsCore,d=new Array,p=this.view.spatialReference;for(let h=0;h<o;h++){const l=e[h],g={};l!=null&&(g[a]=l);const f=l??F.generateUID(),b=h*s,x=isNaN(t[b+2])?void 0:t[b+2],E=ee(t[b],t[b+1],x,p),v=this.loadedGraphics.get(f);if(v!=null)(v.level==null||v.level<r)&&(_.property="geometry",_.graphic=v,_.oldValue=v.geometry,_.newValue=E,v.geometry=E,v.level=r,n.graphicUpdateHandler(_)),d.push(v);else{const L=F.generateUID();d.push({objectId:f,uid:L,geometry:E,attributes:g,visible:!0,nodeIndex:i,level:r})}}return d}_updateNodeMemory(e){e.memory=4096+(e.numFeatures!=null?e.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(e){const t=e.graphics.reduce((i,r)=>ie(r)+i,W(e.featureIds)+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t)}_getMemCacheKey(e){return`${e.index}`}_removeAllNodeData(){this.loadedGraphics.forEachNode((e,t)=>{if(e){const i=e.node;this._updateNodeMemory(i),this._cacheNodeData(e)}this._controller.updateLoadStatus(t,!1)}),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this.loadedGraphics.getNode(e);return t==null?null:(this._controller.updateLoadStatus(e,!1),this.loadedGraphics.removeNode(e),this._treeDebugger&&this._treeDebugger.update(),t)}async loadCachedNodeData(e){var t;return(t=this._memCache)==null?void 0:t.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,i,r){this.loadedGraphics.hasNode(e.index)?w.getLogger(this).error("I3S node "+e.id+" already added"):(await this._i3sOverrides.applyAttributeOverrides(t.featureIds,i,r),this.loadedGraphics.addNode(e.index,t),this._controller.updateLoadStatus(e.index,!0),this._updateNodeMemory(e),t.attributeInfo=i,this._attributeValuesChanged(t),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update())}getLoadedNodeIds(){const e=[];return this.loadedGraphics.forEachNode(t=>e.push(t.node.id)),e.sort()}getVisibleNodes(){const e=new Array;return this.loadedGraphics.forEachNode(t=>e.push(t.node)),e}getLoadedNodeIndices(e){this.loadedGraphics.forEachNode((t,i)=>e.push(i))}getLoadedAttributes(e){const t=this.loadedGraphics.getNode(e);if((t==null?void 0:t.attributeInfo)!=null)return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this.loadedGraphics.getNode(e);if((t==null?void 0:t.attributeInfo)!=null)return t.attributeInfo.attributeData}_setAttributeData(e,t){const i=this.loadedGraphics.getNode(e);(i==null?void 0:i.attributeInfo)!=null&&(i.attributeInfo.attributeData=t,this._attributeValuesChanged(i))}async updateAttributes(e,t,i){const r=this.loadedGraphics.getNode(e);r!=null&&(await this._i3sOverrides.applyAttributeOverrides(r.featureIds,t,i),r.attributeInfo=t,this._attributeValuesChanged(r))}_attributeValuesChanged(e){if($(e),this._filterNode(e),this.processor.graphicsCore.labelsEnabled){const t=e.graphics.map(i=>i.uid);this.processor.graphicsCore.updateLabelingInfo(t)}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||re}_getGlobalIdField(){var e;return(e=this.layer.associatedLayer)==null?void 0:e.globalIdField}async _rendererChange(e,t){const{layer:{fieldsIndex:i}}=this,r=new Set;let o,s;e?(await e.collectRequiredFields(r,i),o=Array.from(r).sort()):o=[],r.clear(),t?(await t.collectRequiredFields(r,i),s=Array.from(r).sort()):s=[],o.length===s.length&&o.every((a,n)=>o[n]===s[n])||this._reloadAllNodes()}_rangeInfosChanged(e){e!=null&&e.length>0&&w.getLogger(this).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this.loadedGraphics.forEachNode(e=>this._filterNode(e))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression,i=this._excludeObjectIdsSorted,r=this._getObjectIdField();for(const o of e.graphics){const s=o.visible,a=!t||this._evaluateClause(t,o),n=i==null||Y(i,o.attributes[r])<0;o.visible=a&&n,s!==o.visible&&(_.graphic=o,_.property="visible",_.oldValue=s,_.newValue=o.visible,this.processor.graphicsCore.graphicUpdateHandler(_))}}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return this.filter!=null?this.filter.createQuery(e):new S(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),t==null?void 0:t.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),t==null?void 0:t.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),t==null?void 0:t.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(e==null?this.createQuery():S.from(e))}_setupQueryEngine(){const e=()=>this.processor.featureStore;this._queryEngine=new le({context:{spatialReference:this.view.spatialReference,layer:this.layer,scheduler:this.view.resourceController.scheduler,get featureStore(){return e()},hasZ:this.hasZ,hasM:this.hasM},priority:Fe.FEATURE_QUERY_ENGINE})}get usedMemory(){var e,t;return((t=(e=this.processor)==null?void 0:e.graphicsCore)==null?void 0:t.usedMemory)??0}get unloadedMemory(){var e,t,i;return .8*((((e=this._controller)==null?void 0:e.unloadedMemoryEstimate)??0)+(((i=(t=this.processor)==null?void 0:t.graphicsCore)==null?void 0:i.unprocessedMemoryEstimate)??0))}get ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}async _handleEdits(e){const t=this._attributeEditingContext,i=await ce(t,e);me(t,i)}get _attributeEditingContext(){const e=this._getObjectIdField(),t=this._getGlobalIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,globalIdField:t,forEachNode:i=>this.loadedGraphics.forEachNode(r=>i(r.node,r.featureIds)),attributeStorageInfo:this.i3slayer.attributeStorageInfo??[],i3sOverrides:this._i3sOverrides,getAttributeData:i=>this.getAttributeData(i),setAttributeData:(i,r,o)=>{this._setAttributeData(i,r);const s=this.loadedGraphics.getNode(i);if(o!=null){const a=this.loadedGraphics.get(o.attributes[e]);a!=null&&this.processor.graphicsCore.recreateGraphics([a])}else s!=null&&this.processor.graphicsCore.recreateGraphics(s.graphics)},clearMemCache:()=>{}}}get performanceInfo(){return new xe(this.usedMemory,this.loadedGraphics.length,-1,this.maximumNumberOfFeatures,this.loadedGraphics.nodeCount,this.processor.graphicsCore.performanceInfo)}get test(){return{controller:this._controller,numNodes:this.loadedGraphics.nodeCount,loadedGraphics:this.loadedGraphics}}};c([m()],u.prototype,"processor",void 0),c([m({type:Z})],u.prototype,"filter",void 0),c([m()],u.prototype,"loadedGraphics",void 0),c([m()],u.prototype,"i3slayer",null),c([m()],u.prototype,"_controller",void 0),c([m()],u.prototype,"updating",void 0),c([m()],u.prototype,"suspended",void 0),c([m()],u.prototype,"holeFilling",void 0),c([m(Ne)],u.prototype,"updatingProgress",void 0),c([m()],u.prototype,"updatingProgressValue",null),c([m(M.requiredFields)],u.prototype,"requiredFields",null),c([m(M.availableFields)],u.prototype,"availableFields",void 0),c([m()],u.prototype,"_fieldsHelper",void 0),c([m({type:Number})],u.prototype,"maximumNumberOfFeatures",null),c([m({readOnly:!0})],u.prototype,"maximumNumberOfFeaturesExceeded",null),c([m()],u.prototype,"_excludeObjectIdsSorted",null),c([m({readOnly:!0})],u.prototype,"lodFactor",null),c([m({readOnly:!0})],u.prototype,"hasM",null),c([m({readOnly:!0})],u.prototype,"hasZ",null),c([m()],u.prototype,"contentVisible",null),c([m({readOnly:!0})],u.prototype,"legendEnabled",null),u=c([K("esri.views.3d.layers.SceneLayerGraphicsView3D")],u);const Yo=u;function Ae(e){return"pointData"in e}function O(e){return"geometryBuffer"in e&&e.geometryBuffer!==null}function Pe(e,t,i){const r=t.attributeInfo;if((r==null?void 0:r.loadedAttributes)==null||r.attributeData==null)return!1;let o=!1;for(const{name:s}of r.loadedAttributes)if(r.attributeData[s]){const a=R(r.attributeData[s],i);a!==e.attributes[s]&&(e.attributes[s]=a,o=!0)}return o}function $(e){const t=e.attributeInfo,i=e.node.index;if((t==null?void 0:t.loadedAttributes)!=null&&t.attributeData!=null)for(let r=0;r<e.graphics.length;r++){const o=e.graphics[r];if(o.nodeIndex===i){o.attributes||(o.attributes={});for(const{name:s}of t.loadedAttributes)t.attributeData[s]&&(o.attributes[s]=R(t.attributeData[s],r))}}}function Me(e,t){return e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,e.zmin!=null&&e.zmax!=null&&(e.zmin-=t,e.zmax+=t),e.mmin!=null&&e.mmax!=null&&(e.mmin-=t,e.mmax+=t),e}const $e={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},I=J(),_={graphic:null,property:null,oldValue:null,newValue:null};export{Yo as default};
