import{fC as m,g1 as R,Z as E,bW as i,dk as x,cj as $,g2 as S,g3 as w,cg as y,dm as g,cf as D,dj as M,di as N}from"./index-8ERthB3p.js";import{t as H,S as T,E as b,F,j as G,e as P}from"./plane-Du3EYICn.js";import{d as U}from"./sphere-Bf4ezJdT.js";import{v as h,a as k}from"./elevationInfoUtils-sHEwmo9N.js";import{g as C}from"./ray-CCzLdiTI.js";import{T as A,t as j,i as q}from"./ElevationProvider-Bd4qfXCi.js";import{w as I}from"./verticalOffsetUtils-BYv4Nk2v.js";import{Y as z}from"./InteractiveToolBase-yKkEJSmV.js";function B(n,e){return v(n,()=>e)}function sn(n){return v(n,e=>e.plane)}function v(n,e){const t=i(),l=i();let o=!1;return r=>{const a=e(r);if(r.action==="start"){const c=m(r.screenStart,R(H.get())),u=C(n.state.camera,c,O);u!=null&&(o=T(a,u,t))}if(!o)return null;const s=m(r.screenEnd,R(H.get())),d=C(n.state.camera,s,O);return d==null?null:T(a,d,l)?{...r,renderStart:t,renderEnd:l,plane:a,ray:d}:null}}function J(n,e,t=0,l=null,o=null){let r=null;return a=>{if(a.action==="start"&&(r=n.sceneIntersectionHelper.intersectElevationFromScreen(S(a.screenStart.x,a.screenStart.y),e,t,o),r!=null&&l!=null&&!w(r,r,l))||r==null)return null;const s=n.sceneIntersectionHelper.intersectElevationFromScreen(S(a.screenEnd.x,a.screenEnd.y),e,t,o);return s!=null&&(l==null||w(s,s,l))?{...a,mapStart:r,mapEnd:s}:null}}function K(n,e,t,l=null,o=null){return J(n,t,h(e,n,t),l,o)}function L(n,e,t,l=null,o=null){return K(n,t,k(e),l,o)}function an(n,e,t,l){const o=e.toMap(n.screenStart,{include:[t]});return o!=null?L(e,t,o,l):null}function W(n,e){const t=_,l=Q,o=b();n.renderCoordsHelper.worldUpAtPosition(e,t);const r=y(F(o),t,g(l,e,n.state.camera.eye));return y(r,r,t),G(e,r,o)}function un(n,e,t){let l=null;const o=new z;return o.next(B(n,W(n,e))).next(Y(n,e)).next(Z(n,t)).next(r=>{r.mapEnd.x=r.mapStart.x,r.mapEnd.y=r.mapStart.y,l=r}),r=>(l=null,o.execute(r),l)}function Y(n,e){const t=i(),l=x(e);n.renderCoordsHelper.worldUpAtPosition(e,t);const o=i(),r=i(),a=s=>(g(s,s,e),P(t,s,s),n.viewingMode==="global"&&x(s)*Math.sign(D(t,s))<.001-l&&g(s,M(s,t,.001),e),N(s,s,e),s);return s=>(s.renderStart=a($(o,s.renderStart)),s.renderEnd=a($(r,s.renderEnd)),s)}function Z(n,e){const t=n.renderCoordsHelper;return l=>{const o=t.fromRenderCoords(l.renderStart,new E({spatialReference:e})),r=t.fromRenderCoords(l.renderEnd,new E({spatialReference:e}));return o!=null&&r!=null?{...l,mapStart:o,mapEnd:r}:null}}var f;function cn(n){let e=null;return t=>{switch(t.action){case"start":e=n.disableDisplay();break;case"end":case"cancel":e!=null&&(e.remove(),e=null)}return t}}function dn(n,e=null){const t=A(n.state.viewingMode);t.options.selectionMode=!0,t.options.store=j.MIN,t.options.hud=!1;const l=S(),o={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},r=i(),a=e??n.spatialReference,s=c=>{n.map.ground&&n.map.ground.opacity<1?o.exclude.add(I):o.exclude.delete(I),n.sceneIntersectionHelper.intersectIntersectorScreen(m(c,l),t,o);const u=t.results.min;let p;if(u.getIntersectionPoint(r))p=u.intersector===q.TERRAIN?f.GROUND:f.OTHER;else{if(!t.results.ground.getIntersectionPoint(r))return null;p=f.GROUND}return{location:n.renderCoordsHelper.fromRenderCoords(r,new E({spatialReference:a})),surfaceType:p}};let d;return c=>{if(c.action==="start"){const p=s(c.screenStart);d=p!=null?p.location:null}if(d==null)return null;const u=s(c.screenEnd);return(u==null?void 0:u.location)!=null?{...c,mapStart:d,mapEnd:u.location,surfaceType:u.surfaceType}:null}}(function(n){n[n.GROUND=0]="GROUND",n[n.OTHER=1]="OTHER"})(f||(f={}));const _=i(),Q=i(),O=U();export{Z as A,sn as C,K as D,f as F,L as M,an as N,B as O,un as k,cn as q,dn as z};
