import{o as i,y as c,X as v,bg as y,s as m,U as f}from"./index-8ERthB3p.js";import{f as l,n as d,s as $}from"./utils-1zmckiYC.js";import{r as j}from"./serverVersionUtils-BfJfWaCL.js";let t=class extends y{constructor(s){super(s),this.moment=null,this.success=!1}};i([c({type:Date,json:{type:Number,write:{writer:(s,e)=>{e.moment=s?s.getTime():null}}}})],t.prototype,"moment",void 0),i([c({type:Boolean,json:{write:!0}})],t.prototype,"success",void 0),t=i([v("esri.rest.versionManagement.gdbVersion.support.PostResult")],t);const N=t,n=new Map;async function J(s,e,o,u){n.has(s)||await j(n,s);const r=n.get(s);if(((r==null?void 0:r.serverVersion)??0)<=11.1)throw new m("post:enterprise-version","versioning API requires ArcGIS Enterprise version 11.2 or higher");if(!e)throw new m("post:missing-guid","guid for version is missing");const p=l(s),a=o.toJSON();o.rows&&(a.rows=JSON.stringify(o.rows));const w=d(p.query,{query:$({...a,f:"json"}),...u,method:"post"});e.startsWith("{")&&(e=e.slice(1,-1));const g=`${p.path}/versions/${e}/post`,{data:h}=await f(g,w);return N.fromJSON(h)}export{J as post,n as serverVersionCacheMap};
