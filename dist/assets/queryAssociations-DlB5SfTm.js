import{o as a,y as l,X as y,bg as d,U as f,j7 as g,P as v}from"./index-8ERthB3p.js";import{i as j}from"./UtilityNetwork-BaSgO-Ex.js";import{f as w,s as S,n as I}from"./utils-1zmckiYC.js";import{d as J}from"./Association-DfEmdm2b.js";let r=class extends d{constructor(e){super(e),this.associations=[]}};a([l({type:[J],json:{write:!0}})],r.prototype,"associations",void 0),r=a([y("esri.rest.networks.support.QueryAssociationsResult")],r);const O=r;function $(s){const{returnDeletes:e,elements:n,gdbVersion:o,moment:i}=s.toJSON();return{returnDeletes:e,elements:JSON.stringify(n.map(t=>({globalId:t.globalId,networkSourceId:t.networkSourceId,terminalId:t.terminalId}))),types:JSON.stringify(s.types.map(t=>j.toJSON(t))).replaceAll('"connectivity"','"junctionJunctionConnectivity"'),gdbVersion:o,moment:i}}async function P(s,e,n){const o=w(s),i={...$(e),f:"json"},t=S({...o.query,...i}),c=I(t,{...n,method:"post"}),p=`${o.path}/associations/query`,{data:u}=await f(p,c),m=O.fromJSON(u);return e.types.includes("connectivity")&&g(v.getLogger("esri/rest/networks/support/QueryAssociationsParameters"),"types",{replacement:"Please use 'junction-junction-connectivity' instead of 'connectivity'.",see:"https://developers.arcgis.com/javascript/latest/api-reference/esri-rest-networks-support-QueryAssociationsParameters.html#types",version:"4.29",warnOnce:!0}),m}export{P as queryAssociations};
