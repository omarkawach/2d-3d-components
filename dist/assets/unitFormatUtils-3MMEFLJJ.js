import{E as f}from"./ByteSizeUnit-BsxeN7wM.js";import{s as B}from"./Cyclical-BY9qISY1.js";import{aI as c,fK as l,dS as s,fL as p,fM as M,fN as d,aG as h,bU as S,fO as D,fP as y}from"./index-8ERthB3p.js";import{y as w}from"./quantityUtils-9zDVxeky.js";function F(e,t,n){return e.units[t][n]}function u(e,t,n,i=2,o="abbr"){return`${c(t,{minimumFractionDigits:i,maximumFractionDigits:i,signDisplay:t>0?"never":"exceptZero"})} ${F(e,n,o)}`}function m(e,t,n,i=2,o="abbr"){return`${c(t,{minimumFractionDigits:i,maximumFractionDigits:i,signDisplay:"exceptZero"})} ${F(e,n,o)}`}function T(e,t,n,i=2,o="abbr"){const r=l(t,n);return u(e,s(t,n,r),r,i,o)}function $(e,t,n,i=2,o="abbr"){const r=l(t,n);return m(e,s(t,n,r),r,i,o)}function v(e,t,n,i=2,o="abbr"){const r=D(t,n);return u(e,s(t,n,r),r,i,o)}function z(e,t,n,i=2,o="abbr"){const r=D(t,n);return m(e,s(t,n,r),r,i,o)}function E(e,t,n,i=2,o="abbr"){const r=p(t,n);return u(e,s(t,n,r),r,i,o)}function L(e,t,n,i=2,o="abbr"){const r=p(t,n);return m(e,s(t,n,r),r,i,o)}function N(e,t,n,i=2,o="abbr"){const r=y(t,n);return u(e,s(t,n,r),r,i,o)}function U(e,t,n,i=2,o="abbr"){const r=y(t,n);return m(e,s(t,n,r),r,i,o)}function j(e,t,n,i=2,o="abbr"){const r=M(t,n);return u(e,s(t,n,r),r,i,o)}function G(e,t,n,i=2,o="abbr"){const r=d(t,n);return u(e,s(t,n,r),r,i,o)}function J(e,t,n,i,o){o=o??2;let r=B.normalize(w(s(e,t,"degrees"),n,i),0,!0);const a={style:"unit",unitDisplay:"narrow",unit:"degree",maximumFractionDigits:o,minimumFractionDigits:o,signDisplay:r>0?"never":"exceptZero"};return r=x(r,a),c(r,a)}function Y(e,t,n,i,o){n!==i&&(e=-e);const r={style:"unit",unitDisplay:"narrow",unit:"degree",maximumFractionDigits:o=o??2,minimumFractionDigits:o,signDisplay:"exceptZero"};let a=s(e,t,"degrees")%360;return a=x(a,r),c(a,r)}const b=new Map;function x(e,t){const n=JSON.stringify(t);let i=b.get(n);return i||(i=new Intl.NumberFormat("en-US",t),b.set(n,i)),/\-?\+?360/.test(i.format(e))?0:e}const g=["B","kB","MB","GB","TB"];function k(e,t){let n=(t=Math.round(t))===0?0:Math.floor(Math.log(t)/Math.log(f.KILOBYTES));n=S(n,0,g.length-1);const i=c(t/f.KILOBYTES**n,{maximumFractionDigits:2});return h(e.units.bytes[g[n]],{fileSize:i})}export{G as $,N as B,T as D,z as F,U as M,k as O,J as U,F as b,E as d,u as g,L as h,j,m as p,Y as w,$ as x,v as y};
