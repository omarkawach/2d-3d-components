import{a7 as u,ak as f,q as w,b0 as n,cr as p,gl as h,ct as y,o as _,X as V}from"./index-8ERthB3p.js";import{t as v}from"./highlightReasons-LsVPCozu.js";import{m as C}from"./LayerView2D-BSaaWl8y.js";import{t as c}from"./GraphicContainer-BI4hY2sK.js";import{$ as g}from"./GraphicsView2D-DdW_GboH.js";import{u as b}from"./LayerView-DO6TerBv.js";import"./Tile-BZM3wEBG.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./TileKey-Drwp1tmy.js";import"./scaleUtils-0K_Ry6I1.js";import"./Container-lXzdRU2v.js";import"./DefaultUI-DIlogOoy.js";import"./jsxFactory-BxQYPm-b.js";import"./UpdatingHandles-ugzlsvZF.js";import"./screenUtils-BuM_Fswi.js";import"./signal-DoM1gSF0.js";import"./GraphicsCollection-CKieR40M.js";import"./ReactiveMap-C-O0lKvJ.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./heightModelInfoUtils-CdtST1Ra.js";import"./ViewingMode-Dodu7ZZk.js";import"./Viewpoint-CB1GAuK3.js";import"./Cyclical-BY9qISY1.js";import"./mat2d-D9yIh3Tx.js";import"./mat2df32-orApM5a3.js";import"./mat2df64-CBKYtunK.js";import"./mat3-CqxUQBLP.js";import"./vec2-Dt9Foiri.js";import"./vec2f32-BbH2jxlN.js";import"./vec2f64-Diu2Kaa8.js";import"./normalizeUtils-Cm7zySIZ.js";import"./normalizeUtilsCommon-DRIluWnF.js";import"./utils-1zmckiYC.js";import"./utils-D-bI9C7C.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-DfZw-NIf.js";import"./accessibleHandler-DsewpcQ5.js";import"./Compass-C-feYp_a.js";import"./utils-DsJqvptN.js";import"./GoTo-BzS22eXk.js";import"./NavigationToggle-QjJqvxo5.js";import"./Zoom-Ct1er6X1.js";import"./EffectView-C6VBe3AA.js";import"./DisplayObject-B9oc5ibO.js";import"./definitions-B54owTRu.js";import"./enums-DSseSvdG.js";import"./Texture-O7Pyotwx.js";import"./ClipRect-tFFfZq22.js";import"./AGraphicContainer-CZXUn-ju.js";import"./TechniqueInstance-c4xdpVEx.js";import"./UpdateTracking2D-BUPNqTRV.js";import"./TurboLine-B0jwHtDu.js";import"./enums-BRqP_wXA.js";import"./earcut-BqgeR2O3.js";import"./GeometryUtils-_MjrRDxY.js";import"./OptimizedGeometry-DLPswkPy.js";import"./CIMSymbolHelper-C-U_lWVp.js";import"./BidiEngine-DL33fnW5.js";import"./fontUtils-Dz0hN_7q.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./LabelMetric-B0IKUycz.js";import"./Program-BB52p2Mx.js";import"./BufferObject-CaEbWulZ.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BindType-BmZEZMMh.js";import"./Util-B8vYs4k8.js";import"./constants-D5zmR9t2.js";import"./TileContainer-BpQW-7a1.js";import"./WGLContainer-DrWw77ek.js";import"./VertexArrayObject-Cv4RwmVi.js";import"./WGLBrushVTLSymbol-DSNnpuOI.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-pu9RBNlY.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-BlB59bbU.js";import"./DefaultVertexAttributeLayouts-Co_GH1pH.js";import"./featureConversionUtils-BzfH5fda.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-ury-Cf8e.js";import"./heatmapTextureUtils-Ccf4XLi5.js";import"./QueueProcessor-DFkcFyJt.js";import"./vec3f32-Cw9Q6TO_.js";import"./AttributeStore-Iy7eed8g.js";import"./labelFormatUtils-BN4HkzS9.js";import"./TimeOnly-CdukLkzZ.js";import"./centroid-DdLmOD72.js";import"./timeSupport-BFvqZpey.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync-CrK-RMPr.js";const d="sublayers",m="layerView";let l=class extends C(b){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,t){return Array.from(this.graphicsViews(),r=>{const e=r.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const o=this._graphicsViewsFeatureCollectionMap.get(r);for(const s of e)!s.popupTemplate&&o.popupTemplate&&(s.popupTemplate=o.popupTemplate),s.sourceLayer=s.layer=this.layer}return e}).flat().map(r=>({type:"graphic",graphic:r,layer:this.layer,mapPoint:i}))}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof u?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(e=>e&&e.uid):f.isCollection(i)&&(t=i.map(e=>e&&e.uid).toArray());const r=t==null?void 0:t.filter(w);return r!=null&&r.length?(this._addHighlight(r),n(()=>this._removeHighlight(r))):n()}update(i){for(const t of this.graphicsViews())t.processUpdate(i)}attach(){const i=this.view,t=()=>this.requestUpdate(),r=this.layer.featureCollections;if(r!=null&&r.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of r){const o=new c(this.view.featuresTilingScheme),s=new g({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:t,container:o});this._graphicsViewsFeatureCollectionMap.set(s,e),this.container.addChild(s.container),this.addHandles([p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(m);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],t=this.view,r=()=>this.requestUpdate();for(const e of this.layer.sublayers){const o=new c(this.view.featuresTilingScheme);o.fadeTransitionEnabled=!0;const s=new g({view:t,graphics:e.graphics,requestUpdateCallback:r,container:o});this.addHandles([e.on("graphic-update",s.graphicUpdateHandler),p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m),this.container.addChild(s.container),i.push(s)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),t=v("highlight");for(const r of this.graphicsViews())r.setHighlight(i.map(e=>({objectId:e,highlightFlags:t})))}};l=_([V("esri.views.2d.layers.MapNotesLayerView2D")],l);const nt=l;export{nt as default};
