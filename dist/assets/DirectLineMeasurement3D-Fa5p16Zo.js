import{o as e,y as n,Z as T,j9 as V,X as L,bO as et,cr as M,gJ as A,d1 as z,jp as nt,kV as st,kW as at,kX as rt,gl as $,bW as C,ej as j,f_ as ot}from"./index-8ERthB3p.js";import{e as k,O as lt,n as I,i as ut}from"./jsxFactory-BxQYPm-b.js";import{c as pt}from"./Analysis-BVF2oUso.js";import{e as dt}from"./defaultUnit-gjMTMp_C.js";import{t as ht}from"./memoize-DsJmrG76.js";import{h as ct}from"./UpdatingHandles-ugzlsvZF.js";import{x as mt}from"./hydratedFeatures-DqrDm0_F.js";import{q as gt}from"./measurementUtils-BB1pb2Gz.js";import{O as yt}from"./SnappingVisualizer3D-CgXvcLRx.js";import{F as vt,z as wt,q as _t}from"./dragEventPipeline3D-B83b_Wx5.js";import{b as Pt}from"./lineSegment-DVvvMBnG.js";import{e as bt}from"./interfaces-js1RL7O8.js";import{e as R}from"./interfaces-CjSZqm0S.js";import{e as F,d as ft,a as Mt}from"./RenderObject-BqR7Zmh-.js";import{c as Dt}from"./LaserlineVisualElement-CzVKEaBL.js";import{s as Lt}from"./RenderGeometry-rcUvJmRA.js";import{c as St}from"./ElevationProvider-Bd4qfXCi.js";import{o as Vt}from"./ShadedColorMaterial.glsl-CbYoK34J.js";import{V as Ot,p as $t,P as Ct}from"./EditGeometryOperations-3XHFCAp6.js";import{x as xt,M as Ut}from"./InteractiveToolBase-yKkEJSmV.js";import{a as Ht}from"./SceneSnappingManagerPool-BaW4AOlb.js";import{e as Tt}from"./SnappingContext-Cpn1WUY8.js";import{f as At}from"./SnappingDragPipelineStep-selKU1rW.js";import{N as Et}from"./angularMeasurementUtils-CATp35qy.js";import{n as W}from"./screenUtils-BuM_Fswi.js";import{_ as Gt}from"./InteractiveAnalysisViewModel-BepJ3kHo.js";import{e as q}from"./globalCss-DfZw-NIf.js";import{u as zt}from"./MeasurementWidgetContent-BBPWDwmp.js";import"./getDefaultUnitForView-BEilgbp7.js";import"./projectVectorToVector-C3SBBDgz.js";import"./projectPointToVector-qKp-AJ2b.js";import"./geometryEngine-MBwx6Ib1.js";import"./geometryEngineBase-Cz__5BKm.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-7yclY7Co.js";import"./projectPointToWGS84ComparableLonLat-D5kdMIn_.js";import"./projectVectorToWGS84ComparableLonLat-DuPw0-Mv.js";import"./geodesicUtils-D1kRRrco.js";import"./sphere-Bf4ezJdT.js";import"./ObjectStack-BPo9QGhV.js";import"./plane-Du3EYICn.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-BrpT0VRp.js";import"./vec2f64-Diu2Kaa8.js";import"./mathUtils-iSLnUy_4.js";import"./elevationInfoUtils-sHEwmo9N.js";import"./ExtendedLineVisualElement-CQkDkcGr.js";import"./vec4f32-CjrfB-0a.js";import"./frustum-BrAPXuhm.js";import"./EngineVisualElement-DUG0X7vS.js";import"./VisualElement-CI1nOGdz.js";import"./ContentObject-BTgEhnct.js";import"./Material-DwPnlQDw.js";import"./interfaces-B8ge7Jg9.js";import"./basicInterfaces-DngWxyLO.js";import"./VertexAttribute-BnAa5VW0.js";import"./ViewingMode-Dodu7ZZk.js";import"./Util-B8vYs4k8.js";import"./vec2-Dt9Foiri.js";import"./Laserlines.glsl-CH220B6j.js";import"./Object3DVisualElement-D2TYUCro.js";import"./ColorMaterial.glsl-uPKQoFFi.js";import"./mat3-CqxUQBLP.js";import"./BufferView-CHYzaV9A.js";import"./Texture-C7A05GrI.js";import"./BindType-BmZEZMMh.js";import"./enums-DSseSvdG.js";import"./Texture-O7Pyotwx.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./requestImageUtils-DP1V3HlH.js";import"./InterleavedLayout-s3MgOYN8.js";import"./types-D0PSWh4d.js";import"./VertexColor.glsl-CScvx9pF.js";import"./OrderIndependentTransparency-Cua2R8AE.js";import"./floatRGBA-CCqnXShd.js";import"./RightAngleQuadVisualElement-TrRXC01x.js";import"./Attribute-B-NAci_J.js";import"./Geometry-CqGtfd4N.js";import"./Indices-DP3oX5Sg.js";import"./triangle-CTblFuF6.js";import"./SnappingVisualizer-DfDIQ0EV.js";import"./PointSnappingHint-DFYGb6IS.js";import"./viewUtils-DC86MEAQ.js";import"./ray-CCzLdiTI.js";import"./verticalOffsetUtils-BYv4Nk2v.js";import"./orientedBoundingBox-BQvYwCTM.js";import"./quat-DUnoL8dP.js";import"./spatialReferenceEllipsoidUtils-CmEPjh7T.js";import"./computeTranslationToOriginAndRotation-BbJd4iYX.js";import"./interfaces-D6pIddIh.js";import"./DoubleArray-068mylUp.js";import"./glUtil-DS73TAjp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BufferObject-CaEbWulZ.js";import"./vec3f32-Cw9Q6TO_.js";import"./axisAngleDegrees-CaSFQR2z.js";import"./weather-D00pIeau.js";import"./RenderState-DaVlEYWY.js";import"./NestedMap-DgiGbX8E.js";import"./Octree-E7a40xr7.js";import"./Intersector-8rpRuT_8.js";import"./VertexArrayObject-Cv4RwmVi.js";import"./Scheduler-DaHJO6l7.js";import"./signal-DoM1gSF0.js";import"./debugFlags-BbJIqrPU.js";import"./boundedPlane-CLJ-Xnn_.js";import"./geometry2dUtils-DoOkpuKA.js";import"./meshVertexSpaceUtils-KRc33Yrq.js";import"./MeshLocalVertexSpace-C8ABjEju.js";import"./vec3-DPXcG_yS.js";import"./interfaces-DkjgzG8v.js";import"./drawUtils-C6Di23Hl.js";import"./SnappingManager-DUlqpdAB.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./layerViewUtils-Bi2wmOiN.js";import"./Cyclical-BY9qISY1.js";import"./quantityUtils-9zDVxeky.js";import"./geodesicMeasurementUtils-BcTpN3Xi.js";import"./dehydratedFeatureComparison-DdCJ1gSj.js";import"./UnitSelect-vwLT4dGV.js";let f=class extends pt{constructor(t){super(t),this.type="direct-line-measurement",this.startPoint=null,this.endPoint=null,this.unit=null}get requiredPropertiesForEditing(){return[this.startPoint,this.endPoint]}clear(){this.startPoint=null,this.endPoint=null}};e([n({type:["direct-line-measurement"]})],f.prototype,"type",void 0),e([n({type:T})],f.prototype,"startPoint",void 0),e([n({type:T})],f.prototype,"endPoint",void 0),e([n({type:V,value:null})],f.prototype,"unit",void 0),e([n({readOnly:!0})],f.prototype,"requiredPropertiesForEditing",null),f=e([L("esri.analysis.DirectLineMeasurementAnalysis")],f);const N=f;var D;(function(t){t.Manipulators="manipulators",t.AnalysisViewDestroyed="analysis-view-destroyed",t.AnalysisView="analysis-view"})(D||(D={}));let p=class extends et{constructor(t){super(t),this.cursorPoint=null,this._visible=!1,this._laserLine=null,this.laserLineEnabled=!0,this._lastDraggedHandle=null}initialize(){this._laserLine=new Dt({view:this.view,attached:!0,isDecoration:!0}),this._updateVisibility(this._visible),this._connectToAnalysisView(),this.addHandles(M(()=>this._params,({laserLineGlowColor:t,laserLineInnerColor:i,laserLineGlobalAlpha:a})=>{const s=this._laserLine,l=s.style;s.style={...l,innerColor:i,glowColor:t,globalAlpha:a}}))}destroy(){this._laserLine=A(this._laserLine)}get _params(){const{accentColor:t}=this.view.effectiveTheme;return{laserLineGlowColor:z.toUnitRGB(t),laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:z.toUnitRGB(nt(t)),laserLineInnerWidth:.75,laserLineGlobalAlpha:.75*t.a,handleColor:st(t,.5),handleRadius:5}}get visible(){return this._visible}set visible(t){t?this.show():this.hide()}get testData(){const t=this._laserLine.testData,i=this.analysisViewData.testData;return{labels:i==null?void 0:i.labels,stripeLength:i==null?void 0:i.stripeLength,laserLineRenderer:{heightManifoldEnabled:t!=null&&t.heightManifoldEnabled,heightManifoldTarget:t!=null?t.heightManifoldTarget:null,pointDistanceEnabled:t!=null&&t.pointDistanceEnabled,pointDistanceOrigin:t!=null?t.pointDistanceOrigin:null,pointDistanceTarget:t!=null?t.pointDistanceTarget:null,lineVerticalPlaneEnabled:t!=null&&t.lineVerticalPlaneEnabled}}}get _cursorPosition(){const t=C(),i=this.cursorPoint;return i&&this.view.renderCoordsHelper.toRenderCoords(i,t),t}get _startPosition(){const t=C(),i=this.analysis.startPoint;return i&&this.view.renderCoordsHelper.toRenderCoords(i,t),t}get _endPosition(){const t=C(),i=this.analysis.endPoint;return i&&this.view.renderCoordsHelper.toRenderCoords(i,t),t}get _laserLineParams(){const t=this._focusPosition,{active:i,lineState:a}=this.toolState,s=this.analysisViewData,l=this.laserLineEnabled&&!!t&&a!=="measured"&&i;if(!l||!this.visible||s==null||s.destroyed)return{heightManifoldTarget:null,pointDistanceLine:null,lineVerticalPlaneSegment:null};const o=s.actualVisualizedMeasurement,r=this.view.viewingMode!=="local"&&l&&!!this.analysis.startPoint&&o==="geodesic",d=l&&s.viewMode===R.Triangle;return{heightManifoldTarget:o==="euclidean"?t:null,pointDistanceLine:r?this._pointDistanceLine:null,lineVerticalPlaneSegment:d?Pt(this._startPosition,this._endPosition):null}}get _focusPosition(){const{lineState:t}=this.toolState,i=this.analysisViewData,a=i!=null&&!i.destroyed&&i.measurementMode===bt.Euclidean&&i.viewMode===R.Direct;switch(t){case"drawing":return a?this._startPosition:this.analysis.endPoint?this._endPosition:this._startPosition;case"editing":return a?this._lastDraggedHandle==="start"?this._endPosition:this._startPosition:this._lastDraggedHandle==="start"?this._startPosition:this._endPosition;default:return this.cursorPoint!=null?this._cursorPosition:null}}get _pointDistanceLine(){return{origin:this.toolState.lineState==="drawing"||this._lastDraggedHandle==="end"?this._startPosition:this._endPosition,target:this._focusPosition}}createManipulators(){const t=this._params,{view:i}=this,a=()=>{const u=ft(t.handleColor),b=[new Mt(Lt(u,1,32,32))],_=new F({view:i,renderObjects:b});return _.available=!1,_.radius=t.handleRadius,[_,u]},[s,l]=a(),[o,r]=a(),d=new F({view:this.view});d.available=!1,d.interactive=!1,this.analysis.startPoint!=null&&(s.location=this.analysis.startPoint,s.available=!0),this.analysis.endPoint!=null&&(o.location=this.analysis.endPoint,o.available=!0);const m=()=>{let u=this._lastDraggedHandle;s.grabbing&&!o.grabbing&&(u="start"),o.grabbing&&!s.grabbing&&(u="end"),s.grabbing||o.grabbing||(u=null),this._lastDraggedHandle=u},P=s.events.on("grab-changed",m),w=o.events.on("grab-changed",m);return this.addHandles([P,w,M(()=>rt(this._params.handleColor),u=>{l.setParameters({color:u}),r.setParameters({color:u})},{equals:at})],D.Manipulators),{start:s,end:o,cursor:d}}show(){this.destroyed||this._visible||this._updateVisibility(!0)}hide(){!this.destroyed&&this._visible&&this._updateVisibility(!1)}_connectToAnalysisView(){this.removeHandles(D.AnalysisView),this.addHandles([M(()=>{var t;return(t=this.analysisViewData)==null?void 0:t.destroyed},t=>{t&&this.removeHandles(D.AnalysisView)},$),M(()=>[this.toolState.lineState==="measured",this.analysisViewData],([t,i])=>{i==null||i.destroyed||(i.allowVisualElementsOrientationChange=!t)},$),M(()=>this._laserLineParams,t=>{const i=this._laserLine;i.heightManifoldTarget=t.heightManifoldTarget,i.pointDistanceLine=t.pointDistanceLine,i.lineVerticalPlaneSegment=t.lineVerticalPlaneSegment},$)],D.AnalysisView)}_updateVisibility(t){this.initialized&&(this._visible=t,t?this._laserLine.style={innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,globalAlpha:this._params.laserLineGlobalAlpha}:this.view.cursor=null,this._laserLine.visible=t)}};e([n({constructOnly:!0})],p.prototype,"view",void 0),e([n()],p.prototype,"_params",null),e([n({constructOnly:!0})],p.prototype,"analysis",void 0),e([n({constructOnly:!0})],p.prototype,"analysisViewData",void 0),e([n()],p.prototype,"cursorPoint",void 0),e([n()],p.prototype,"toolState",void 0),e([n()],p.prototype,"visible",null),e([n()],p.prototype,"testData",null),e([n()],p.prototype,"_visible",void 0),e([n()],p.prototype,"_laserLine",void 0),e([n({constructOnly:!0})],p.prototype,"laserLineEnabled",void 0),e([n()],p.prototype,"_cursorPosition",null),e([n()],p.prototype,"_startPosition",null),e([n()],p.prototype,"_endPosition",null),e([n()],p.prototype,"_lastDraggedHandle",void 0),e([n()],p.prototype,"_laserLineParams",null),e([n()],p.prototype,"_focusPosition",null),e([n()],p.prototype,"_pointDistanceLine",null),p=e([L("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],p);let h=class extends Vt{constructor(t){super(t),this._updatingHandles=new ct,this._emulatedDrag=null,this.lineState="initial",this.startPointSurfaceLocation=null,this.endPointSurfaceLocation=null,this.cursorPointSurfaceLocation=null,this.startManipulator=null,this.endManipulator=null,this.cursorManipulator=null,this._getSnappingContext=ht(i=>new Tt({elevationInfo:{mode:"absolute-height",offset:0},pointer:i,editGeometryOperations:new Ot(new $t("point",Ct(!0,!1,this.view.spatialReference))),visualizer:new yt}))}initialize(){const{view:t,analysis:i,analysisViewData:a,visible:s}=this;this.measurementView=new p({toolState:this,view:t,analysis:i,analysisViewData:a,visible:s});const l=Ht(t);this._snappingManagerResult=l,this.addHandles(l);const{start:o,end:r,cursor:d}=this.measurementView.createManipulators(),m=(w,u,b)=>xt(w,(_,J,S,E)=>{const G=_t(_),Z=this._snappingManager,K=this._getSnappingContext(E),Q=this._updatingHandles,{lineState:Y}=this;S=S.next(G).next(Ut(this,[b,u])).next(g=>{if(u!=="cursorPoint"){const y=this.analysis[u];y!=null&&(_.location=y)}return g});const tt=wt(this.view),it=g=>{const y=tt(g);return y||this.lineState!=="drawing"&&this.lineState!=="initial"||(this[u]=null,this[b]=null),y};let O=J.next(G).next(it);if(E!=="touch"||Y==="editing"){const{snappingStep:g,cancelSnapping:y}=At({snappingManager:Z,snappingContext:K,updatingHandles:Q});S=S.next(y),O=O.next(...g)}O.next(g=>g.action!=="start"?g:null).next(g=>{const y=mt(g.mapEnd,new T);this[u]=y,_.location=y,this[b]=this._surfaceLocation(y,g.surfaceType)})}),P=w=>w.events.on("grab-changed",()=>{const u=o.grabbing||r.grabbing;this.lineState=u?"editing":"measured"});this.addHandles([m(o,"startPoint","startPointSurfaceLocation"),m(r,"endPoint","endPointSurfaceLocation"),m(d,"cursorPoint","cursorPointSurfaceLocation"),P(o),P(r)]),this.manipulators.add(o),this.manipulators.add(r),this.manipulators.add(d),this.startManipulator=o,this.endManipulator=r,this.cursorManipulator=d,this.addHandles(M(()=>this.state,w=>{w==="measured"&&this.finishToolCreation()},j)),Et(this)}destroy(){this._updatingHandles=A(this._updatingHandles),this.measurementView=A(this.measurementView)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){const{analysis:t}=this;if(t.startPoint==null&&t.endPoint==null)return"ready";const{lineState:i}=this;return this.validMeasurement&&i!=="editing"&&i!=="drawing"?"measured":"measuring"}get cursor(){return this.state==="ready"||this.lineState==="drawing"?"crosshair":null}get startPoint(){return this.analysis.startPoint}set startPoint(t){this.analysis.startPoint=t}get endPoint(){return this.analysis.endPoint}set endPoint(t){this.analysis.endPoint=t}get cursorPoint(){return this.measurementView.cursorPoint}set cursorPoint(t){this.measurementView.cursorPoint=t}get snappingOptions(){return this._snappingManager.options}get validMeasurement(){return this.analysis.startPoint!=null&&this.analysis.endPoint!=null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}onShow(){this.measurementView.show(),this._updateManipulatorAvailability()}onHide(){this.measurementView.hide()}onDeactivate(){var t;(t=this._emulatedDrag)==null||t.cancel(),this._emulatedDrag=null}onInputEvent(t){switch(t.type){case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t)}this._updateManipulatorAvailability()}_handlePointerMove(t){var d,m;if(!this.active||this.view.navigating)return;const{pointerType:i}=t;if(i!=="mouse")return;const a=W(t),{lineState:s,cursorManipulator:l,endManipulator:o}=this;let r=!1;this.cursorPoint==null&&((d=this._emulatedDrag)==null||d.cancel(),this._emulatedDrag=x(l,i,a),r=!0),s==="initial"&&((m=this._emulatedDrag)==null||m.update(a),r=!0),s==="drawing"&&(o.events.emit("drag",{action:"update",start:a,screenPoint:a}),r=!0),r&&t.stopPropagation()}_handleImmediateClick(t){var m,P,w,u,b;if(!this.active||!gt(t))return;const i=W(t),{pointerType:a}=t,{cursorManipulator:s,startManipulator:l,endManipulator:o,lineState:r}=this;let d=!1;switch(this.cursorPoint==null&&((m=this._emulatedDrag)==null||m.cancel(),this._emulatedDrag=x(s,a,i)),r){case"initial":if((P=this._emulatedDrag)==null||P.update(i),this.cursorPoint!=null){(w=this._emulatedDrag)==null||w.end(i),this._emulatedDrag=null;const{cursorPoint:_}=this;this.startPoint=_,this.startPointSurfaceLocation=this.cursorPointSurfaceLocation,l.location=_,l.interactive=!1,o.interactive=!1,this.lineState="drawing",this._emulatedDrag=x(o,a,i),d=!0}break;case"drawing":(u=this._emulatedDrag)==null||u.update(i),this.endPoint!=null&&((b=this._emulatedDrag)==null||b.end(i),this._emulatedDrag=null,l.interactive=!0,o.interactive=!0,this.lineState="measured",d=!0)}d&&t.stopPropagation()}_surfaceLocation(t,i){return i===vt.GROUND?"on-the-surface":(t.z??0)>=this._getElevation(t)?"above-the-surface":"below-the-surface"}_updateManipulatorAvailability(){this.startManipulator.available=this.analysis.startPoint!=null,this.endManipulator.available=this.analysis.endPoint!=null}_getElevation(t){return this.view.basemapTerrain.ready?St(this.view.elevationProvider,t)??0:0}get test(){return{snappingManager:this._snappingManager}}};function x(t,i,a){return t.events.emit("drag",{action:"start",pointerType:i,start:a,screenPoint:a}),{update:s=>t.events.emit("drag",{action:"update",start:s,screenPoint:s}),end:s=>t.events.emit("drag",{action:"end",start:s,screenPoint:s}),cancel:()=>t.events.emit("drag",{action:"cancel"})}}e([n({readOnly:!0})],h.prototype,"state",null),e([n()],h.prototype,"lineState",void 0),e([n({readOnly:!0})],h.prototype,"cursor",null),e([n()],h.prototype,"startPoint",null),e([n()],h.prototype,"endPoint",null),e([n()],h.prototype,"cursorPoint",null),e([n({constructOnly:!0})],h.prototype,"analysis",void 0),e([n({constructOnly:!0})],h.prototype,"analysisViewData",void 0),e([n()],h.prototype,"measurementView",void 0),e([n({constructOnly:!0})],h.prototype,"view",void 0),e([n({readOnly:!0})],h.prototype,"validMeasurement",null),e([n({value:null})],h.prototype,"startPointSurfaceLocation",void 0),e([n({value:null})],h.prototype,"endPointSurfaceLocation",void 0),e([n({value:null})],h.prototype,"cursorPointSurfaceLocation",void 0),e([n()],h.prototype,"updating",null),h=e([L("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],h);const kt=h;let v=class extends Gt{constructor(t){super(t),this.analysis=null,this.supportedViewType="3d",this.unsupportedErrorMessage="DirectLineMeasurement3DViewModel is only supported in 3D views.",this._userUnit=null,this._userUnitOptions=null}initialize(){this.addHandles(M(()=>({analysis:this.analysis,unit:this.unit}),({analysis:t,unit:i})=>{t!=null&&(t.unit=i)},j))}get state(){return this.disabled||!this.ready?"disabled":this.tool==null?"ready":this.tool.state}get measurement(){var o;const{tool:t}=this;if(t==null)return null;const i=()=>({text:null,state:"unavailable"}),a=r=>({text:r,state:"available"}),{analysisViewData:s}=t,l=s.result!=null;return{mode:((o=s.result)==null?void 0:o.mode)??"euclidean",directDistance:l&&s.actualVisualizedMeasurement==="euclidean"?a(s.directLabelText):i(),horizontalDistance:l?a(s.horizontalLabelText):i(),verticalDistance:l?a(s.verticalLabelText):i()}}set unitOptions(t){this._userUnitOptions=t,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(t){this._userUnit=t?this._findSelectableUnit(t,this._userUnit):null}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}constructAnalysis(){return new N}constructTool(){return new kt({view:this.view,analysis:this.analysis,analysisViewData:this.analysisView,visible:this.visible})}_findSelectableUnit(t,i){const a=this.unitOptions;return a.includes(t)?t:i?this._findSelectableUnit(i):a[0]}_filteredOrAllUnits(t){if(!t)return V.slice();const i=t.filter(a=>V.includes(a));return i.length===0?V.slice():i}};e([n({type:N})],v.prototype,"analysis",void 0),e([n({readOnly:!0})],v.prototype,"state",null),e([n({readOnly:!0})],v.prototype,"measurement",null),e([n()],v.prototype,"unitOptions",null),e([n()],v.prototype,"unit",null),e([n(dt)],v.prototype,"defaultUnit",void 0),e([n()],v.prototype,"_userUnit",void 0),e([n()],v.prototype,"_userUnitOptions",void 0),v=e([L("esri.widgets.DirectLineMeasurement3D.DirectLineMeasurement3DViewModel")],v);const X=v,B="esri-direct-line-measurement-3d",U={base:B,newMeasurementButton:`${B}__clear-button`,widgetIcon:ut.measureLine};let c=class extends lt{constructor(t,i){super(t,i),this.iconClass=U.widgetIcon,this.icon=null,this.messages=null,this.messagesCommon=null,this.viewModel=new X}get view(){return this.viewModel.view}set view(t){this.viewModel.view=t}get visible(){return this.viewModel.visible}set visible(t){this.viewModel.visible=t}get active(){return this.viewModel.active}get analysis(){return this.viewModel.analysis}set analysis(t){this.viewModel.analysis=t}get label(){var t;return((t=this.messages)==null?void 0:t.widgetLabel)??""}set label(t){this._overrideIfSome("label",t)}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(t){this.viewModel.unitOptions=t}get unit(){return this.viewModel.unit}set unit(t){this.viewModel.unit=t}render(){const{messages:t,messagesCommon:i,unit:a,unitOptions:s,viewModel:l}=this,{active:o,measurement:r,state:d,supported:m}=l;return I("div",{"aria-label":this.messages.widgetLabel,class:this.classes(U.base,q.widget,q.panel),key:this,role:"presentation"},this.visible?I(zt,{active:o,measurementItems:[{key:"direct",title:t.direct,value:H(r==null?void 0:r.directDistance)},{key:"horizontal",title:t.horizontal,value:H(r==null?void 0:r.horizontalDistance)},{key:"vertical",title:t.vertical,value:H(r==null?void 0:r.verticalDistance)}],messages:{...t,notApplicable:i==null?void 0:i.notApplicable},newMeasurementButtonClass:U.newMeasurementButton,state:d,supported:m,unit:a,unitOptions:s,onNewMeasurementClick:()=>{ot(this.viewModel.start())},onUnitChange:P=>{this.unit=P}}):null)}};function H(t){return(t==null?void 0:t.state)==="available"?t.text:null}e([n()],c.prototype,"view",null),e([n()],c.prototype,"visible",null),e([n()],c.prototype,"active",null),e([n({constructOnly:!0,nonNullable:!0})],c.prototype,"analysis",null),e([n()],c.prototype,"iconClass",void 0),e([n()],c.prototype,"icon",void 0),e([n()],c.prototype,"label",null),e([n(),k("esri/widgets/DirectLineMeasurement3D/t9n/DirectLineMeasurement3D")],c.prototype,"messages",void 0),e([n(),k("esri/t9n/common")],c.prototype,"messagesCommon",void 0),e([n()],c.prototype,"uiStrings",void 0),e([n({type:X})],c.prototype,"viewModel",void 0),e([n()],c.prototype,"unitOptions",null),e([n()],c.prototype,"unit",null),c=e([L("esri.widgets.DirectLineMeasurement3D")],c);const tn=c;export{tn as default};
