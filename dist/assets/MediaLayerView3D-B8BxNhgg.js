import{v as A,b0 as P,ct as D,f3 as x,fZ as I,h4 as G,c$ as M,s as S,o as h,y as f,X as b}from"./index-8ERthB3p.js";import{m as H,j as z}from"./MediaElementView-u-zsPETL.js";import{e as O}from"./mat3f64-BBpwCtoL.js";import{e as $,C as V,E as u,m as C,I as L,t as p}from"./RenderGeometry-rcUvJmRA.js";import{n as W}from"./LayerView3D-y7LfmsJ-.js";import{t as c}from"./Attribute-B-NAci_J.js";import{I as N}from"./Geometry-CqGtfd4N.js";import{N as U}from"./Texture-C7A05GrI.js";import{e as s}from"./VertexAttribute-BnAa5VW0.js";import{T as j}from"./ImageMaterial.glsl-BKacu54w.js";import{u as k}from"./LayerView-DO6TerBv.js";import{D as v}from"./enums-DSseSvdG.js";import"./mat3-CqxUQBLP.js";import"./vec2-Dt9Foiri.js";import"./normalizeUtilsSync-CrK-RMPr.js";import"./normalizeUtilsCommon-DRIluWnF.js";import"./vec2f64-Diu2Kaa8.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-068mylUp.js";import"./Indices-DP3oX5Sg.js";import"./plane-Du3EYICn.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-BrpT0VRp.js";import"./mathUtils-iSLnUy_4.js";import"./sphere-Bf4ezJdT.js";import"./ObjectStack-BPo9QGhV.js";import"./ContentObject-BTgEhnct.js";import"./Util-B8vYs4k8.js";import"./computeTranslationToOriginAndRotation-BbJd4iYX.js";import"./ElevationProvider-Bd4qfXCi.js";import"./ViewingMode-Dodu7ZZk.js";import"./boundedPlane-CLJ-Xnn_.js";import"./lineSegment-DVvvMBnG.js";import"./verticalOffsetUtils-BYv4Nk2v.js";import"./orientedBoundingBox-BQvYwCTM.js";import"./quat-DUnoL8dP.js";import"./spatialReferenceEllipsoidUtils-CmEPjh7T.js";import"./hydratedFeatures-DqrDm0_F.js";import"./projectVectorToVector-C3SBBDgz.js";import"./projectPointToVector-qKp-AJ2b.js";import"./Material-DwPnlQDw.js";import"./interfaces-B8ge7Jg9.js";import"./basicInterfaces-DngWxyLO.js";import"./axisAngleDegrees-CaSFQR2z.js";import"./weather-D00pIeau.js";import"./RenderState-DaVlEYWY.js";import"./BindType-BmZEZMMh.js";import"./NestedMap-DgiGbX8E.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./frustum-BrAPXuhm.js";import"./Octree-E7a40xr7.js";import"./InterleavedLayout-s3MgOYN8.js";import"./BufferView-CHYzaV9A.js";import"./types-D0PSWh4d.js";import"./OrderIndependentTransparency-Cua2R8AE.js";import"./floatRGBA-CCqnXShd.js";import"./Texture-O7Pyotwx.js";import"./Intersector-8rpRuT_8.js";import"./glUtil-DS73TAjp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-Cv4RwmVi.js";import"./BufferObject-CaEbWulZ.js";import"./Scheduler-DaHJO6l7.js";import"./signal-DoM1gSF0.js";import"./debugFlags-BbJIqrPU.js";import"./heightModelInfoUtils-CdtST1Ra.js";import"./triangle-CTblFuF6.js";import"./doublePrecisionUtils-B0owpBza.js";import"./requestImageUtils-DP1V3HlH.js";import"./VertexColor.glsl-CScvx9pF.js";import"./DefaultLayouts-BrmJbx_o.js";import"./ColorMaterial.glsl-uPKQoFFi.js";import"./UpdatingHandles-ugzlsvZF.js";let m=class extends W(k){constructor(){super(...arguments),this.type="media-3d",this.drapeSourceType=$.RasterImage,this.updatePolicy=V.ASYNC,this._uidToElement=new Map,this._renderedElements=new Map,this._lastDrapingExtent=null,this._update=A(async(e,t,r)=>{const i=await this._collectMediaElements(e,t,r);this._synchronizeRenderElements(i)},0)}initialize(){this._renderer=this.view.basemapTerrain.overlayManager.registerGeometryDrapeSource(this);const e=()=>this._updateWithLastDrapingExtent();this.addHandles([P(()=>this.view.basemapTerrain.overlayManager.unregisterDrapeSource(this)),D(()=>this.layer.effectiveSource,"change",e),D(()=>this.layer.effectiveSource,"refresh",e)]),this._updatingHandles.add(()=>this.suspended,e)}setDrapingExtent(e,t){this._lastDrapingExtent={overlays:e,spatialReference:t},this._updateWithLastDrapingExtent()}getHit(e){const t=this._uidToElement.get(e);return t?{type:"media",element:t,layer:this.layer}:null}_updateWithLastDrapingExtent(){if(this._lastDrapingExtent==null||this.suspended)return void(this._renderer&&this._synchronizeRenderElements(new Set));const{overlays:e,spatialReference:t}=this._lastDrapingExtent;this._updatingHandles.addPromise(this._update(e,t).catch(()=>{}))}async _collectMediaElements(e,t,r){const i=this.layer.effectiveSource;return i==null?new Set:new Set((await Promise.all(e.map(n=>i.queryElements(x(n.extent,t),{signal:r})))).flat())}_synchronizeRenderElements(e){this._synchronizeRenderElementsRemove(e),this._synchronizeRenderElementsAdd(e)}_synchronizeRenderElementsRemove(e){const t=new Set,r=[];this._renderedElements.forEach((i,n)=>{e.has(n)||(t.add(n),i.renderData!=null&&r.push(i.renderData.renderGeometry),this._removeElement(n,i))}),this._renderer.removeGeometries(r,u.REMOVE)}_synchronizeRenderElementsAdd(e){for(const t of e)this._renderedElements.has(t)||this._createRenderElement(t)}_removeElement(e,{renderData:t,handle:r}){this._destroyRenderData(t),this._renderedElements.delete(e),this._uidToElement.delete(e.uid),r.remove()}async _createRenderElement(e){const t=new H({spatialReference:this.view.spatialReference,element:e}),r={renderData:null,handle:I([this._updatingHandles.add(()=>e.opacity,i=>{r.renderData!=null&&r.renderData.material.setParameters({opacity:i})}),this._updatingHandles.add(()=>t.coords,()=>{r.renderData!=null?this._updateGeometry(t,r,r.renderData):this._initializeRenderData(t,r)}),this._updatingHandles.add(()=>e.content,()=>this._initializeRenderData(t,r)),G(t)])};this._renderedElements.set(e,r),this._uidToElement.set(e.uid,e),this._updatingHandles.addPromise(e.load().catch(()=>{})),this._initializeRenderData(t,r)}_initializeRenderData(e,t){const{coords:r,element:i}=e,{contentWidth:n,contentHeight:d}=i;if(r==null||i.content==null)return void(t.renderData=this._destroyRenderData(t.renderData));if(t.renderData!=null)return;const a=this._createTexture(i.content),_=a.load(this.view._stage.renderView.renderingContext);this.view._stage.add(a),M(_)&&this._updatingHandles.addPromise(_);const y=new j({initTextureTransparent:!0,textureId:a.id,opacity:i.opacity,transparent:!0,perspectiveInterpolation:!0}),E=this._getPositionAttributeArray(r),w=[0,0,1,0,1,1,0,1],R=this._getPerspectiveDivideAttributeArray(E,n,d),l=[0,1,2,0,2,3],T=new N(y,[[s.POSITION,new c(E,l,3,!0)],[s.UV0,new c(w,l,2,!0)],[s.PERSPECTIVEDIVIDE,new c(R,l,1,!0)]]),g=new C(T,{layerUid:this.layer.uid,graphicUid:i.uid});this._renderer.addGeometries([g],u.ADD),t.renderData={renderGeometry:g,texture:a,material:y}}_updateGeometry(e,t,r){const{coords:i,element:n}=e;if(i==null||n.content==null)return void(t.renderData=this._destroyRenderData(t.renderData));const d=this._getPositionAttributeArray(i);r.renderGeometry.geometry.setAttributeData(s.POSITION,d);const a=this._getPerspectiveDivideAttributeArray(d,n.contentWidth,n.contentHeight);r.renderGeometry.geometry.setAttributeData(s.PERSPECTIVEDIVIDE,a),this._renderer.modifyGeometries([r.renderGeometry],L.GEOMETRY)}_getPositionAttributeArray(e){const[t,r,i,n]=e.rings[0];return[t[0],t[1],p,n[0],n[1],p,i[0],i[1],p,r[0],r[1],p]}_getPerspectiveDivideAttributeArray(e,t,r){z(o,[0,0,t,0,t,r,0,r],[e[0],e[1],e[3],e[4],e[6],e[7],e[9],e[10]]);const i=o[6]/o[8]*t,n=o[7]/o[8]*r;return[1,1+i,1+i+n,1+n]}_destroyRenderData(e){if(e==null)return null;const t=e.texture;return t.unload(),this.view._stage.remove(t),this._renderer.removeGeometries([e.renderGeometry],u.REMOVE),null}_createTexture(e){const t=e instanceof HTMLImageElement?e.naturalWidth:e.width,r=e instanceof HTMLImageElement?e.naturalHeight:e.height;if("getFrame"in e)throw new S("media-layer-view-3d","animation is not supported");return new U(e,{wrap:{s:v.CLAMP_TO_EDGE,t:v.CLAMP_TO_EDGE},preMultiplyAlpha:!0,width:t,height:r,mipmap:!0,updateCallback:()=>this.view.basemapTerrain.overlayManager.setDrawTexturesDirty()})}get test(){const e=this;return{get numberOfElements(){return e._renderedElements.size}}}};h([f({readOnly:!0})],m.prototype,"type",void 0),h([f()],m.prototype,"layer",void 0),m=h([b("esri.views.3d.layers.MediaLayerView3D")],m);const o=O(),pt=m;export{pt as default};
