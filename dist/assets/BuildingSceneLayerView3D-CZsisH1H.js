import{gI as Q,d_ as A,bE as B,o as n,y as l,X as E,jm as N,bO as R,gJ as U,ej as w,gl as x,P as y,dU as c,gM as S,a7 as F,a0 as O,h5 as G,O as H,s as V,W as $,gL as T,ak as I,fY as j,cr as C,a_ as k,lX as W,hj as D,ag as z,fZ as X}from"./index-8ERthB3p.js";import"./BuildingGroupSublayer-3UTLAh17.js";import{x as Y}from"./WhereClause-CDY1MzWK.js";import"./BuildingComponentSublayer-eBz-Vwap.js";import{S as Z,u as J,n as K}from"./I3SMeshView3D-DiJ211pF.js";import{a as ee}from"./edgeUtils-D8J_3GIe.js";import{n as te}from"./symbolColorUtils-B_k_VgHH.js";import{P as b,d as re,h as ie,o as se}from"./I3SQueryFeatureStore-CCNZhMiH.js";import{L as oe,Z as ne,X as le}from"./I3SUtil-DvcgZFwB.js";import{u as ae,t as pe}from"./TemporalSceneLayerView-DbfVwYek.js";import{u as ue,n as de,p as M}from"./popupUtils-BHYiW8I-.js";import{I as me}from"./Scheduler-DaHJO6l7.js";import{n as he}from"./LayerView3D-y7LfmsJ-.js";import{t as ye}from"./EdgeShader.glsl-DNm98Ote.js";import{u as ce}from"./LayerView-DO6TerBv.js";import"./TimeOnly-CdukLkzZ.js";import"./capabilities-B6PqF1Vy.js";import"./I3SIndexInfo-CWyEOqXW.js";import"./I3SLayerDefinitions-CcCZfvYy.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./mat3-CqxUQBLP.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-BrpT0VRp.js";import"./UpdatingHandles-ugzlsvZF.js";import"./LayerElevationProvider-B7gdPc1Z.js";import"./RenderTexture-D39vYIOj.js";import"./sphere-Bf4ezJdT.js";import"./ObjectStack-BPo9QGhV.js";import"./plane-Du3EYICn.js";import"./vec2f64-Diu2Kaa8.js";import"./mathUtils-iSLnUy_4.js";import"./ElevationRange-BrgM1moX.js";import"./WaterSurface.glsl-JBHYhfkH.js";import"./RenderGeometry-rcUvJmRA.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-068mylUp.js";import"./Texture-C7A05GrI.js";import"./interfaces-B8ge7Jg9.js";import"./BindType-BmZEZMMh.js";import"./Util-B8vYs4k8.js";import"./enums-DSseSvdG.js";import"./Texture-O7Pyotwx.js";import"./VertexAttribute-BnAa5VW0.js";import"./basicInterfaces-DngWxyLO.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Material-DwPnlQDw.js";import"./ContentObject-BTgEhnct.js";import"./ViewingMode-Dodu7ZZk.js";import"./vec2-Dt9Foiri.js";import"./requestImageUtils-DP1V3HlH.js";import"./Indices-DP3oX5Sg.js";import"./Attribute-B-NAci_J.js";import"./Geometry-CqGtfd4N.js";import"./triangle-CTblFuF6.js";import"./lineSegment-DVvvMBnG.js";import"./computeTranslationToOriginAndRotation-BbJd4iYX.js";import"./ElevationProvider-Bd4qfXCi.js";import"./boundedPlane-CLJ-Xnn_.js";import"./verticalOffsetUtils-BYv4Nk2v.js";import"./orientedBoundingBox-BQvYwCTM.js";import"./quat-DUnoL8dP.js";import"./spatialReferenceEllipsoidUtils-CmEPjh7T.js";import"./hydratedFeatures-DqrDm0_F.js";import"./projectVectorToVector-C3SBBDgz.js";import"./projectPointToVector-qKp-AJ2b.js";import"./axisAngleDegrees-CaSFQR2z.js";import"./weather-D00pIeau.js";import"./RenderState-DaVlEYWY.js";import"./NestedMap-DgiGbX8E.js";import"./frustum-BrAPXuhm.js";import"./Octree-E7a40xr7.js";import"./InterleavedLayout-s3MgOYN8.js";import"./BufferView-CHYzaV9A.js";import"./types-D0PSWh4d.js";import"./OrderIndependentTransparency-Cua2R8AE.js";import"./floatRGBA-CCqnXShd.js";import"./Intersector-8rpRuT_8.js";import"./glUtil-DS73TAjp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-Cv4RwmVi.js";import"./BufferObject-CaEbWulZ.js";import"./ColorMaterial.glsl-uPKQoFFi.js";import"./VertexColor.glsl-CScvx9pF.js";import"./vec2f32-BbH2jxlN.js";import"./dehydratedFeatures-Cp-_lWz0.js";import"./featureConversionUtils-BzfH5fda.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./OptimizedGeometry-DLPswkPy.js";import"./earcut-BqgeR2O3.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./vec3-DPXcG_yS.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-C0V38kt7.js";import"./deduplicate-j8p9VETP.js";import"./Normals-BAXqRpCA.js";import"./objectResourceUtils-D-wPKn4W.js";import"./devEnvironmentUtils-Blrp8lZ5.js";import"./DefaultMaterial_COLOR_GAMMA-D4SZcGoz.js";import"./resourceUtils-ayGD6aG4.js";import"./CIMSymbolHelper-C-U_lWVp.js";import"./BidiEngine-DL33fnW5.js";import"./fontUtils-Dz0hN_7q.js";import"./GeometryUtils-_MjrRDxY.js";import"./enums-BRqP_wXA.js";import"./definitions-B54owTRu.js";import"./mat2d-D9yIh3Tx.js";import"./mat2df32-orApM5a3.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./cimSymbolUtils-DwzauUMk.js";import"./utils-j-RBNfeR.js";import"./lineStippleUtils-B9K4R8oO.js";import"./projectVectorToPoint-CPW7kXva.js";import"./MeshComponent-BCGFLGQh.js";import"./imageUtils-D1MsbWS6.js";import"./meshVertexSpaceUtils-KRc33Yrq.js";import"./MeshLocalVertexSpace-C8ABjEju.js";import"./georeference-CwPKO8dc.js";import"./interfaces-DkjgzG8v.js";import"./DefaultLayouts-BrmJbx_o.js";import"./webStyleSymbolUtils-BzDS5WjL.js";import"./Intersector-CTjLkyei.js";import"./LayerConstants-B33OP6sh.js";import"./I3SOverrides-DN8WSBS7.js";import"./I3SNode-CDG95tIx.js";import"./I3SBinaryReader-Y2aVLbE7.js";import"./layerViewUtils-Bi2wmOiN.js";import"./ReactiveSet-B8Rb7Vms.js";import"./meshFeatureSet-Bt56ZleR.js";import"./Mesh-CJEK7lO8.js";import"./External-tJCk07ZV.js";import"./infoFor3D-CxOdoily.js";import"./FeatureLayerView3D-BH2hEfk0.js";import"./FeatureLayerViewBase3D-BjnNcvU0.js";import"./HeatmapDensity.glsl-BN4vWD93.js";import"./geometryServiceUtils-B-h5lvUN.js";import"./project-7u3NBcq6.js";import"./utils-1zmckiYC.js";import"./utils-D-bI9C7C.js";import"./ReactiveMap-C-O0lKvJ.js";import"./dehydratedFeatureComparison-DdCJ1gSj.js";import"./signal-DoM1gSF0.js";import"./terrainUtils-hfv3Mblf.js";import"./TileInfo-BsGWbS2H.js";import"./TileKey-DZd6gJy7.js";import"./queryForSymbologySnapping-8JLrvhsd.js";import"./elevationInfoUtils-sHEwmo9N.js";import"./hash-CcEbRgUF.js";import"./Graphics3DObjectStates-CZBjX6i5.js";import"./rendererConversion-eHDRAZSQ.js";import"./optimizedFeatureQueryEngineAdapter-DY8fepQr.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-CjYPNqwP.js";import"./quickselect-D0_cvEX6.js";import"./screenUtils-BuM_Fswi.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./QueryEngine-BnxbU8wo.js";import"./normalizeUtils-Cm7zySIZ.js";import"./normalizeUtilsCommon-DRIluWnF.js";import"./timeSupport-BFvqZpey.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-RSnx-Q9D.js";import"./utils-B6UP7_Wm.js";import"./utils-8IYHD2E1.js";import"./ClassBreaksDefinition-CNLSnW5r.js";import"./scaleUtils-0K_Ry6I1.js";import"./FeatureStore-BZ4BTL-O.js";import"./BoundsStore-CvIYB3Tm.js";import"./Program-BB52p2Mx.js";import"./heatmapTextureUtils-Ccf4XLi5.js";import"./projectExtentUtils-9sG7uFGp.js";import"./query-BtFvR4zF.js";import"./pbfQueryUtils-D79yLlDs.js";import"./pbf-C8CvrhFv.js";import"./WorkerHandle-DKpIZ9kk.js";import"./EventedSet-DUmR4FeL.js";import"./FeatureLayerView-Dov96BNZ.js";import"./RefreshableLayerView-B0936Ssp.js";import"./Viewpoint-CB1GAuK3.js";import"./Cyclical-BY9qISY1.js";import"./jsxFactory-BxQYPm-b.js";import"./GraphicsCollection-CKieR40M.js";import"./debugFlags-BbJIqrPU.js";import"./RenderCoordsHelper-zH8WjGkC.js";import"./DefaultUI-DIlogOoy.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./heightModelInfoUtils-CdtST1Ra.js";import"./mat2df64-CBKYtunK.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-DfZw-NIf.js";import"./accessibleHandler-DsewpcQ5.js";import"./Compass-C-feYp_a.js";import"./utils-DsJqvptN.js";import"./GoTo-BzS22eXk.js";import"./NavigationToggle-QjJqvxo5.js";import"./Zoom-Ct1er6X1.js";import"./viewpointUtils-BxfIO3H-.js";import"./earthUtils-ir2LnhMw.js";import"./spatialReferenceSupport-DPLkW2jK.js";import"./ElevationSamplerData-CC_B5wrl.js";import"./Environment-B2HYg6Z1.js";import"./projectPointToWGS84ComparableLonLat-D5kdMIn_.js";import"./projectVectorToWGS84ComparableLonLat-DuPw0-Mv.js";import"./ShadowCastVisualizeTechniqueConfiguration-DqJ__9Ii.js";import"./ray-CCzLdiTI.js";import"./ZoomMomentumEstimator-PITOvV-p.js";import"./labelFormatUtils-BN4HkzS9.js";import"./FeatureTileDescriptor3D-BLJXkD6Q.js";import"./ElevationQueryTileCache-CV2Fph_A.js";import"./hitTestSelectUtils-UXJPjatw.js";import"./LercDecoder-FUH0zkya.js";import"./RenderableTile-CQN7Nxvi.js";import"./enums-BRzLM11V.js";import"./TileStrategy-BMTAwxMt.js";import"./TileKey-Drwp1tmy.js";import"./QueueProcessor-DFkcFyJt.js";import"./config-MDUrh2eL.js";import"./DefaultVertexAttributeLayouts-Co_GH1pH.js";import"./DisplayObject-B9oc5ibO.js";import"./rasterUtils-DImlUReg.js";import"./StyleDefinition-pu9RBNlY.js";import"./resources-DJFXXcdR.js";import"./edgeProcessing-Crq4tMpw.js";import"./EdgeWorkerHandle-CAkTfCpv.js";import"./workerHelper-CE2O_zfa.js";import"./testSVGPremultipliedAlpha-Dsq4J0WV.js";import"./RenderingContext-CzjLpUzJ.js";import"./ProgramCache-DX9Ty2iR.js";import"./SceneModification-D9K6gWLA.js";import"./persistable-DTlPUvTn.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-5aSW4bDb.js";import"./SceneLayerWorker-9TFrk9Zl.js";import"./makeScheduleFunction-CggzEh3c.js";const q=(r,e)=>{let t=class extends Q(A(B.EventedMixin(r))){constructor(i){super(i),this.sublayer=null,this.parent=null,this.view=null}initialize(){}get suspended(){return!this.canResume()}get updating(){return!this.suspended&&this.isUpdating()}get visible(){var i;return!!((i=this.sublayer)!=null&&i.visible)}set visible(i){this._overrideIfSome("visible",i)}get fullOpacity(){var s,o;const i=a=>a??1;return i((s=this.sublayer)==null?void 0:s.opacity)*i((o=this.parent)==null?void 0:o.fullOpacity)}canResume(){var i,s;return!((i=this.parent)!=null&&i.suspended)&&((s=this.view)==null?void 0:s.ready)&&this.visible||!1}isUpdating(){return!1}};return n([l()],t.prototype,"sublayer",void 0),n([l()],t.prototype,"parent",void 0),n([l({readOnly:!0})],t.prototype,"suspended",null),n([l({type:Boolean,readOnly:!0})],t.prototype,"updating",null),n([l()],t.prototype,"view",void 0),n([l()],t.prototype,"visible",null),n([l()],t.prototype,"fullOpacity",null),t=n([E("esri.views.3d.layers.BuildingSublayerView3D")],t),t};var d;(function(r){r[r.Solid=0]="Solid",r[r.WireFrame=1]="WireFrame",r[r.XRay=2]="XRay"})(d||(d={}));const P=.15,ge=.5*P;function fe(r){switch(r.filterMode.type){case"solid":return{mode:d.Solid};case"wire-frame":return{mode:d.WireFrame,edgeMaterial:ee(r.filterMode.edges,{})};case"x-ray":return{mode:d.XRay}}}function L(r,e){if(e==null)return r.color[3]=0,r.edgeMaterial=null,void(r.pickable=!1);switch(e.mode){case d.Solid:return;case d.WireFrame:return r.color[3]=0,r.edgeMaterial=e.edgeMaterial,void(r.pickable=!1);case d.XRay:return r.color[0]=1,r.color[1]=1,r.color[2]=1,r.color[3]*=P,r.colorMixMode=te.Replace,r.castShadows=!1,r.pickable=!1,void(r.edgeMaterial=be(r.edgeMaterial))}}function be(r){return r==null?null:(g.lastMaterial!==r&&(g.cachedMaterial=we(r),g.lastMaterial=r),g.cachedMaterial)}function we(r){const e=N(r.color);return e[3]*=ge,{...r,color:e}}const g={cachedMaterial:null,lastMaterial:null};class f extends R{constructor(){super(...arguments),this.sublayer=null}get updating(){return!1}get suspended(){return!1}get availableFields(){return[]}get filter(){return null}set filter(e){throw new Error("Not implemented")}queryFeatures(e,t){throw new Error("Not implemented")}queryObjectIds(e,t){throw new Error("Not implemented")}queryFeatureCount(e,t){throw new Error("Not implemented")}createQuery(){throw new Error("Not implemented")}queryExtent(e,t){throw new Error("Not implemented")}highlight(e){throw new Error("Not implemented")}}n([l()],f.prototype,"sublayer",void 0),n([l()],f.prototype,"availableFields",null),n([l()],f.prototype,"filter",null);let p=class extends ae(pe(Z(q(f)))){constructor(){super(...arguments),this.type="building-component-sublayer-3d",this.layerView=null,this._elevationContext="scene",this._isIntegratedMesh=!1,this._supportsLabeling=!1,this.requiredFields=[],this.progressiveLoadFactor=1,this._queryEngine=null}get i3slayer(){return this.sublayer}get layerUid(){return this.sublayer.layer.uid}get sublayerUid(){return this.sublayer.uid}get layerId(){return this.sublayer.layer.id}get sublayerId(){return this.sublayer.id}get layerPopupEnabledAndHasTemplate(){var e,t;return this.sublayer.popupEnabled&&ue(this.sublayer,(t=(e=this.layerView)==null?void 0:e.view.popup)==null?void 0:t.defaultPopupTemplateEnabled)}initialize(){this._updatingHandles.add(()=>this.mergedFilter,t=>{t!=null&&b.checkSupport(t)?this._i3sFilter==null?this._i3sFilter=new b({viewFilter:t,layerFieldsIndex:this.sublayer.fieldsIndex,loadAsyncModule:i=>this._loadAsyncModule(i),addSqlFilter:(i,s)=>this.addSqlFilter(i,s,this.logError),addTimeFilter:(i,s)=>this.addTimeFilter(i,s)}):this._i3sFilter.viewFilter=t:this._i3sFilter=U(this._i3sFilter)},w),this._updatingHandles.add(()=>[this.sublayer.renderer,this.definitionExpressionFields,this.filterExpressionFields,this.timeFilterFields],()=>this._updateRequiredFields()),this._updatingHandles.add(()=>this.sublayer.renderer,t=>this._rendererChange(t),x);const e=()=>this._filterChange();this._updatingHandles.add(()=>this.parsedDefinitionExpression,e),this._updatingHandles.add(()=>{var t;return(t=this._i3sFilter)==null?void 0:t.sortedObjectIds},e),this._updatingHandles.add(()=>{var t;return(t=this._i3sFilter)==null?void 0:t.parsedWhereClause},e),this._updatingHandles.add(()=>this.getTimeFilterDependencies(),e),this._updatingHandles.add(()=>this.mergedFilter,e),this._updatingHandles.add(()=>{var t,i;return[(t=this._i3sFilter)==null?void 0:t.parsedGeometry,(i=this.filter)==null?void 0:i.spatialRelationship]},()=>this._geometryFilterChange()),this._updatingHandles.add(()=>this.parsedFilterExpressions,()=>this._updateSymbologyOverride(),x),this.addResolvingPromise(this._updateRequiredFields())}get lodFactor(){return this.view.qualitySettings.sceneService.object.lodFactor}get parsedFilterExpressions(){return this.sublayer.modelName!=="Overview"&&this.layerView?this.layerView.filterExpressions.map(([e,t])=>{let i;try{i=Y.create(e,this.sublayer.fieldsIndex)}catch(a){return y.getLogger(this).error("Failed to parse filterExpression: "+a),null}if(!i.isStandardized)return y.getLogger(this).error("filterExpression is using non standard function"),null;const s=[],o=i.fieldNames;return oe(o,this.sublayer.fields,{missingFields:s}),s.length>0?(y.getLogger(this).error(`filterExpression references unknown fields: ${s.join(", ")}`),null):[i,t]}).filter(e=>e!=null):[]}get filter(){return this._get("filter")}set filter(e){this._set("filter",b.checkSupport(e)?e:null)}isUpdating(){var e;return super.isUpdating()||(((e=this._i3sFilter)==null?void 0:e.updating)??!1)}_updateSymbologyOverride(){const e=this.parsedFilterExpressions;e.length>0?this._setSymbologyOverride((t,i)=>{for(const[s,o]of e)try{if(s.testFeature(t))return L(i,o)}catch(a){this.logError(a)}return L(i,null)},this.filterExpressionFields):this._setSymbologyOverride(null,null)}get filterExpressionFields(){return c(this.sublayer.fieldsIndex,this.parsedFilterExpressions.reduce((e,[t])=>e.concat(t.fieldNames),new Array))}get timeFilterFields(){const{timeExtent:e}=this,{timeInfo:t,fieldsIndex:i}=this.sublayer;if(e==null||t==null)return[];const{startField:s,endField:o}=t;return c(i,[s,o])}get availableFields(){const e=this.sublayer,t=e.fieldsIndex;let i=this.requiredFields;if(e.outFields||e.layer.outFields){const s=[...e.outFields||[],...e.layer.outFields||[]];i=[...S(t,s),...i]}return c(t,i)}_createLayerGraphic(e){const t=new F(null,null,e);return t.layer=this.sublayer.layer,t.sourceLayer=this.sublayer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}async fetchPopupFeaturesFromGraphics(e,t){const i=this._validateFetchPopupFeatures(t);if(i)throw i;if(e.length===0)return[];const s=[],o=[],a=this.sublayer.associatedLayer!=null?await this.sublayer.associatedLayer.load(t):this.sublayer,h=S(this.sublayer.fieldsIndex,await de(a,M(this.sublayer,t)));O(t);const v=new Set;for(const m of e)G(h,m,v)?o.push(m):s.push(m);return o.length===0?s:(this.sublayer.associatedLayer!=null&&await this.sublayer.associatedLayer.load().catch(()=>y.getLogger(this).warn("Failed to load associated feature layer. Displaying popup attributes from cached attributes.")),this.whenGraphicAttributes(o,Array.from(v)).catch(m=>(H(m),o)).then(m=>s.concat(m)))}async _updateRequiredFields(){const e=c(this.sublayer.fieldsIndex,[...this.sublayer.renderer?await this.sublayer.renderer.getRequiredFields(this.sublayer.fieldsIndex):[],...this.definitionExpressionFields,...this.filterExpressionFields,...this.timeFilterFields]);this._set("requiredFields",e)}_validateFetchPopupFeatures(e){const{sublayer:t}=this,{popupEnabled:i}=t;return i?M(t,e)?void 0:new V("buildingscenelayerview3d:fetchPopupFeatures","Layer does not define a popup template",{sublayer:t}):new V("buildingscenelayerview3d:fetchPopupFeatures","Popups are disabled",{sublayer:t})}getFilters(){var t;const e=super.getFilters();return this.addSqlFilter(e,this.parsedDefinitionExpression,this.logError),(t=this._i3sFilter)==null||t.addFilters(e,this.view,this._controller.crsIndex,this._collection),e}createQuery(){const e={outFields:["*"],returnGeometry:!1,outSpatialReference:this.view.spatialReference};return this.filter!=null?this.filter.createQuery(e):new $(e)}queryExtent(e,t){return this._ensureQueryEngine().executeQueryForExtent(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatureCount(e,t){return this._ensureQueryEngine().executeQueryForCount(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatures(e,t){return this._ensureQueryEngine().executeQuery(this._ensureQuery(e),t==null?void 0:t.signal).then(i=>{if(!(i!=null&&i.features))return i;const s=this.sublayer,o=s.layer;for(const a of i.features)a.layer=o,a.sourceLayer=s;return i})}queryObjectIds(e,t){return this._ensureQueryEngine().executeQueryForIds(this._ensureQuery(e),t==null?void 0:t.signal)}_ensureQueryEngine(){return this._queryEngine==null&&(this._queryEngine=this._createQueryEngine()),this._queryEngine}_createQueryEngine(){const e=J(this.view.spatialReference,this.view.renderSpatialReference,this._collection);return new re({layerView:this,priority:me.FEATURE_QUERY_ENGINE,spatialIndex:new ie({featureAdapter:new se({objectIdField:this.sublayer.objectIdField,attributeStorageInfo:this.sublayer.attributeStorageInfo,getFeatureExtent:e}),forAllFeatures:(t,i)=>this._forAllFeatures((s,o,a)=>t({id:s,index:o,meta:a}),i,K.QUERYABLE),getFeatureExtent:e,sourceSpatialReference:ne(this.sublayer),viewSpatialReference:this.view.spatialReference})})}_ensureQuery(e){return this._addDefinitionExpressionToQuery(e==null?this.createQuery():$.from(e))}};n([l()],p.prototype,"i3slayer",null),n([l()],p.prototype,"layerView",void 0),n([l()],p.prototype,"lodFactor",null),n([l({readOnly:!0})],p.prototype,"parsedFilterExpressions",null),n([l({type:T})],p.prototype,"filter",null),n([l()],p.prototype,"_i3sFilter",void 0),n([l({type:[String],readOnly:!0})],p.prototype,"filterExpressionFields",null),n([l({type:[String],readOnly:!0})],p.prototype,"timeFilterFields",null),n([l({type:[String],readOnly:!0})],p.prototype,"requiredFields",void 0),n([l({type:[String],readOnly:!0})],p.prototype,"availableFields",null),p=n([E("esri.views.3d.layers.BuildingComponentSublayerView3D")],p);const Fe=p;class _ extends ce{constructor(e){super(e),this.layer=null,this.sublayerViews=null}highlight(e){throw new Error("Not implemented")}}n([l()],_.prototype,"layer",void 0),n([l()],_.prototype,"sublayerViews",void 0);const _e=q(R);let u=class extends he(_){constructor(r){super(r),this.type="building-scene-3d",this.sublayerViews=new I,this._abortController=new AbortController,this._loadingComponents=0,this._pendingWhenSublayerViews=new Map,this.ignoresMemoryFactor=!1}get filterExpression(){var i;const r=this.layer.activeFilterId,e=r!=null?this.layer.filters.find(s=>s.id===r):null,t=e!=null?(i=e.filterBlocks)==null?void 0:i.find(s=>s.filterMode.type==="solid"):null;return t?t.filterExpression:null}get filterExpressions(){const r=this.layer.activeFilterId,e=r!=null?this.layer.filters.find(t=>t.id===r):null;return e!=null&&e.filterBlocks?e.filterBlocks.toArray().map(t=>[t.filterExpression??"",fe(t)]):[]}get updatingProgressValue(){const r=this.sublayerViews,e=this._loadingComponents+(r?r.length:0);return r.reduce((t,i)=>t+i.updatingProgress,0)/e}isUpdating(){return this._loadingComponents>0||this.sublayerViews&&this.sublayerViews.some(r=>r.updating)}initialize(){le(this.layer.spatialReference,this.view.spatialReference,this.view.viewingMode),this._initializeSubLayerViews(this.layer.sublayers,this)}destroy(){this.sublayerViews&&(this.sublayerViews.forEach(r=>r.destroy()),this.sublayerViews=null),this._abortController=j(this._abortController)}_initializeSubLayerViews(r,e){const t=this,i=this.view;r.forEach(s=>{if(!s.isEmpty)if(s.type==="building-group"){const o=new _e({sublayer:s,view:i,parent:e});this._initializeSubLayerViews(s.sublayers,o)}else s.geometryType==="mesh"&&(this._loadingComponents++,s.load({signal:this._abortController.signal}).then(()=>{const o=new Fe({sublayer:s,layerView:t,view:i,parent:e});this.sublayerViews.push(o);const a=this._pendingWhenSublayerViews.get(s);if(a){for(const h of a)h.resolve(o);this._pendingWhenSublayerViews.delete(s)}this.addHandles([C(()=>o.updating,()=>this.notifyChange("updating"),w),C(()=>o.updatingProgress,()=>this.notifyChange("updatingProgressValue"),w)])}).catch(o=>{k(o)||y.getLogger(this).error(`Error while creating view for sublayer ${s.id}
Layer: ${this.layer.url}
`,o)}).then(()=>{this._loadingComponents--,this.notifyChange("updating"),this.notifyChange("updatingProgressValue")}))})}getGraphicFromIntersectorTarget(r){for(const e of this.sublayerViews.items)if(e.sublayer.uid===r.sublayerUid)return e.getGraphicFromIntersectorTarget(r);return null}async fetchPopupFeaturesFromGraphics(r,e){if(r.length===0)return[];const t=W(r,o=>o.sourceLayer),i=[];for(const[o,a]of t){const h=this._findComponent(o);h!=null&&i.push(h.fetchPopupFeaturesFromGraphics(a,e))}const s=await D(i);return O(e),s.flat()}whenGraphicBounds(r){const e=this._findComponent(r.sourceLayer);return e==null?Promise.reject():e.whenGraphicBounds(r)}getAABBFromIntersectorTarget(r){for(const e of this.sublayerViews.items)if(e.sublayer.uid===r.sublayerUid)return e.getAABBFromIntersectorTarget(r);return null}async whenSublayerView(r){const e=this._findComponent(r);if(e!=null)return e;const t=this._pendingWhenSublayerViews.get(r),i=z();return t?t.push(i):this._pendingWhenSublayerViews.set(r,[i]),i.promise}_findComponent(r){return this.sublayerViews.find(e=>r===e.sublayer)}highlight(r){r instanceof F?r=[r]:r instanceof I&&(r=r.toArray());const e=[];if(Array.isArray(r)&&r.length>0&&r[0]instanceof F){const t=r,i=new Map;for(const s of t){let o=i.get(s.sourceLayer);o==null&&(o=[],i.set(s.sourceLayer,o)),o.push(s)}this.sublayerViews.forEach(s=>{const o=i.get(s.sublayer);o&&e.push(s.highlight(o))})}return X(e)}get usedMemory(){return this.sublayerViews.reduce((r,e)=>r+e.usedMemory,0)}get unloadedMemory(){return this.sublayerViews.reduce((r,e)=>r+e.unloadedMemory,0)}};n([l()],u.prototype,"sublayerViews",void 0),n([l({readOnly:!0})],u.prototype,"filterExpression",null),n([l({readOnly:!0})],u.prototype,"filterExpressions",null),n([l(ye)],u.prototype,"updatingProgress",void 0),n([l({readOnly:!0,dependsOn:[]})],u.prototype,"updatingProgressValue",null),u=n([E("esri.views.3d.layers.BuildingSceneLayerView3D")],u);const Ds=u;export{Ds as default};
