import{n as c,o as t,y as e,X as p,bg as l,T as y,bh as d}from"./index-8ERthB3p.js";import{s as g,o as a}from"./UtilityNetwork-BaSgO-Ex.js";const n=new c({startingPoint:"starting-point",barrier:"barrier"});let i=class extends l{constructor(o){super(o),this.globalId=null,this.isFilterBarrier=!1,this.percentAlong=null,this.terminalId=null,this.type=null}};t([e({type:String,json:{write:!0}})],i.prototype,"globalId",void 0),t([e({type:Boolean,json:{write:!0}})],i.prototype,"isFilterBarrier",void 0),t([e({type:Number,json:{write:!0}})],i.prototype,"percentAlong",void 0),t([e({type:Number,json:{write:!0}})],i.prototype,"terminalId",void 0),t([e({type:n.apiValues,json:{type:n.jsonValues,read:{reader:n.read,source:"traceLocationType"},write:{writer:n.write,target:"traceLocationType"}}})],i.prototype,"type",void 0),i=t([p("esri.rest.networks.support.TraceLocation")],i);const m=i;var s;let r=s=class extends l{static from(o){return d(s,o)}constructor(o){super(o),this.namedTraceConfigurationGlobalId=null,this.gdbVersion=null,this.traceLocations=[],this.moment=null,this.outSpatialReference=null,this.traceConfiguration=null,this.resultTypes=null,this.traceType=null}};t([e({type:String,json:{read:{source:"traceConfigurationGlobalId"},write:{target:"traceConfigurationGlobalId"}}})],r.prototype,"namedTraceConfigurationGlobalId",void 0),t([e({type:String,json:{write:!0}})],r.prototype,"gdbVersion",void 0),t([e({type:[m],json:{write:!0}})],r.prototype,"traceLocations",void 0),t([e({type:Date,json:{type:Number,write:{writer:(o,u)=>{u.moment=o?o.getTime():null}}}})],r.prototype,"moment",void 0),t([e({type:y,json:{read:!1}})],r.prototype,"outSpatialReference",void 0),t([e({type:g,json:{write:!0}})],r.prototype,"traceConfiguration",void 0),t([e({type:[Object],json:{write:!0}})],r.prototype,"resultTypes",void 0),t([e({type:a.apiValues,json:{type:a.jsonValues,read:a.read,write:a.write}})],r.prototype,"traceType",void 0),r=s=t([p("esri.rest.networks.support.TraceParameters")],r);const b=r,f=Object.freeze(Object.defineProperty({__proto__:null,default:b},Symbol.toStringTag,{value:"Module"}));export{f as T,m as a,b as u};
