import{o as a,y as n,bi as J,j8 as f,X as M,P as Q,a as X,bW as $,gJ as w,fC as Z,Z as P,kV as A,ju as Y,cr as _,cu as tt,lQ as et,d1 as C,jp as it,ej as S,f_ as x}from"./index-8ERthB3p.js";import{e as b,O as st,n as L,i as at}from"./jsxFactory-BxQYPm-b.js";import{c as nt}from"./Analysis-BVF2oUso.js";import{e as ot}from"./defaultUnit-gjMTMp_C.js";import{t as rt}from"./memoize-DsJmrG76.js";import{h as lt}from"./UpdatingHandles-ugzlsvZF.js";import{x as v}from"./hydratedFeatures-DqrDm0_F.js";import{q as H}from"./measurementUtils-BB1pb2Gz.js";import{O as pt}from"./SnappingVisualizer3D-CgXvcLRx.js";import{z as ht,q as ut}from"./dragEventPipeline3D-B83b_Wx5.js";import{d as U,a as k,e as E}from"./RenderObject-BqR7Zmh-.js";import{c as dt}from"./LaserlineVisualElement-CzVKEaBL.js";import{s as T}from"./RenderGeometry-rcUvJmRA.js";import{i as F,x as mt}from"./InteractiveToolBase-yKkEJSmV.js";import{t as gt}from"./ToolIntersector-CvpYdI04.js";import{o as ct}from"./ShadedColorMaterial.glsl-CbYoK34J.js";import{V as _t,p as yt,P as wt}from"./EditGeometryOperations-3XHFCAp6.js";import{a as vt}from"./SceneSnappingManagerPool-BaW4AOlb.js";import{e as ft}from"./SnappingContext-Cpn1WUY8.js";import{f as Mt}from"./SnappingDragPipelineStep-selKU1rW.js";import{p as Vt}from"./SnappingOperation-B1FLBSOP.js";import{N as bt}from"./angularMeasurementUtils-CATp35qy.js";import{n as I}from"./screenUtils-BuM_Fswi.js";import{_ as Dt}from"./InteractiveAnalysisViewModel-BepJ3kHo.js";import{e as R}from"./globalCss-DfZw-NIf.js";import{u as Pt}from"./MeasurementWidgetContent-BBPWDwmp.js";import"./getDefaultUnitForView-BEilgbp7.js";import"./projectVectorToVector-C3SBBDgz.js";import"./projectPointToVector-qKp-AJ2b.js";import"./geometryEngine-MBwx6Ib1.js";import"./geometryEngineBase-Cz__5BKm.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-7yclY7Co.js";import"./projectPointToWGS84ComparableLonLat-D5kdMIn_.js";import"./projectVectorToWGS84ComparableLonLat-DuPw0-Mv.js";import"./geodesicUtils-D1kRRrco.js";import"./sphere-Bf4ezJdT.js";import"./ObjectStack-BPo9QGhV.js";import"./plane-Du3EYICn.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-BrpT0VRp.js";import"./vec2f64-Diu2Kaa8.js";import"./mathUtils-iSLnUy_4.js";import"./elevationInfoUtils-sHEwmo9N.js";import"./ExtendedLineVisualElement-CQkDkcGr.js";import"./vec4f32-CjrfB-0a.js";import"./frustum-BrAPXuhm.js";import"./lineSegment-DVvvMBnG.js";import"./EngineVisualElement-DUG0X7vS.js";import"./VisualElement-CI1nOGdz.js";import"./ContentObject-BTgEhnct.js";import"./Material-DwPnlQDw.js";import"./interfaces-B8ge7Jg9.js";import"./basicInterfaces-DngWxyLO.js";import"./VertexAttribute-BnAa5VW0.js";import"./ViewingMode-Dodu7ZZk.js";import"./Util-B8vYs4k8.js";import"./vec2-Dt9Foiri.js";import"./Laserlines.glsl-CH220B6j.js";import"./Object3DVisualElement-D2TYUCro.js";import"./ColorMaterial.glsl-uPKQoFFi.js";import"./mat3-CqxUQBLP.js";import"./BufferView-CHYzaV9A.js";import"./Texture-C7A05GrI.js";import"./BindType-BmZEZMMh.js";import"./enums-DSseSvdG.js";import"./Texture-O7Pyotwx.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./requestImageUtils-DP1V3HlH.js";import"./InterleavedLayout-s3MgOYN8.js";import"./types-D0PSWh4d.js";import"./VertexColor.glsl-CScvx9pF.js";import"./OrderIndependentTransparency-Cua2R8AE.js";import"./floatRGBA-CCqnXShd.js";import"./RightAngleQuadVisualElement-TrRXC01x.js";import"./Attribute-B-NAci_J.js";import"./Geometry-CqGtfd4N.js";import"./Indices-DP3oX5Sg.js";import"./triangle-CTblFuF6.js";import"./SnappingVisualizer-DfDIQ0EV.js";import"./PointSnappingHint-DFYGb6IS.js";import"./viewUtils-DC86MEAQ.js";import"./ray-CCzLdiTI.js";import"./ElevationProvider-Bd4qfXCi.js";import"./boundedPlane-CLJ-Xnn_.js";import"./verticalOffsetUtils-BYv4Nk2v.js";import"./orientedBoundingBox-BQvYwCTM.js";import"./quat-DUnoL8dP.js";import"./spatialReferenceEllipsoidUtils-CmEPjh7T.js";import"./computeTranslationToOriginAndRotation-BbJd4iYX.js";import"./interfaces-D6pIddIh.js";import"./DoubleArray-068mylUp.js";import"./glUtil-DS73TAjp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BufferObject-CaEbWulZ.js";import"./vec3f32-Cw9Q6TO_.js";import"./axisAngleDegrees-CaSFQR2z.js";import"./weather-D00pIeau.js";import"./RenderState-DaVlEYWY.js";import"./NestedMap-DgiGbX8E.js";import"./Octree-E7a40xr7.js";import"./Intersector-8rpRuT_8.js";import"./VertexArrayObject-Cv4RwmVi.js";import"./Scheduler-DaHJO6l7.js";import"./signal-DoM1gSF0.js";import"./debugFlags-BbJIqrPU.js";import"./meshVertexSpaceUtils-KRc33Yrq.js";import"./MeshLocalVertexSpace-C8ABjEju.js";import"./vec3-DPXcG_yS.js";import"./interfaces-DkjgzG8v.js";import"./drawUtils-C6Di23Hl.js";import"./geometry2dUtils-DoOkpuKA.js";import"./SnappingManager-DUlqpdAB.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./layerViewUtils-Bi2wmOiN.js";import"./Cyclical-BY9qISY1.js";import"./quantityUtils-9zDVxeky.js";import"./geodesicMeasurementUtils-BcTpN3Xi.js";import"./dehydratedFeatureComparison-DdCJ1gSj.js";import"./UnitSelect-vwLT4dGV.js";let c=class extends nt{constructor(e){super(e),this.type="area-measurement",this.unit=null}set geometry(e){e!=null?(e.rings.length>1&&Q.getLogger(this).warn("Measuring polygons with multiple rings is not supported."),this._set("geometry",e.clone())):this._set("geometry",null)}get requiredPropertiesForEditing(){if(this.geometry!=null&&this.geometry.rings.length===1){const e=this.geometry.rings[0];if(e.length<=2||!X(e[0],e[e.length-1]))return[null]}return[this.geometry]}clear(){this.geometry=null}};a([n({type:["area-measurement"]})],c.prototype,"type",void 0),a([n({value:null,type:J})],c.prototype,"geometry",null),a([n({type:f,value:null})],c.prototype,"unit",void 0),a([n({readOnly:!0})],c.prototype,"requiredPropertiesForEditing",null),c=a([M("esri.analysis.AreaMeasurementAnalysis")],c);const B=c;class St{constructor(e,i=null){this.screenPoint=e,this.result=i}}class xt{constructor(e,i){this.scenePoint=e,this.mapPoint=i}}class Ot{constructor(e){this.vertexManipulators=[],this._destroyed=!1,this._isManipulatorsOwner=!0,this._visible=!0,this._listenerHandles=null,this._tempHandlePosition=$();const{analysisViewData:i,manipulators:s,toolState:r,view:o,visible:l}=e;this._analysisViewData=i,this._toolState=r,s!=null?(this._manipulators=s,this._isManipulatorsOwner=!1):this._manipulators=new F,this._view=o,this._intersector=gt(o.state.viewingMode);const p=U(this._handleColor),d=[new k(T(p,1,32,32))],g=new E({view:o,renderObjects:d});g.available=!1,g.radius=z,g.interactive=!1,this._manipulators.add(g),this._cursorManipulator=g,this._cursorManipulatorMaterial=p,this._laserLine=new dt({view:o,attached:!0,style:{glowWidth:At,glowFalloff:Ct,innerWidth:Lt},isDecoration:!0}),this._updateVisibility(l??!0)}destroy(){this._listenerHandles=w(this._listenerHandles),this._isManipulatorsOwner?this._manipulators=w(this._manipulators):this._manipulators=null,this._laserLine=w(this._laserLine),this._destroyed=!0}get destroyed(){return this._destroyed}get visible(){return this._visible}set visible(e){e?this.show():this.hide()}get testData(){const e=this._laserLine.testData;return{laserLineRenderer:e!=null?{heightManifoldEnabled:e.heightManifoldEnabled,heightManifoldTarget:e.heightManifoldTarget,pointDistanceEnabled:e.pointDistanceEnabled,pointDistanceOrigin:e.pointDistanceOrigin,pointDistanceTarget:e.pointDistanceTarget,lineVerticalPlaneEnabled:e.lineVerticalPlaneEnabled}:{heightManifoldEnabled:!1,heightManifoldTarget:null,pointDistanceEnabled:!1,pointDistanceOrigin:null,pointDistanceTarget:null,lineVerticalPlaneEnabled:!1}}}show(){this._setVisibility(!0)}hide(){this._setVisibility(!1)}_setVisibility(e){this._destroyed||this._visible===e||this._updateVisibility(e)}_updateVisibility(e){this._visible=e,this._laserLine.visible=e,e?(this._initializeListeners(),this._updateAll()):(this._destroyListeners(),this.vertexManipulators.forEach(({manipulator:i})=>this._removeVertexManipulator(i)),this.vertexManipulators=[],this._view.cursor=null)}vertexHandleAt(e,i){const s=this._manipulators.intersect(e,i);return s==null?void 0:s.metadata}pick(e){const i=this._view.spatialReference,s=Z(e.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(s,this._intersector);const r=this._intersector.results.min,o=$();if(!r.getIntersectionPoint(o))return null;const l=this._view.renderCoordsHelper.fromRenderCoords(o,new P({spatialReference:i}));return l==null?null:new xt(o,l)}_updateAll(){this._visible&&(this._updateVertexManipulators(),this._updateLaserLine())}_createVertexManipulator(){const e=U(this._handleColor),i=[new k(T(e,1,32,32))],s=new E({view:this._view,renderObjects:i});return s.radius=z,this._manipulators.add(s),{manipulator:s,material:e}}_removeVertexManipulator(e){this._manipulators.remove(e)}_updateVertexManipulators(){const{viewData:e}=this._analysisViewData,i=this._analysisViewData.path?this._analysisViewData.path.vertices:[],s=this.vertexManipulators;$t(s,i.length,()=>this._createVertexManipulator(),({manipulator:r})=>this._removeVertexManipulator(r)),s.forEach(({manipulator:r},o)=>{r.metadata=i[o],r.renderLocation=e.positionsRenderCoords[o],r.cursor=o===0&&this._toolState.polygonState==="drawing"?"crosshair":null}),this._toolState.polygonState==="drawing"&&this._analysisViewData.stagedPoint!=null?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this._analysisViewData.stagedPoint):this._cursorManipulator.available=!1}get _handleColor(){return A(this._view.effectiveTheme.accentColor,.5)}_getFocusPoint(){const{lastDraggedVertex:e}=this._analysisViewData;switch(this._toolState.polygonState){case"drawing":return this._analysisViewData.stagedPoint!=null?this._analysisViewData.stagedPoint:e!=null?this._analysisViewData.path.getVertexPositionAsPoint(e):this._analysisViewData.path.lastPoint;case"editing":return e!=null?this._analysisViewData.path.getVertexPositionAsPoint(e):null;default:return this._analysisViewData.stagedPoint}}_updateLaserLine(){const e=this._toolState.polygonState!=="measured"&&this._toolState.active,i=this._getFocusPoint();if(e&&i!=null){const s=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(i,s),this._laserLine.heightManifoldTarget=s}else this._laserLine.heightManifoldTarget=null}_initializeListeners(){this._listenerHandles=new Y,this._listenerHandles.add([_(()=>this._toolState.polygonState,()=>this._updateLaserLine()),_(()=>this._analysisViewData.viewData,()=>this._updateAll(),tt),_(()=>({lastDraggedVertex:this._analysisViewData.lastDraggedVertex,cursorPoint:this._analysisViewData.stagedPoint}),()=>this._updateLaserLine()),_(()=>this._toolState.active,()=>this._updateAll()),_(()=>this._view.effectiveTheme.accentColor,e=>{const i=A(e,.5);for(const{material:d}of this.vertexManipulators)d.setParameters({color:i});this._cursorManipulatorMaterial.setParameters({color:i});const s=C.toUnitRGB(e),r=C.toUnitRGB(it(e)),o=.75*e.a,l=this._laserLine,p=l.style;l.style={...p,glowColor:s,innerColor:r,globalAlpha:o}},{initial:!0,equals:et})])}_destroyListeners(){this._listenerHandles=w(this._listenerHandles)}}function $t(t,e,i,s){for(;t.length<e;)t.push(i());if(s)for(;t.length>e;)s(t.pop());else t.length=e}const At=8,Ct=8,Lt=1,z=5;let u=class extends ct{constructor(t){super(t),this._updatingHandles=new lt,this.polygonState="initial",this.manipulators=new F,this._getSnappingContext=rt(e=>new ft({elevationInfo:{mode:"absolute-height",offset:0},pointer:e,editGeometryOperations:new _t(new yt("point",wt(!0,!1,this.view.spatialReference))),visualizer:new pt}))}initialize(){const{view:t,analysisViewData:e,manipulators:i,visible:s}=this;this.measurementView=new Ot({view:t,analysisViewData:e,toolState:this,manipulators:i,visible:s});const r=vt(t);this._snappingManagerResult=r,this.addHandles(r),this._snappingOperation=new Vt({view:t}),this._updatingHandles.add(()=>this.stagedPoint,o=>{this.analysisViewData.stagedPoint=o!=null?v(o,new P):null},S),bt(this,()=>{const o=this.view.inputManager.latestPointerType??"mouse",l=this._getSnappingContext(o);this._updatingHandles.addPromise(x(this._snappingOperation.snapAgainNearPreviousMapPoint(this._snappingManager,l)))}),this._setupManipulators(),this.addHandles([_(()=>this.state,o=>{o==="measured"&&this.finishToolCreation()},S),this.analysisViewData.path.on("change",()=>{const o=this.analysisViewData.path;this.polygonState!=="initial"||o.isEmptyPolygon||(o.isValidPolygon?this.polygonState="measured":this.polygonState="drawing")})])}destroy(){this.measurementView.destroy(),this._set("measurementView",null),this._updatingHandles=w(this._updatingHandles)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){return this.analysisViewData.path.numVertices===0?"ready":this.analysisViewData.path.isValidPolygon&&this.polygonState!=="editing"?"measured":"measuring"}get cursor(){return this.state==="ready"||this.polygonState==="drawing"?"crosshair":null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}get stagedPoint(){return this._snappingOperation.stagedPoint}set stagedPoint(t){this._snappingOperation.stagedPoint=t}get snappingOptions(){return this._snappingManager.options}finishMeasurement(){const{path:t}=this.analysisViewData;t.numVertices<3?(t.clear(),this.polygonState="initial"):(t.close(),this.polygonState="measured"),this._resetSnappingState()}onShow(){this.measurementView.show()}onHide(){this.measurementView.hide()}onDeactivate(){this._resetSnappingState()}onInputEvent(t){switch(t.type){case"immediate-double-click":this._handleImmediateDoubleClick(t);break;case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t);break;case"drag":this._handleDrag(t);break;case"key-down":this._handleKeyDown(t)}}_setupManipulators(){const t=i=>i.events.on("grab-changed",()=>{if(this.analysisViewData.path.isValidPolygon){const s=this.manipulators.some(r=>r.manipulator.grabbing);this.polygonState=s?"editing":"measured"}}),e=i=>{this.addHandles([mt(i,(s,r,o,l)=>{const p=ut(s),d=s.metadata,g=this._snappingManager,V=this._getSnappingContext(l),N=this._updatingHandles,{snappingStep:W,cancelSnapping:K}=Mt({snappingManager:g,snappingContext:V,updatingHandles:N});o=o.next(p).next(y=>(this.analysisViewData.lastDraggedVertex=null,this.analysisViewData.path.setVertexPosition(d,O),s.location=O,y)).next(K),r.next(p).next(ht(this.view)).next(...W).next(y=>{s.location=y.mapEnd,this.analysisViewData.lastDraggedVertex=y.action==="end"?null:d,this.analysisViewData.path.setVertexPosition(d,v(y.mapEnd))});const O=v(this.analysisViewData.path.getVertexPositionAsPoint(d))}),t(i)],i)};this.manipulators.forEach(({manipulator:i})=>{e(i)}),this.addHandles([this.manipulators.on("after-add",({item:{manipulator:i}})=>{e(i)}),this.manipulators.on("after-remove",({item:{manipulator:i}})=>this.removeHandles(i))])}_handleImmediateDoubleClick(t){H(t)&&(this.polygonState==="drawing"&&this.finishMeasurement(),t.stopPropagation())}_handleDrag(t){this.polygonState==="editing"&&t.stopPropagation()}_handleImmediateClick(t){if(!H(t))return;const e=I(t),{pointerType:i}=t;if(this.active)switch(this.polygonState){case"initial":if(this._addVertexAt(e,i))return this.stagedPoint=null,this.polygonState="drawing",void t.stopPropagation();break;case"drawing":{const s=this.measurementView.vertexHandleAt(e,i);if(s==null){if(this._addVertexAt(e,i))return this.stagedPoint=null,void t.stopPropagation()}else s.index===0&&(this.finishMeasurement(),t.stopPropagation());break}}t.pointerType==="mouse"&&this._hoverAt(e)}_handlePointerMove(t){if(t.pointerType==="mouse"){const e=I(t);this._hoverAt(e)}}_handleKeyDown(t){const{path:e}=this.analysisViewData;t.key==="Enter"&&this.polygonState==="drawing"&&e.numVertices>=3&&(this.stagedPoint=null,this.finishMeasurement(),t.stopPropagation())}_hoverAt(t){const{polygonState:e}=this;if(this.active&&(e==="initial"||e==="drawing")){const i=this._pick(t);if((i==null?void 0:i.mapPoint)!=null){const s=this._getSnappingContext("mouse");this._updatingHandles.addPromise(x(this._snappingOperation.snap({point:i.mapPoint},this._snappingManager,s)))}}else this.stagedPoint=null}_addVertexAt(t,e){const i=this._pick(t);if((i==null?void 0:i.mapPoint)!=null){const{mapPoint:s}=i,r=this._getSnappingContext(e),o=this._snappingOperation.update({point:s},this._snappingManager,r),l=v(o,new P);return this.analysisViewData.path.add(l),!0}return!1}_pick(t){const e=new St(t);return this.measurementView.pick(e)}_resetSnappingState(){this._snappingManager.doneSnapping(),this._snappingOperation.abort(),this._snappingOperation.stagedPoint=null}get test(){return{snappingManager:this._snappingManager}}};a([n({readOnly:!0})],u.prototype,"state",null),a([n()],u.prototype,"polygonState",void 0),a([n({readOnly:!0})],u.prototype,"cursor",null),a([n()],u.prototype,"measurementView",void 0),a([n({constructOnly:!0})],u.prototype,"view",void 0),a([n({constructOnly:!0})],u.prototype,"analysis",void 0),a([n({constructOnly:!0})],u.prototype,"analysisViewData",void 0),a([n({readOnly:!0})],u.prototype,"manipulators",void 0),a([n()],u.prototype,"updating",null),a([n()],u.prototype,"stagedPoint",null),a([n()],u.prototype,"snappingOptions",null),u=a([M("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],u);const Ht=u;let m=class extends Dt{constructor(t){super(t),this.analysis=null,this.supportedViewType="3d",this.unsupportedErrorMessage="AreaMeasurement3DViewModel is only supported in 3D views.",this._userUnitOptions=null,this._userUnit=null}initialize(){this.addHandles(_(()=>({analysis:this.analysis,unit:this.unit}),({analysis:t,unit:e})=>{t!=null&&(t.unit=e)},S))}get state(){return this.disabled||!this.ready?"disabled":this.tool==null?"ready":this.tool.state}get measurement(){if(this.tool==null||this.disabled||this.tool.destroyed)return null;const{analysisView:t}=this;if(t==null)return null;const e=t.analysisVisualization,i=e.viewData,s=i.measurementData,r=s.validMeasurement,o=i.mode==="euclidean",l=(o?s.intersectingSegments:s.geodesicIntersectingSegments).size===0,p=l?r?"available":"unavailable":"invalid";return{mode:o?"euclidean":"geodesic",area:{text:l&&r?e.areaLabel:null,state:p},perimeterLength:{text:l&&r?e.perimeterLengthLabel:null,state:p}}}set unitOptions(t){this._userUnitOptions=t,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(t){this._userUnit=t?this._findSelectableUnit(t,this._userUnit):null}get unit(){return this._userUnit!=null?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}constructAnalysis(){return new B}constructTool(){return new Ht({view:this.view,analysis:this.analysis,analysisViewData:this.analysisView,visible:this.visible})}_findSelectableUnit(t,e){const{unitOptions:i}=this;return i.includes(t)?t:e!=null?this._findSelectableUnit(e):i[0]}_filteredOrAllUnits(t){if(t==null)return f.slice();const e=t.filter(i=>f.includes(i));return e.length===0?f.slice():e}};a([n({type:B})],m.prototype,"analysis",void 0),a([n({readOnly:!0})],m.prototype,"state",null),a([n({readOnly:!0})],m.prototype,"measurement",null),a([n()],m.prototype,"unitOptions",null),a([n()],m.prototype,"unit",null),a([n(ot)],m.prototype,"defaultUnit",void 0),a([n()],m.prototype,"_userUnit",void 0),m=a([M("esri.widgets.AreaMeasurement3D.AreaMeasurement3DViewModel")],m);const G=m,j="esri-area-measurement-3d",D={base:j,newMeasurementButton:`${j}__clear-button`,widgetIcon:at.measureArea};let h=class extends st{constructor(t,e){super(t,e),this.iconClass=D.widgetIcon,this.icon=null,this.messages=null,this.messagesCommon=null,this.messagesUnits=null,this.viewModel=new G}get view(){return this.viewModel.view}set view(t){this.viewModel.view=t}get visible(){return this.viewModel.visible}set visible(t){this.viewModel.visible=t}get active(){return this.viewModel.active}get analysis(){return this.viewModel.analysis}set analysis(t){this.viewModel.analysis=t}get label(){var t;return((t=this.messages)==null?void 0:t.widgetLabel)??""}set label(t){this._overrideIfSome("label",t)}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(t){this.viewModel.unitOptions=t}get unit(){return this.viewModel.unit}set unit(t){this.viewModel.unit=t}render(){const{messages:t,messagesCommon:e,messagesUnits:i,unit:s,unitOptions:r,viewModel:o}=this,{active:l,measurement:p,state:d,supported:g}=o;return L("div",{"aria-label":this.messages.widgetLabel,class:this.classes(D.base,R.widget,R.panel),key:this,role:"presentation"},this.visible?L(Pt,{active:l,measurementItems:[{key:"direct",title:i.measures.area,value:q(p==null?void 0:p.area)},{key:"perimeter",title:t.perimeterLength,value:q(p==null?void 0:p.perimeterLength)}],messages:{...t,notApplicable:e.notApplicable},newMeasurementButtonClass:D.newMeasurementButton,state:d,supported:g,unit:s,unitOptions:r,onNewMeasurementClick:()=>{x(this.viewModel.start())},onUnitChange:V=>{this.unit=V}}):null)}};function q(t){return(t==null?void 0:t.state)==="available"?t.text:null}a([n()],h.prototype,"view",null),a([n()],h.prototype,"visible",null),a([n()],h.prototype,"active",null),a([n({constructOnly:!0,nonNullable:!0})],h.prototype,"analysis",null),a([n()],h.prototype,"iconClass",void 0),a([n()],h.prototype,"icon",void 0),a([n()],h.prototype,"label",null),a([n(),b("esri/widgets/AreaMeasurement3D/t9n/AreaMeasurement3D")],h.prototype,"messages",void 0),a([n(),b("esri/t9n/common")],h.prototype,"messagesCommon",void 0),a([n(),b("esri/core/t9n/Units")],h.prototype,"messagesUnits",void 0),a([n()],h.prototype,"uiStrings",void 0),a([n({type:G})],h.prototype,"viewModel",void 0),a([n()],h.prototype,"unitOptions",null),a([n()],h.prototype,"unit",null),h=a([M("esri.widgets.AreaMeasurement3D")],h);const Ji=h;export{Ji as default};
