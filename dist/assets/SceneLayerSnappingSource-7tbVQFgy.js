import{o,y as s,X as m,bO as g,bW as S,cX as f,fY as b,h4 as _,g0 as k,a0 as C,q as H}from"./index-8ERthB3p.js";import{h as L}from"./UpdatingHandles-ugzlsvZF.js";import{a as $}from"./EdgeWorkerHandle-CAkTfCpv.js";import{h as E}from"./WorkerHandle-DKpIZ9kk.js";import{B as O}from"./sphere-Bf4ezJdT.js";import{l as I}from"./angularMeasurementUtils-CATp35qy.js";import{a as V}from"./SnappingManager-DUlqpdAB.js";import{r as R}from"./VertexSnappingCandidate-C6L9NQCx.js";import"./workerHelper-CE2O_zfa.js";import"./InterleavedLayout-s3MgOYN8.js";import"./BufferView-CHYzaV9A.js";import"./vec2-Dt9Foiri.js";import"./types-D0PSWh4d.js";import"./Util-B8vYs4k8.js";import"./vec2f64-Diu2Kaa8.js";import"./edgeProcessing-Crq4tMpw.js";import"./deduplicate-j8p9VETP.js";import"./Indices-DP3oX5Sg.js";import"./VertexAttribute-BnAa5VW0.js";import"./glUtil-DS73TAjp.js";import"./enums-DSseSvdG.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./Normals-BAXqRpCA.js";import"./ObjectStack-BPo9QGhV.js";import"./plane-Du3EYICn.js";import"./mat3f64-BBpwCtoL.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-BrpT0VRp.js";import"./mathUtils-iSLnUy_4.js";import"./geodesicUtils-D1kRRrco.js";import"./geometry2dUtils-DoOkpuKA.js";import"./projectVectorToVector-C3SBBDgz.js";import"./projectPointToVector-qKp-AJ2b.js";import"./screenUtils-BuM_Fswi.js";import"./signal-DoM1gSF0.js";import"./elevationInfoUtils-sHEwmo9N.js";import"./Cyclical-BY9qISY1.js";import"./quantityUtils-9zDVxeky.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./layerViewUtils-Bi2wmOiN.js";import"./viewUtils-DC86MEAQ.js";import"./geometryEngine-MBwx6Ib1.js";import"./geometryEngineBase-Cz__5BKm.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-7yclY7Co.js";import"./projectVectorToWGS84ComparableLonLat-DuPw0-Mv.js";import"./geodesicMeasurementUtils-BcTpN3Xi.js";import"./PointSnappingHint-DFYGb6IS.js";let d=class extends g{constructor(e){super(e),this.availability=0,this._ids=new Set}destroy(){this._workerHandle.destroy(),this._workerHandle=null}initialize(){this._workerHandle=new x(this.schedule,{fetchAllEdgeLocations:(e,t)=>this._fetchAllEdgeLocations(e,t)})}async fetchCandidates(e,t){const i=e.coordinateHelper,{point:c}=e,n=P;this.renderCoordsHelper.toRenderCoords(c,i.spatialReference,n);const h=e.distance,p=typeof h=="number"?h:h.distance,u=await this._workerHandle.invoke({bounds:O(n[0],n[1],n[2],p),returnEdge:e.returnEdge,returnVertex:e.vertexMode!=="none"},t);return u.candidates.sort((y,v)=>y.distance-v.distance),u.candidates.map(y=>this._convertCandidate(i,y))}async add(e,t){this._ids.add(e.id),await this._workerHandle.invokeMethod("add",e,t)}async remove(e,t){this._ids.delete(e.id),await this._workerHandle.invokeMethod("remove",e,t)}_convertCandidate(e,t){switch(t.type){case"edge":return new V({objectId:t.objectId,targetPoint:this._convertRenderCoordinate(e,t.target),edgeStart:this._convertRenderCoordinate(e,t.start),edgeEnd:this._convertRenderCoordinate(e,t.end),isDraped:!1});case"vertex":return new R({objectId:t.objectId,targetPoint:this._convertRenderCoordinate(e,t.target),isDraped:!1})}}_convertRenderCoordinate({spatialReference:e},t){const i=S();return this.renderCoordsHelper.fromRenderCoords(t,i,e),I(i)}async _fetchAllEdgeLocations(e,t){const i=[],c=[];for(const{id:n,uid:h}of e.components)this._ids.has(n)&&i.push((async()=>{const p=await this.fetchEdgeLocations(n,t.signal),u=p.locations.buffer;return c.push(u),{id:n,uid:h,objectIds:p.objectIds,locations:u,origin:p.origin,type:p.type}})());return{result:{components:(await Promise.all(i)).filter(({id:n})=>this._ids.has(n))},transferList:c}}};o([s({constructOnly:!0})],d.prototype,"renderCoordsHelper",void 0),o([s({constructOnly:!0})],d.prototype,"fetchEdgeLocations",void 0),o([s({constructOnly:!0})],d.prototype,"schedule",void 0),o([s({readOnly:!0})],d.prototype,"availability",void 0),d=o([m("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],d);class x extends E{constructor(e,t){super("SceneLayerSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated",client:t})}}const P=S();let a=class extends g{get updating(){return this._updatingHandles.updating}constructor(r){super(r),this.availability=1,this._updatingHandles=new L,this._abortController=new AbortController}destroy(){this._tracker=f(this._tracker),this._abortController=b(this._abortController),this._updatingHandles.destroy()}initialize(){const{view:r}=this,e=r.resourceController;this._edgeWorker=new $(w(e)),this._workerHandle=new d({renderCoordsHelper:this.view.renderCoordsHelper,schedule:w(e),fetchEdgeLocations:async(t,i)=>{if(this._tracker==null)throw new Error("tracker-not-initialized");return this._tracker.fetchEdgeLocations(t,this._edgeWorker,i)}}),this._updatingHandles.addPromise(this._setupLayerView()),this.addHandles([_(this._workerHandle),_(this._edgeWorker)])}async fetchCandidates(r,e){return this._workerHandle.fetchCandidates(r,e)}refresh(){}async _setupLayerView(){var t;if(this.destroyed)return;const r=(t=this._abortController)==null?void 0:t.signal,e=await this.getLayerView();e==null||k(r)||(this._tracker=e.trackSnappingSources({add:(i,c)=>{this._updatingHandles.addPromise(this._workerHandle.add({id:i,bounds:c},r))},remove:i=>{this._updatingHandles.addPromise(this._workerHandle.remove({id:i},r))}}))}};function w(r){return e=>r.immediate.schedule(e)}o([s({constructOnly:!0})],a.prototype,"getLayerView",void 0),o([s({constructOnly:!0})],a.prototype,"view",void 0),o([s({readOnly:!0})],a.prototype,"updating",null),o([s({readOnly:!0})],a.prototype,"availability",void 0),a=o([m("esri.views.interactive.snapping.featureSources.I3SSnappingSource")],a);let l=class extends g{get updating(){return this._i3sSources.some(r=>r.updating)}constructor(r){super(r),this.availability=1,this._i3sSources=[]}destroy(){this._i3sSources.forEach(r=>r.destroy()),this._i3sSources.length=0}initialize(){const{view:r}=this,e=this.layerSource.layer;this._i3sSources=e.type==="building-scene"?this._getBuildingSceneI3SSources(r,e):[this._getSceneLayerI3SSource(r,e)]}async fetchCandidates(r,e){const t=await Promise.all(this._i3sSources.map(i=>i.fetchCandidates(r,e)));return C(e),t.flat()}refresh(){this._i3sSources.forEach(r=>r.refresh())}_getBuildingSceneI3SSources(r,e){return e.allSublayers.toArray().map(t=>t.type==="building-component"?new a({getLayerView:async()=>(await r.whenLayerView(e)).whenSublayerView(t),view:r}):null).filter(H)}_getSceneLayerI3SSource(r,e){return new a({getLayerView:async()=>{const t=await r.whenLayerView(e);return t.type==="scene-layer-graphics-3d"?void 0:t},view:r})}};o([s({constructOnly:!0})],l.prototype,"layerSource",void 0),o([s({constructOnly:!0})],l.prototype,"view",void 0),o([s({readOnly:!0})],l.prototype,"updating",null),o([s({readOnly:!0})],l.prototype,"availability",void 0),l=o([m("esri.views.interactive.snapping.featureSources.SceneLayerSnappingSource")],l);export{l as SceneLayerSnappingSource};
