import{dd as A,q as D,T as c,de as v,df as y}from"./index-8ERthB3p.js";import{O as $}from"./quat-DUnoL8dP.js";import{e as M}from"./quatf64-BrpT0VRp.js";import{t as h,n as I}from"./vec3f32-Cw9Q6TO_.js";import{u as O,c as p,i as g,f as w}from"./PointCloudWorkerUtil-DbllgjYC.js";import{O as S}from"./orientedBoundingBox-BQvYwCTM.js";import"./mat3f64-BBpwCtoL.js";import"./PointCloudUniqueValueRenderer-q3IvNVc1.js";import"./I3SBinaryReader-Y2aVLbE7.js";import"./VertexAttribute-BnAa5VW0.js";import"./mat3-CqxUQBLP.js";import"./mat4f64-Dk4dwAN8.js";import"./spatialReferenceEllipsoidUtils-CmEPjh7T.js";import"./computeTranslationToOriginAndRotation-BbJd4iYX.js";import"./plane-Du3EYICn.js";import"./vec2f64-Diu2Kaa8.js";import"./mathUtils-iSLnUy_4.js";import"./ViewingMode-Dodu7ZZk.js";import"./Attribute-B-NAci_J.js";class _{transform(t){const a=this._transform(t),r=[a.points.buffer,a.rgb.buffer];a.pointIdFilterMap!=null&&r.push(a.pointIdFilterMap.buffer);for(const e of a.attributes)"buffer"in e.values&&A(e.values.buffer)&&e.values.buffer!==a.rgb.buffer&&r.push(e.values.buffer);return Promise.resolve({result:a,transferList:r})}_transform(t){const a=O(t.schema,t.geometryBuffer);let r=a.length/3,e=null;const l=new Array,m=p(t.primaryAttributeData,a,r);t.primaryAttributeData!=null&&m&&l.push({attributeInfo:t.primaryAttributeData.attributeInfo,values:m});const o=p(t.modulationAttributeData,a,r);t.modulationAttributeData!=null&&o&&l.push({attributeInfo:t.modulationAttributeData.attributeInfo,values:o});let i=g(t.rendererInfo,m,o,r);if(t.filterInfo&&t.filterInfo.length>0&&t.filterAttributesData!=null){const f=t.filterAttributesData.filter(D).map(s=>{const u=p(s,a,r),b={attributeInfo:s.attributeInfo,values:u};return l.push(b),b});e=new Uint32Array(r),r=w(a,i,e,t.filterInfo,f)}for(const f of t.userAttributesData){const s=p(f,a,r);l.push({attributeInfo:f.attributeInfo,values:s})}3*r<i.length&&(i=new Uint8Array(i.buffer.slice(0,3*r))),this._applyElevationOffsetInPlace(a,r,t.elevationOffset);const n=this._transformCoordinates(a,r,S.fromData(t.obbData),c.fromJSON(t.inSR),c.fromJSON(t.outSR));return{obbData:t.obbData,points:n,rgb:i,attributes:l,pointIdFilterMap:e}}_transformCoordinates(t,a,r,e,l){if(!v(t,e,0,t,l,0,a))throw new Error("Can't reproject");const m=h(r.center),o=I(),i=I(),n=h(r.halfSize);$(d,r.quaternion);const f=new Float32Array(3*a);for(let s=0;s<a;s++){let u=3*s;o[0]=t[u]-m[0],o[1]=t[u+1]-m[1],o[2]=t[u+2]-m[2],y(i,o,d),n[0]=Math.max(n[0],Math.abs(i[0])),n[1]=Math.max(n[1],Math.abs(i[1])),n[2]=Math.max(n[2],Math.abs(i[2])),f[u++]=o[0],f[u++]=o[1],f[u]=o[2]}return r.halfSize=n,f}_applyElevationOffsetInPlace(t,a,r){if(r!==0)for(let e=0;e<a;e++)t[3*e+2]+=r}}const d=M();function V(){return new _}export{V as default};
