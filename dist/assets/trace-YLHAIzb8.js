import{U as i}from"./index-8ERthB3p.js";import{f as g,n as y,s as u}from"./utils-1zmckiYC.js";import{a as l}from"./UtilityNetwork-BaSgO-Ex.js";async function J(a,e,o){const t=g(a),r=e.toJSON();r.traceLocations=JSON.stringify(e.traceLocations),e.resultTypes&&(r.resultTypes=JSON.stringify(e.resultTypes));const n=y(t.query,{query:u({...r,f:"json"}),...o}),s=`${t.path}/trace`;return i(s,n).then(c=>p(c,e.outSpatialReference))}async function S(a,e,o){const t=g(a),r=e.toJSON();r.traceLocations=JSON.stringify(e.traceLocations),e.resultTypes&&(r.resultTypes=JSON.stringify(e.resultTypes));const n=y(t.query,{query:u({...r,async:!0,f:"json"}),...o}),s=`${t.path}/trace`,{data:c}=await i(s,n);return c.statusUrl}function p(a,e){const{data:o}=a,t=l.fromJSON(o.traceResults);return t.aggregatedGeometry&&e&&(t.aggregatedGeometry.line&&(t.aggregatedGeometry.line.spatialReference=e.clone()),t.aggregatedGeometry.multipoint&&(t.aggregatedGeometry.multipoint.spatialReference=e.clone()),t.aggregatedGeometry.polygon&&(t.aggregatedGeometry.polygon.spatialReference=e.clone())),t}export{S as submitTraceJob,J as trace};
