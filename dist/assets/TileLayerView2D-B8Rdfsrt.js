import{b0 as w,a1 as y,a_ as l,P as I,o as m,y as u,X as V}from"./index-8ERthB3p.js";import{c as v}from"./GraphicsCollection-CKieR40M.js";import"./GeometryUtils-_MjrRDxY.js";import"./CIMSymbolHelper-C-U_lWVp.js";import"./enums-BRqP_wXA.js";import"./definitions-B54owTRu.js";import"./vec2f32-BbH2jxlN.js";import"./floatRGBA-CCqnXShd.js";import"./EffectView-C6VBe3AA.js";import"./DisplayObject-B9oc5ibO.js";import"./Container-lXzdRU2v.js";import"./WGLContainer-DrWw77ek.js";import"./vec4f32-CjrfB-0a.js";import"./Texture-O7Pyotwx.js";import"./enums-DSseSvdG.js";import"./Program-BB52p2Mx.js";import"./DefaultVertexAttributeLayouts-Co_GH1pH.js";import{e as g}from"./TileKey-Drwp1tmy.js";import"./LabelMetric-B0IKUycz.js";import"./StyleDefinition-pu9RBNlY.js";import"./enums-BRzLM11V.js";import"./MagnifierPrograms-CFPNC_tH.js";import"./pbf-C8CvrhFv.js";import"./FeatureCommandQueue-ury-Cf8e.js";import"./OrderIndependentTransparency-Cua2R8AE.js";import"./interfaces-B8ge7Jg9.js";import"./testSVGPremultipliedAlpha-Dsq4J0WV.js";import{$ as H}from"./GraphicsView2D-DdW_GboH.js";import"./earcut-BqgeR2O3.js";import"./vec3f32-Cw9Q6TO_.js";import"./normalizeUtilsCommon-DRIluWnF.js";import{r as T,o as f,n as d}from"./imageUtils-DVFWHccr.js";import{m as q}from"./LayerView2D-BSaaWl8y.js";import{h as U}from"./HighlightGraphicContainer-JbKoneRB.js";import{h as b,m as S,r as C}from"./TileStrategy-BMTAwxMt.js";import{u as Q}from"./LayerView-DO6TerBv.js";import{i as P}from"./RefreshableLayerView-B0936Ssp.js";import{S as L,U as k}from"./MapServiceLayerViewHelper-C2LKJQB0.js";import{r as F}from"./drapedUtils-BdDXXXz6.js";import"./BidiEngine-DL33fnW5.js";import"./fontUtils-Dz0hN_7q.js";import"./OptimizedGeometry-DLPswkPy.js";import"./mat2d-D9yIh3Tx.js";import"./mat2df32-orApM5a3.js";import"./vec2-Dt9Foiri.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./DefaultUI-DIlogOoy.js";import"./jsxFactory-BxQYPm-b.js";import"./UpdatingHandles-ugzlsvZF.js";import"./screenUtils-BuM_Fswi.js";import"./signal-DoM1gSF0.js";import"./ReactiveMap-C-O0lKvJ.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./heightModelInfoUtils-CdtST1Ra.js";import"./ViewingMode-Dodu7ZZk.js";import"./Viewpoint-CB1GAuK3.js";import"./Cyclical-BY9qISY1.js";import"./mat2df64-CBKYtunK.js";import"./mat3-CqxUQBLP.js";import"./vec2f64-Diu2Kaa8.js";import"./normalizeUtils-Cm7zySIZ.js";import"./utils-1zmckiYC.js";import"./utils-D-bI9C7C.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-DfZw-NIf.js";import"./accessibleHandler-DsewpcQ5.js";import"./Compass-C-feYp_a.js";import"./utils-DsJqvptN.js";import"./GoTo-BzS22eXk.js";import"./NavigationToggle-QjJqvxo5.js";import"./Zoom-Ct1er6X1.js";import"./highlightReasons-LsVPCozu.js";import"./Tile-BZM3wEBG.js";import"./quickselect-D0_cvEX6.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./BufferObject-CaEbWulZ.js";import"./VertexArrayObject-Cv4RwmVi.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./WGLBrushVTLSymbol-DSNnpuOI.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-BlB59bbU.js";import"./featureConversionUtils-BzfH5fda.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./CircularArray-DfLrgW_-.js";import"./AttributeStore-Iy7eed8g.js";import"./UpdateTracking2D-BUPNqTRV.js";import"./TurboLine-B0jwHtDu.js";import"./BindType-BmZEZMMh.js";import"./Util-B8vYs4k8.js";import"./constants-D5zmR9t2.js";import"./labelFormatUtils-BN4HkzS9.js";import"./TimeOnly-CdukLkzZ.js";import"./centroid-DdLmOD72.js";import"./timeSupport-BFvqZpey.js";import"./json-Wa8cmqdu.js";import"./ZoomMomentumEstimator-PITOvV-p.js";import"./heatmapTextureUtils-Ccf4XLi5.js";import"./QueueProcessor-DFkcFyJt.js";import"./basicInterfaces-DngWxyLO.js";import"./normalizeUtilsSync-CrK-RMPr.js";import"./Bitmap-B3-IcBfD.js";import"./TileContainer-BpQW-7a1.js";import"./scaleUtils-0K_Ry6I1.js";import"./ClipRect-tFFfZq22.js";import"./AGraphicContainer-CZXUn-ju.js";import"./TechniqueInstance-c4xdpVEx.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-Bh-ioSNZ.js";import"./popupUtils-BHYiW8I-.js";const G=[0,0];let o=class extends P(T(q(Q))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new v,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new b(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new S({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r)}),this._tileStrategy=new C({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),L(this,this.layer)){const e=this._highlightView=new H({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new k({createFetchPopupFeaturesQueryGeometry:(r,h)=>F(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,h)=>{e.graphicUpdateHandler({graphic:r,property:h})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):w()}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return y((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(G,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:h=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(p){if(!l(p)&&!this.resampling)return f(this._tileInfoView.tileInfo.size);if(h<3){const n=this._tileInfoView.getTileParentId(t.id);if(n){const c=new g(n),_=await this.fetchTile(c,{...i,resamplingLevel:h+1});return d(this._tileInfoView,_,c,t)}}throw p}const s=new g(0,0,0,0);let a;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:r}),s.level!==t.level&&!this.resampling)return f(this._tileInfoView.tileInfo.size);a=await this._fetchImage(s,r)}catch(p){if(l(p))throw p;a=await this._fetchImage(t,r)}return this.resampling?d(this._tileInfoView,a,s,t):a}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){l(i)||I.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};m([u()],o.prototype,"resampling",null),m([u()],o.prototype,"tilemapCache",null),o=m([V("esri.views.2d.layers.TileLayerView2D")],o);const Ei=o;export{Ei as default};
