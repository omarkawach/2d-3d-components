function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
import{o as a,y as c,X as le,bO as ce,bW as b,dt as ue,cr as P,ej as S,P as De,fm as oe,an as xe,T as Re,_ as je,dE as q,dg as B,bX as X,dm as Se,cg as Ge,fc as J,bR as pe,kW as me,c4 as ge,ju as Ne,gJ as L,jr as _e,kV as He,jp as ve,jX as Ie,j3 as ye,j5 as ke,gl as We,dj as Fe,di as Qe,fL as Ue,ql as qe,dS as Be,j6 as Xe,cp as Je,ko as $e,g9 as de}from"./index-8ERthB3p.js";import{e as Ke}from"./defaultUnit-gjMTMp_C.js";import{s as Ye}from"./AnalysisView3D-BwgdxIXS.js";import{e as $}from"./interfaces-js1RL7O8.js";import{i as N,c as K}from"./quantityUtils-9zDVxeky.js";import{geodesicLength as Ze}from"./geometryEngine-MBwx6Ib1.js";import{a as et,p as tt,w as it}from"./spatialReferenceEllipsoidUtils-CmEPjh7T.js";import{c as Y}from"./projectPointToVector-qKp-AJ2b.js";import{t as be}from"./projectPointToWGS84ComparableLonLat-D5kdMIn_.js";import{w as st,v as rt,j as nt,z as at}from"./geodesicUtils-D1kRRrco.js";import{r as ot,t as lt,f as H}from"./LineVisualElement-DVtpCq1A.js";import{t as ct}from"./UnitNormalizer-DMsoj8NV.js";import{r as Ve}from"./geodesicMeasurementUtils-BcTpN3Xi.js";import{h as Z,R as we,y as dt,L as fe,d as ht}from"./quantityFormatUtils-DfDZUKJh.js";import{j as Le}from"./vec2-Dt9Foiri.js";import{e as y,o as z}from"./interfaces-CjSZqm0S.js";import{f as ee,_ as Pe,m as j,v as Ce}from"./Segment-BxtK7jJN.js";import{e as ut}from"./mat4f64-Dk4dwAN8.js";import{c as I}from"./plane-Du3EYICn.js";import{a as pt}from"./Object3DVisualElement-D2TYUCro.js";import{g as mt}from"./RenderGeometry-rcUvJmRA.js";import{c as gt,u as _t,h as G}from"./Material-DwPnlQDw.js";import{H as vt}from"./InterleavedLayout-s3MgOYN8.js";import{a as yt,g as bt,o as te,h as ie,l as wt,r as ft,m as Lt,n as Pt,A as Ee,b as k,s as Ct}from"./Texture-C7A05GrI.js";import{e as w}from"./VertexAttribute-BnAa5VW0.js";import{r as se}from"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import{o as he,S as Et,c as At,A as Ot,a as zt,_ as St}from"./OrderIndependentTransparency-Cua2R8AE.js";import{O as $t,E as Vt}from"./enums-DSseSvdG.js";import{z as Mt}from"./RightAngleQuadVisualElement-TrRXC01x.js";import{h as re}from"./lineStippleUtils-B9K4R8oO.js";import{p as ne}from"./viewUtils-DC86MEAQ.js";import"./BindType-BmZEZMMh.js";import{o as ae}from"./interfaces-B8ge7Jg9.js";import"./getDefaultUnitForView-BEilgbp7.js";import"./geometryEngineBase-Cz__5BKm.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./hydrated-7yclY7Co.js";import"./projectVectorToWGS84ComparableLonLat-DuPw0-Mv.js";import"./ElevationProvider-Bd4qfXCi.js";import"./sphere-Bf4ezJdT.js";import"./ObjectStack-BPo9QGhV.js";import"./ViewingMode-Dodu7ZZk.js";import"./boundedPlane-CLJ-Xnn_.js";import"./lineSegment-DVvvMBnG.js";import"./verticalOffsetUtils-BYv4Nk2v.js";import"./mat3-CqxUQBLP.js";import"./mat3f64-BBpwCtoL.js";import"./orientedBoundingBox-BQvYwCTM.js";import"./quat-DUnoL8dP.js";import"./quatf64-BrpT0VRp.js";import"./computeTranslationToOriginAndRotation-BbJd4iYX.js";import"./vec2f64-Diu2Kaa8.js";import"./Attribute-B-NAci_J.js";import"./unitFormatUtils-3MMEFLJJ.js";import"./ByteSizeUnit-BsxeN7wM.js";import"./Cyclical-BY9qISY1.js";import"./VisualElement-CI1nOGdz.js";import"./jsxFactory-BxQYPm-b.js";import"./TextOverlayItem-BPy-0Tbh.js";import"./projectVectorToVector-C3SBBDgz.js";import"./mathUtils-iSLnUy_4.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-068mylUp.js";import"./Indices-DP3oX5Sg.js";import"./ContentObject-BTgEhnct.js";import"./Geometry-CqGtfd4N.js";import"./basicInterfaces-DngWxyLO.js";import"./Util-B8vYs4k8.js";import"./triangle-CTblFuF6.js";import"./doublePrecisionUtils-B0owpBza.js";import"./hydratedFeatures-DqrDm0_F.js";import"./axisAngleDegrees-CaSFQR2z.js";import"./weather-D00pIeau.js";import"./RenderState-DaVlEYWY.js";import"./NestedMap-DgiGbX8E.js";import"./frustum-BrAPXuhm.js";import"./Octree-E7a40xr7.js";import"./floatRGBA-CCqnXShd.js";import"./Texture-O7Pyotwx.js";import"./Intersector-8rpRuT_8.js";import"./glUtil-DS73TAjp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-Cv4RwmVi.js";import"./BufferObject-CaEbWulZ.js";import"./Scheduler-DaHJO6l7.js";import"./signal-DoM1gSF0.js";import"./debugFlags-BbJIqrPU.js";import"./BufferView-CHYzaV9A.js";import"./types-D0PSWh4d.js";import"./requestImageUtils-DP1V3HlH.js";import"./EngineVisualElement-DUG0X7vS.js";import"./ColorMaterial.glsl-uPKQoFFi.js";import"./VertexColor.glsl-CScvx9pF.js";import"./triangulationUtils-C0V38kt7.js";import"./earcut-BqgeR2O3.js";import"./deduplicate-j8p9VETP.js";import"./elevationInfoUtils-sHEwmo9N.js";let T=class extends ce{constructor(t){super(t),this._unitNormalizer=new ct,this._tempStartPosition=b(),this._tempEndPosition=b(),this._tempCornerPosition=b()}initialize(){const t=this.view.spatialReference,e=et(t),i=e===tt?it:e;this._sphericalPCPF=i;const s=ue(t,i);this._unitNormalizer.spatialReference=s?i:t,this.addHandles([P(()=>({viewData:this.viewData,startPoint:this.analysis.startPoint}),({viewData:r,startPoint:n})=>{r.elevationAlignedStartPoint=this._applyProjectionAndElevationAlignment(n)},S),P(()=>({viewData:this.viewData,endPoint:this.analysis.endPoint}),({viewData:r,endPoint:n})=>{r.elevationAlignedEndPoint=this._applyProjectionAndElevationAlignment(n)},S),P(()=>({result:this._computedResult,viewData:this.viewData}),({result:r,viewData:n})=>{n.result=r},S)])}_applyProjectionAndElevationAlignment(t){if(t==null)return t;const{spatialReference:e,elevationProvider:i}=this.view;return ot(t,e,i)??(lt(this.analysis,t.spatialReference,De.getLogger(this)),null)}get _computedResult(){const{elevationAlignedStartPoint:t,elevationAlignedEndPoint:e,measurementMode:i}=this.viewData;if(t==null||e==null)return null;const s=this._euclideanDistances(t,e),r=this._geodesicDistance(t,e);let n,d;switch(i){case $.Auto:d=r!=null?"geodesic":"euclidean",n=r??s.horizontal;break;case $.Geodesic:if(r==null)return null;d="geodesic",n=r;break;case $.Euclidean:d="euclidean",n=s.horizontal}return{mode:d,directDistance:s.direct,horizontalDistance:n,verticalDistance:s.vertical,distance:i===$.Euclidean||s.horizontal.value<=Ve?s.direct:r??s.horizontal}}_euclideanDistances(t,e){const i=t.clone();i.z=e.z;const s=this._tempStartPosition,r=this._tempEndPosition,n=this._tempCornerPosition,d=this.view.spatialReference,u=this._sphericalPCPF,l=ue(d,u)?u:d;Y(t,s,l),Y(e,r,l),Y(i,n,l);const h=oe(s,r),o=oe(n,r),p=Math.abs(e.z-t.z),m=E=>this._unitNormalizer.normalizeDistance(E),g=m(h),C=m(o),D=m(p);return{direct:N(g,"meters"),horizontal:N(C,"meters"),vertical:N(D,"meters")}}_geodesicDistance(t,e){const{spatialReference:i}=t,s=new xe({spatialReference:i});s.addPath([t,e]);const r=i.isGeographic&&st(i)?rt([s],"meters")[0]:i.isWebMercator?Ze(s,"meters"):null,n=r??this._fallbackGeodesicDistance(t,e);return n!=null?N(n,"meters"):null}_fallbackGeodesicDistance(t,e){if(be(t,Ae)&&be(e,Oe)){const i=new at;return nt(i,Ae,Oe,Re.WGS84),i.distance}return null}};a([c()],T.prototype,"view",void 0),a([c()],T.prototype,"analysis",void 0),a([c()],T.prototype,"viewData",void 0),a([c()],T.prototype,"_computedResult",null),T=a([le("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],T);const Ae=b(),Oe=b();function Me(t){const e=new yt,{vertex:i,fragment:s}=e;bt(i,t),i.uniforms.add(new te("width",n=>n.width)),e.attributes.add(w.POSITION,"vec3"),e.attributes.add(w.NORMAL,"vec3"),e.attributes.add(w.UV0,"vec2"),e.attributes.add(w.LENGTH,"float"),e.varyings.add("vtc","vec2"),e.varyings.add("vlength","float"),e.varyings.add("vradius","float"),i.code.add(ae`void main(void) {
vec3 bitangent = normal;
vtc = uv0;
vlength = length;
vradius = 0.5 * width;
vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
gl_Position = proj * pos;
}`),s.uniforms.add(new te("outlineSize",n=>n.outlineSize),new ie("outlineColor",n=>n.outlineColor),new te("stripeLength",n=>n.stripeLength),new ie("stripeEvenColor",n=>n.stripeEvenColor),new ie("stripeOddColor",n=>n.stripeOddColor));const r=1/Math.sqrt(2);return s.code.add(ae`
    const float INV_SQRT2 = ${ae.float(r)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      } else if (d < outlineSize) {
        return outlineColor;
      } else {
        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
      }
    }

    void main(void) {
      vec2 ntc = vec2(vtc.x / vradius, vtc.y);
      vec4 color = arrowColor(ntc, vlength / vradius);
      if (color.a == 0.0) {
        discard;
      }
      fragColor = color;
    }
  `),e}const Tt=Object.freeze(Object.defineProperty({__proto__:null,build:Me},Symbol.toStringTag,{value:"Module"}));class F extends ft{constructor(e,i,s){super(e,i,s)}initializeProgram(e){return new Lt(e.rctx,F.shader.get().build(this.configuration),Te)}_setPipelineState(e){const i=e===he.NONE,s=this.configuration;return Et({blending:s.transparent?i?At:Ot(e):null,polygonOffset:this.configuration.polygonOffsetEnabled?{factor:0,units:-4}:null,depthTest:{func:$t.LESS},depthWrite:zt,colorWrite:St})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return Vt.TRIANGLE_STRIP}}F.shader=new wt(Tt,()=>je(()=>Promise.resolve().then(()=>Kt),void 0));let W=class extends Pt{constructor(){super(...arguments),this.polygonOffsetEnabled=!1,this.transparent=!1,this.transparencyPassType=he.NONE}};a([se()],W.prototype,"polygonOffsetEnabled",void 0),a([se()],W.prototype,"transparent",void 0),a([se({count:he.COUNT})],W.prototype,"transparencyPassType",void 0);const Te=new Map([[w.POSITION,0],[w.NORMAL,1],[w.UV0,2],[w.LENGTH,3]]);class Dt extends gt{constructor(e){super(e,new Rt),this._vertexAttributeLocations=Te,this.produces=new Map([[Ee.OPAQUE_MATERIAL,i=>!this._transparent&&(i===k.Color||i===k.Alpha)],[Ee.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,i=>this._transparent&&(i===k.Color||i===k.Alpha)]]),this._configuration=new W}getConfiguration(e,i){return this._configuration.polygonOffsetEnabled=this.parameters.polygonOffset,this._configuration.transparent=this._transparent,this._configuration.transparencyPassType=i.transparencyPassType,this._configuration}intersect(){}createGLMaterial(e){return new xt(e)}createBufferWriter(){return new Wt}get _transparent(){const{parameters:e}=this;return e.outlineColor[3]<1||e.stripeEvenColor[3]<1||e.stripeOddColor[3]<1}}class xt extends Ct{beginSlot(e){return this.ensureTechnique(F,e)}}class Rt extends _t{constructor(){super(...arguments),this.width=32,this.outlineSize=.2,this.outlineColor=q(1,.5,0,1),this.stripeEvenColor=q(1,1,1,1),this.stripeOddColor=q(1,.5,0,1),this.stripeLength=1,this.polygonOffset=!1}}const jt=vt().vec3f(w.POSITION).vec3f(w.NORMAL).vec2f(w.UV0).f32(w.LENGTH),Gt=b(),Nt=b(),Ht=b(),It=b(),kt=b();class Wt{constructor(){this.vertexBufferLayout=jt}elementCount(e){return 2*(e.attributes.get(w.POSITION).indices.length/2+1)}write(e,i,s,r,n){const{data:d,indices:u}=s.attributes.get(w.POSITION),l=s.attributes.get(w.NORMAL).data,h=d.length/3;u&&u.length!==2*(h-1)&&console.warn("MeasurementArrowMaterial does not support indices");const o=Gt,p=Nt,m=Ht,g=It,C=kt,D=r.position,E=r.normal,A=r.uv0;let O=0;for(let f=0;f<h;++f){const R=3*f;if(B(o,d[R],d[R+1],d[R+2]),f<h-1){const x=3*(f+1);B(p,d[x],d[x+1],d[x+2]),B(C,l[x],l[x+1],l[x+2]),X(C,C),Se(m,p,o),X(m,m),Ge(g,C,m),X(g,g)}const U=oe(o,p);e&&i&&(J(o,o,e),J(p,p,e),J(g,g,i));const V=n+2*f,M=V+1;D.setVec(V,o),D.setVec(M,o),E.setVec(V,g),E.setVec(M,g),A.set(V,0,O),A.set(V,1,-1),A.set(M,0,O),A.set(M,1,1),f<h-1&&(O+=U)}const Q=r.length;for(let f=0;f<2*h;++f)Q.set(n+f,O)}}let Ft=class extends pt{constructor(e){super(e),this._arrowWidth=16,this._arrowSubdivisions=128,this._origin=b(),this._originTransform=ut(),this._arrowCenter=b(),this._renderOccluded=G.OccludeAndTransparent,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this._color=pe(),this._contrastColor=pe(),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._arrowMaterial&&this._arrowMaterial.setParameters({renderOccluded:e}))}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get stripeLength(){return this._stripeLength}set stripeLength(e){this._stripeLength=e,this.attached&&this._arrowMaterial.setParameters({stripeLength:this._stripeLength})}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(e){if(this._stripesEnabled=e,this.attached){const i=this._stripesEnabled?this._contrastColor:this._color;this._arrowMaterial.setParameters({stripeEvenColor:i})}}get color(){return this._color}set color(e){me(e,this._color)||(ge(this._color,e),this._updateArrowColor())}get contrastColor(){return this._contrastColor}set contrastColor(e){me(e,this._color)||(ge(this._contrastColor,e),this._updateArrowColor())}createExternalResources(){const e=this._color,i=this._contrastColor,s=this._stripesEnabled?i:e;this._arrowMaterial=new Dt({outlineColor:e,stripeEvenColor:s,stripeOddColor:e,renderOccluded:this.renderOccluded,polygonOffset:!0,isDecoration:this.isDecoration}),this._handles=new Ne,this._handles.add(P(()=>this.view.state.camera,()=>{this._viewChanged()}))}destroyExternalResources(){this._arrowMaterial=null,this._handles=L(this._handles)}forEachExternalMaterial(e){e(this._arrowMaterial)}createGeometries(e){var s;if(((s=this._geometry)==null?void 0:s.startRenderSpace)==null||this._geometry.endRenderSpace==null)return;const i=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);i.transformation=this._originTransform,e.addGeometry(i),this._viewChanged()}_createArrowGeometry(e,i,s,r){const n=this.view.renderCoordsHelper,d=[],u=[],l=(h,o)=>{const p=I.get();Se(p,h,s),d.push(p),u.push(o)};if(r.type==="euclidean"){r.eval(.5,this._arrowCenter);const h=I.get();n.worldUpAtPosition(this._arrowCenter,h),l(e,h),l(i,h)}else{r.eval(.5,this._arrowCenter);const h=this._arrowSubdivisions+1&-2;for(let o=0;o<h;++o){const p=o/(h-1),m=I.get(),g=I.get();r.eval(p,m),n.worldUpAtPosition(m,g),l(m,g)}}return mt(this._arrowMaterial,d,u)}_geometryChanged(){this.recreateGeometry()}_viewChanged(){if(this.view.ready&&this.attached&&this._geometry!=null){const e=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameters({width:this._arrowWidth*e})}}_updateArrowColor(){if(!this.attached)return;const e=this._color,i=this._contrastColor,s=this._stripesEnabled?i:e,r=e,n=e;this._arrowMaterial.setParameters({stripeEvenColor:s,outlineColor:r,stripeOddColor:n})}},v=class extends ce{get _parameters(){const t=this.view.effectiveTheme,{accentColor:e,textColor:i}=t,s=_e(e),r=He(e,.75),n=_e(ve(e)),d=ve(i,Ie.Low);return{accentColor:s,contrastColor:n,translucentAccentColor:r,triangleLineWidth:3,geodesicProjectionLineWidth:2,guideLineWidth:2,guideStippleLengthPixels:3,directLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12,textColor:i,textBackgroundColor:ye(d,.6),textCalloutColor:ye(d,.5)}}get visible(){return this.analysisView.visible}get viewMode(){const{elevationAlignedStartPoint:t,elevationAlignedEndPoint:e}=this.analysisView;if(t==null||e==null||t.equals(e))return y.None;const i=this.analysisView.result;if(i==null)return y.Direct;if(this.actualVisualizedMeasurement==="geodesic")return this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition)?y.ProjectedGeodesic:y.Direct;const{verticalDistance:s,horizontalDistance:r}=i,n=s.value,d=r.value;return Math.min(n/d,d/n)<this.triangleCollapseRatioThreshold?y.Direct:y.Triangle}get actualVisualizedMeasurement(){const{measurementMode:t,result:e}=this.analysisView;switch(t){case $.Auto:return e!=null&&e.horizontalDistance.value>Ve?"geodesic":"euclidean";case $.Euclidean:return"euclidean";case $.Geodesic:return"geodesic"}}get allowVisualElementsOrientationChange(){return this._triangleOrientationOverride==null}set allowVisualElementsOrientationChange(t){this._triangleOrientationOverride==null!==t&&(this._triangleOrientationOverride==null?this._triangleOrientationOverride=this._actualVisualElementsOrientation:this._triangleOrientationOverride=null)}get labels(){return this.actualVisualizedMeasurement==="geodesic"?{direct:null,horizontal:this._segmentLabel,vertical:this._verticalLabel}:{direct:this._segmentLabel,horizontal:this._horizontalLabel,vertical:this._verticalLabel}}constructor(t){super(t),this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=b(),this._endPosition=b(),this._cornerPosition=b(),this._startPositionAtSeaLevel=b(),this._endPositionAtSeaLevel=b(),this._triangleOrientationOverride=null,this.messages=null,this.loadingMessages=!0,this.visualElementOrientation=z.Auto,this.triangleCollapseRatioThreshold=.03}initialize(){const t=this._parameters,e={attached:!0,view:this.view,isDecoration:!0},{guideLineWidth:i,guideStippleLengthPixels:s,triangleLineWidth:r,geodesicProjectionLineWidth:n,directLabelFontSize:d,verticalLabelFontSize:u,horizontalLabelFontSize:l}=t;this._segmentVisualElement=new Ft({...e,geometry:null,renderOccluded:G.OccludeAndTransparent}),this._triangleVisualElement=new H({...e,width:r,renderOccluded:G.OccludeAndTransparent}),this._rightAngleQuad=new Mt({...e,renderOccluded:G.OccludeAndTransparent});const h={...e,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent};this._projectedGeodesicLine=new H({...h,width:n,stipplePattern:re(s)}),this._geodesicStartHint=new H({...h,width:i,stipplePattern:re(s)}),this._geodesicEndHint=new H({...h,width:i,stipplePattern:re(s)}),this._segmentLabel=new ee({...e,fontSize:d}),this._verticalLabel=new ee({...e,fontSize:u}),this._horizontalLabel=new ee({...e,fontSize:l}),this.addHandles([P(()=>{const{elevationAlignedStartPoint:o,elevationAlignedEndPoint:p}=this.analysisView,m=this.view;return{view:m,camera:m.state.camera,viewMode:this.viewMode,elevationAlignedStartPoint:o,elevationAlignedEndPoint:p,orientation:this._actualVisualElementsOrientation,visualizedMeasurement:this.actualVisualizedMeasurement,stripeLength:this._measurementArrowStripeLength}},o=>this._updateGeometryAndViewMode(o),S),P(()=>({visible:this.visible,viewMode:this.viewMode}),o=>this._updateVisualElementVisibility(o),S),P(()=>({text:this._labelsText,visualizedMeasurement:this.actualVisualizedMeasurement}),o=>this._updateLabelText(o),S),P(()=>({visible:this.visible,viewMode:this.viewMode}),o=>this._updateLabelVisibility(o),S),P(()=>this._measurementArrowStripeLength,o=>this._updateSegmentStripeLength(o),S),ke(async()=>this._updateMessageBundle()),P(()=>this._parameters,({textBackgroundColor:o,textCalloutColor:p,textColor:m,translucentAccentColor:g,accentColor:C,contrastColor:D})=>{const{_segmentLabel:E,_verticalLabel:A,_horizontalLabel:O,_triangleVisualElement:Q,_rightAngleQuad:f,_projectedGeodesicLine:R,_geodesicStartHint:U,_geodesicEndHint:V,_segmentVisualElement:M}=this;E.backgroundColor=o,E.calloutColor=p,E.textColor=m,A.backgroundColor=o,A.calloutColor=p,A.textColor=m,O.backgroundColor=o,O.calloutColor=p,O.textColor=m,Q.color=g,f.color=g,R.color=g,U.color=g,V.color=g,M.color=C,M.contrastColor=D},We)]),this._updateMessageBundle()}destroy(){this._segmentVisualElement=L(this._segmentVisualElement),this._triangleVisualElement=L(this._triangleVisualElement),this._rightAngleQuad=L(this._rightAngleQuad),this._projectedGeodesicLine=L(this._projectedGeodesicLine),this._geodesicStartHint=L(this._geodesicStartHint),this._geodesicEndHint=L(this._geodesicEndHint),this._segmentLabel=L(this._segmentLabel),this._verticalLabel=L(this._verticalLabel),this._horizontalLabel=L(this._horizontalLabel),this.set("view",null)}_updateVisualElementVisibility({visible:t,viewMode:e}){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,t)switch(e){case y.None:break;case y.Direct:this._segmentVisualElement.visible=!0;break;case y.Triangle:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case y.ProjectedGeodesic:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode({view:t,camera:e,viewMode:i,elevationAlignedStartPoint:s,elevationAlignedEndPoint:r,orientation:n,visualizedMeasurement:d,stripeLength:u}){const l=t.renderCoordsHelper;if(l==null||s==null||r==null||s.equals(r))return;let h=this._startPosition,o=this._endPosition;l.toRenderCoords(s,h),l.toRenderCoords(r,o);const p=n===z.AboveSegment?1:-1,m=p*(l.getAltitude(o)-l.getAltitude(h));m<0&&(h=this._endPosition,o=this._startPosition);const g=d==="geodesic"?new Pe(this._startPosition,this._endPosition,l.spatialReference):new j(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=g,this._updateSegmentStripeLength(u),i){case y.Direct:this._updateSegment(g,n);break;case y.Triangle:this._updateSegmentAndTriangle({view:t,camera:e,segment:g,orientation:n,startPosition:h,endPosition:o,deltaSign:p,altitudeDelta:m});break;case y.ProjectedGeodesic:this._updateSegmentAndProjection({view:t,orientation:n,startPosition:h,endPosition:o})}}_updateSegment(t,e){this._segmentLabel.anchor=e===z.AboveSegment?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:t,sampleLocation:"center"}}_updateSegmentAndTriangle({view:{renderCoordsHelper:t},camera:e,segment:i,orientation:s,startPosition:r,endPosition:n,deltaSign:d,altitudeDelta:u}){const l=this._cornerPosition;t.worldUpAtPosition(r,l),Fe(l,l,d*Math.abs(u)),Qe(l,l,r),this._triangleVisualElement.geometry=[[[r[0],r[1],r[2]],[l[0],l[1],l[2]],[n[0],n[1],n[2]]]],this._rightAngleQuad.geometry={previous:r,center:l,next:n};const h=new j(r,l),o=new j(l,n),p=Qt(r,n,l,s,e);this._segmentLabel.anchor=p.segment,this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:h,sampleLocation:"center"},this._verticalLabel.anchor=p.vertical,this._horizontalLabel.geometry={type:"segment",segment:o,sampleLocation:"center"},this._horizontalLabel.anchor=p.horizontal}_updateSegmentAndProjection({view:{renderCoordsHelper:t},orientation:e,startPosition:i,endPosition:s}){t.setAltitude(this._startPositionAtSeaLevel,0,i),t.setAltitude(this._endPositionAtSeaLevel,0,s);const r=new Pe(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,t.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(r),this._geodesicStartHint.setGeometryFromSegment(new j(this._startPositionAtSeaLevel,i)),this._geodesicEndHint.setGeometryFromSegment(new j(this._endPositionAtSeaLevel,s)),this._segmentLabel.geometry={type:"segment",segment:r,sampleLocation:"center"},this._segmentLabel.anchor=e===z.AboveSegment?"top":"bottom"}_updateLabelText({text:t,visualizedMeasurement:e}){t!=null?(this._segmentLabel.text=e==="euclidean"?t.directDistance:t.horizontalDistance,this._horizontalLabel.text=t.horizontalDistance,this._verticalLabel.text=t.verticalDistance):(this._segmentLabel.text=null,this._horizontalLabel.text=null,this._verticalLabel.text=null),this.notifyChange("labels")}_updateLabelVisibility({visible:t,viewMode:e}){const i=this._segmentLabel,s=this._horizontalLabel,r=this._verticalLabel;if(i.visible=!1,s.visible=!1,r.visible=!1,t)switch(e){case y.Direct:i.visible=!0;break;case y.Triangle:i.visible=!0,s.visible=!0,r.visible=!0;break;case y.ProjectedGeodesic:i.visible=!0;case y.None:}}get _labelsText(){if(this.destroyed)return null;const t=this.messages,e=this.analysisView.result;if(e==null||t==null)return null;const{directDistance:i,horizontalDistance:s,verticalDistance:r}=e,n=this.analysisView.unit,d=u=>({directDistance:"",horizontalDistance:"",verticalDistance:"",...u});switch(n){case"metric":return d({directDistance:i&&fe(t,i),horizontalDistance:s&&fe(t,s),verticalDistance:r&&ht(t,r)});case"imperial":return d({directDistance:i&&we(t,i),horizontalDistance:s&&we(t,s),verticalDistance:r&&dt(t,r)});default:return d({directDistance:i&&Z(t,i,n),horizontalDistance:s&&Z(t,s,n),verticalDistance:r&&Z(t,r,n)})}}_updateSegmentStripeLength(t){const e=this._segmentVisualElement;t!=null?(e.stripeLength=t,e.stripesEnabled=!0):e.stripesEnabled=!1}get _actualVisualElementsOrientation(){if(this._triangleOrientationOverride!=null)return this._triangleOrientationOverride;const t=this.visualElementOrientation;return t===z.Auto?this.view.state.camera.aboveGround?z.AboveSegment:z.BelowSegment:t}_requiresGeodesicGuideAt(t){const e=this.view;if(!(e!=null&&e.state))return!1;const i=e.state.camera,s=e.renderCoordsHelper;if(!s)return!1;const r=i.computeScreenPixelSizeAt(t);return s.getAltitude(t)/r>=10}get _measurementArrowStripeLength(){const{result:t,unit:e}=this.analysisView;if(t==null)return null;let i=null;const s=t.directDistance;switch(e){case"metric":i=s&&K(s,"meters");break;case"imperial":i=s&&K(s,Ue(s.value,s.unit));break;default:i=s&&K(s,e)}return i==null?null:qe(i.value/30)*Be(1,i.unit,"meters")}_updateMessageBundle(){this.loadingMessages=!0,Xe("esri/core/t9n/Units").then(t=>{this.messages=t}).finally(()=>{this.loadingMessages=!1})}get testData(){var t;return{labels:this.labels,stripeLength:(t=this._segmentVisualElement)==null?void 0:t.stripeLength}}};function Qt(t,e,i,s,r){const n=Ut,d=qt;r.projectToRenderScreen(i,n),r.projectToRenderScreen(e,d);const u={segment:"bottom",horizontal:"top",vertical:n[0]<d[0]?"left":"right"};{const l=Bt,h=Xt;if(ne(t,i,r,l),ne(t,e,r,h),Le(l,h)>=ze){const o=Math.sign(l[1])===Math.sign(h[1]);u.segment=o?Ce(u.vertical):u.vertical}else{const o=Jt;ne(i,e,r,o),Le(o,h)>=ze&&(u.segment=Math.sign(o[0])===Math.sign(h[0])?Ce(u.horizontal):u.horizontal)}}if(s===z.BelowSegment){const l=h=>h==="top"?"bottom":"top";u.segment=l(u.segment),u.horizontal=l(u.horizontal),u.vertical=l(u.vertical)}return u}a([c()],v.prototype,"_parameters",null),a([c()],v.prototype,"_triangleOrientationOverride",void 0),a([c()],v.prototype,"messages",void 0),a([c()],v.prototype,"view",void 0),a([c()],v.prototype,"analysis",void 0),a([c()],v.prototype,"analysisView",void 0),a([c()],v.prototype,"loadingMessages",void 0),a([c()],v.prototype,"visible",null),a([c()],v.prototype,"viewMode",null),a([c()],v.prototype,"actualVisualizedMeasurement",null),a([c()],v.prototype,"visualElementOrientation",void 0),a([c()],v.prototype,"triangleCollapseRatioThreshold",void 0),a([c()],v.prototype,"allowVisualElementsOrientationChange",null),a([c()],v.prototype,"labels",null),a([c()],v.prototype,"_labelsText",null),a([c()],v.prototype,"_actualVisualElementsOrientation",null),a([c()],v.prototype,"_measurementArrowStripeLength",null),v=a([le("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementVisualization")],v);const ze=Math.cos(Je(12)),Ut=$e(),qt=$e(),Bt=de(),Xt=de(),Jt=de();let _=class extends Ye(ce){constructor(t){super(t),this.type="direct-line-measurement-view-3d",this.analysis=null,this.result=null,this.measurementMode=$.Auto,this.elevationAlignedStartPoint=null,this.elevationAlignedEndPoint=null}initialize(){const t=this.view,e=this.analysis;this._analysisVisualization=new v({view:t,analysis:e,analysisView:this}),this._analysisController=new T({view:t,analysis:e,viewData:this})}destroy(){this._analysisController=L(this._analysisController),this._analysisVisualization=L(this._analysisVisualization)}get updating(){var t;return!!((t=this._analysisVisualization)!=null&&t.loadingMessages)}get viewMode(){return this._analysisVisualization.viewMode}get actualVisualizedMeasurement(){return this._analysisVisualization.actualVisualizedMeasurement}get visualElementOrientation(){return this._analysisVisualization.visualElementOrientation}set visualElementOrientation(t){this._analysisVisualization.visualElementOrientation=t}get allowVisualElementsOrientationChange(){return this._analysisVisualization.allowVisualElementsOrientationChange}set allowVisualElementsOrientationChange(t){this._analysisVisualization.allowVisualElementsOrientationChange=t}get triangleCollapseRatioThreshold(){return this._analysisVisualization.triangleCollapseRatioThreshold}set triangleCollapseRatioThreshold(t){this._analysisVisualization.triangleCollapseRatioThreshold=t}get directLabelText(){var t;return((t=this._analysisVisualization.labels.direct)==null?void 0:t.text)??""}get horizontalLabelText(){var t;return((t=this._analysisVisualization.labels.horizontal)==null?void 0:t.text)??""}get verticalLabelText(){var t;return((t=this._analysisVisualization.labels.vertical)==null?void 0:t.text)??""}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){var t;return this.destroyed?{labels:null,stripeLength:null,visualization:null,controller:null}:{...(t=this._analysisVisualization)==null?void 0:t.testData,visualization:this._analysisVisualization,controller:this._analysisController}}};a([c()],_.prototype,"updating",null),a([c({readOnly:!0})],_.prototype,"type",void 0),a([c({constructOnly:!0,nonNullable:!0})],_.prototype,"analysis",void 0),a([c()],_.prototype,"result",void 0),a([c()],_.prototype,"measurementMode",void 0),a([c()],_.prototype,"elevationAlignedStartPoint",void 0),a([c()],_.prototype,"elevationAlignedEndPoint",void 0),a([c({readOnly:!0})],_.prototype,"viewMode",null),a([c({readOnly:!0})],_.prototype,"actualVisualizedMeasurement",null),a([c()],_.prototype,"visualElementOrientation",null),a([c()],_.prototype,"allowVisualElementsOrientationChange",null),a([c()],_.prototype,"triangleCollapseRatioThreshold",null),a([c({readOnly:!0})],_.prototype,"directLabelText",null),a([c({readOnly:!0})],_.prototype,"horizontalLabelText",null),a([c({readOnly:!0})],_.prototype,"verticalLabelText",null),a([c()],_.prototype,"_analysisVisualization",void 0),a([c()],_.prototype,"_analysisController",void 0),a([c()],_.prototype,"unit",null),a([c(Ke)],_.prototype,"_defaultUnit",void 0),_=a([le("esri.views.3d.analysis.DirectLineMeasurementAnalysisView3D")],_);const Ws=_,Kt=Object.freeze(Object.defineProperty({__proto__:null,build:Me},Symbol.toStringTag,{value:"Module"}));export{Ws as default};
