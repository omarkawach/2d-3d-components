import{T as R,fx as v,fs as c,fu as $,dg as M,bW as g,cf as d,cj as f,bX as b,cg as h,j1 as x,cl as B,ds as G,a5 as S}from"./index-8ERthB3p.js";import{a as P}from"./spatialReferenceEllipsoidUtils-CmEPjh7T.js";import{c as U}from"./projectPointToVector-qKp-AJ2b.js";import{t as j}from"./projectVectorToPoint-CPW7kXva.js";import{n as y}from"./projectVectorToVector-C3SBBDgz.js";import{H as z,_ as T}from"./boundedPlane-CLJ-Xnn_.js";import{B as Z,u as E}from"./sphere-Bf4ezJdT.js";import{c as i,u as F,S as I}from"./plane-Du3EYICn.js";import{b as _}from"./ElevationProvider-Bd4qfXCi.js";import{l as u}from"./ViewingMode-Dodu7ZZk.js";function L(r){const{value:t,operations:e}=r;return{operations:e,value:e.create(t)}}function O(r,t,e){return r.operations.setExtent(r.value,t,e.value),e}function W(r){return{operations:r,value:r.create()}}function w(r,t,e=W(r)){return e.operations=r,r.copy(t,e.value),e}function X(r){return w(E,Z(0,0,0,v(r).radius))}const A=2**50;function Y(){return w(T,z([0,0,0],[A,0,0],[0,A,0]))}function k(r,t,e){return r.operations.axisAt(r.value,t,c.Z,e)}function q(r,t,e,s){return r.operations.axisAt(r.value,t,e,s)}function H(r,t,e){return r.operations.intersectRay(r.value,t,e)}function D(r,t,e){return r.operations.intersectRayClosestSilhouette(r.value,t,e)}function J(r,t){return r.operations.altitudeAt(r.value,t)}function C(r,t,e,s){return r.operations.setAltitudeAt(r.value,t,e,s)}function K(r,t,e,s){return t!==s&&$(s,t),M(a,s[12],s[13],s[14]),C(r,a,e,a),s[12]=a[0],s[13]=a[1],s[14]=a[2],s}function m(r,t,e){return r.operations.elevate(r.value,t,e.value)}const a=g();function at(r,t,e,s,n){return n[0]=d(r,t),n[1]=d(r,e),n[2]=d(r,s),n}function ut(r,t,e,s,n){f(e,r),f(l,t),b(l,l),h(s,l,e),h(n,s,e)}function ct(r,t){return r?P(t):t.isGeographic?R.PlateCarree:t}const l=g();class p{constructor(t,e,s,n){this.viewingMode=t,this.spatialReference=e,this.unitInMeters=s,this._coordinateSystem=n,this._tmpCoordinateSystem=L(n),this.referenceEllipsoid=v(e),this.sphericalPCPF=P(e)}set extent(t){t&&O(this._coordinateSystem,t,this._coordinateSystem)}getAltitude(t){return J(this._coordinateSystem,t)}setAltitude(t,e,s=t){return C(this._coordinateSystem,s,e,t)}setAltitudeOfTransformation(t,e){K(this._coordinateSystem,e,t,e)}worldUpAtPosition(t,e){return k(this._coordinateSystem,t,e)}worldBasisAtPosition(t,e,s){return q(this._coordinateSystem,t,e,s)}basisMatrixAtPosition(t,e){const s=this.worldBasisAtPosition(t,c.X,i.get()),n=this.worldBasisAtPosition(t,c.Y,i.get()),o=this.worldBasisAtPosition(t,c.Z,i.get());return x(e,s[0],s[1],s[2],0,n[0],n[1],n[2],0,o[0],o[1],o[2],0,0,0,0,1),e}headingAtPosition(t,e){const s=this.worldUpAtPosition(t,i.get()),n=this.worldBasisAtPosition(t,c.Y,i.get()),o=F(e,n,s);return B(o)}intersectManifoldClosestSilhouette(t,e,s){return m(this._coordinateSystem,e,this._tmpCoordinateSystem),D(this._tmpCoordinateSystem,t,s),s}intersectManifold(t,e,s){m(this._coordinateSystem,e,this._tmpCoordinateSystem);const n=i.get();return H(this._tmpCoordinateSystem,t,n)?f(s,n):null}intersectInfiniteManifold(t,e,s){if(this.viewingMode===u.Global)return this.intersectManifold(t,e,s);m(this._coordinateSystem,e,this._tmpCoordinateSystem);const n=this._tmpCoordinateSystem.value,o=i.get();return I(n.plane,t,o)?f(s,o):null}toRenderCoords(t,e,s){return _(t)?U(t,e,this.spatialReference):y(t,e,s,this.spatialReference)}fromRenderCoords(t,e,s=null){return _(e)?(s!=null&&(e.spatialReference=s),j(t,this.spatialReference,e)?e:null):y(t,this.spatialReference,e,s)?e:null}static create(t,e){switch(t){case u.Local:return new p(u.Local,e,G(e),Y());case u.Global:return new p(u.Global,e,1,X(e))}}static renderUnitScaleFactor(t,e){return S(t)/S(e)}}export{at as q,p as v,ut as w,ct as z};
