import{o as r,y as a,X as D,bO as k,bW as v,ac as W,dA as dt,gy as jt,n9 as Nt,a as Ut,fC as Bt,dC as Wt,Z as Et,cj as T,bX as ct,dj as F,di as z,bE as $t,ju as et,fm as Jt,dm as B,lC as x,ff as gt,P as it,fZ as J,eN as Z,gl as S,fY as vt,cB as Zt,f_ as qt,b0 as At,bH as Kt,m7 as _t,na as Xt,d1 as g,jp as Yt,kV as Qt,cr as Ht,ej as te,gJ as E,f5 as yt,ku as $,ak as ee}from"./index-8ERthB3p.js";import{s as ie}from"./AnalysisView3D-BwgdxIXS.js";import{t as ot,u as ft,f as bt}from"./LineOfSightAnalysisTarget-CsA1UFD4.js";import{h as mt}from"./UpdatingHandles-ugzlsvZF.js";import{a as ne}from"./WaterSurface.glsl-JBHYhfkH.js";import{j as oe,d as Dt,k as q,l as pt}from"./sphere-Bf4ezJdT.js";import{p as Ct,a as re,g as se}from"./elevationInfoUtils-sHEwmo9N.js";import{t as ae}from"./plane-Du3EYICn.js";import{I as le}from"./dehydratedFeatures-Cp-_lWz0.js";import{a as ue,p as de,m as tt,w as ce,V as pe}from"./ElevationQueryTileCache-CV2Fph_A.js";import{g as he}from"./ray-CCzLdiTI.js";import{n as me}from"./Intersector-8rpRuT_8.js";import{T as ge,t as nt,i as G}from"./ElevationProvider-Bd4qfXCi.js";import{t as wt,f as rt}from"./LineVisualElement-DVtpCq1A.js";import{F as Ot,I as K}from"./Scheduler-DaHJO6l7.js";import{v as ve,b as _e}from"./lineSegment-DVvvMBnG.js";import{e as Mt,d as kt,a as xt}from"./RenderObject-BqR7Zmh-.js";import{t as Ft}from"./manipulatorUtils-uzcmbeQs.js";import{s as zt}from"./RenderGeometry-rcUvJmRA.js";import{u as N}from"./interfaces-D6pIddIh.js";import{c as ye}from"./LaserlineVisualElement-CzVKEaBL.js";import"./DefaultUI-DIlogOoy.js";import{o as fe}from"./ShadedColorMaterial.glsl-CbYoK34J.js";import{x as Tt}from"./InteractiveToolBase-yKkEJSmV.js";import{n as It}from"./screenUtils-BuM_Fswi.js";import{t as st}from"./IViewEvents-Bci6PjlS.js";import{e as be}from"./mat4f64-Dk4dwAN8.js";import{x as Pt}from"./Laserlines.glsl-CH220B6j.js";import{h as at}from"./Material-DwPnlQDw.js";import{a as Ce,v as we}from"./analysisViewUtils-BqEqPSZg.js";import"./persistable-DTlPUvTn.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-5aSW4bDb.js";import"./ColorMaterial.glsl-uPKQoFFi.js";import"./mat3-CqxUQBLP.js";import"./mat3f64-BBpwCtoL.js";import"./vec2f64-Diu2Kaa8.js";import"./BufferView-CHYzaV9A.js";import"./vec2-Dt9Foiri.js";import"./Texture-C7A05GrI.js";import"./interfaces-B8ge7Jg9.js";import"./BindType-BmZEZMMh.js";import"./Util-B8vYs4k8.js";import"./enums-DSseSvdG.js";import"./Texture-O7Pyotwx.js";import"./VertexAttribute-BnAa5VW0.js";import"./basicInterfaces-DngWxyLO.js";import"./ShaderTechniqueConfiguration-D3UbJ2mX.js";import"./doublePrecisionUtils-B0owpBza.js";import"./requestImageUtils-DP1V3HlH.js";import"./ContentObject-BTgEhnct.js";import"./InterleavedLayout-s3MgOYN8.js";import"./types-D0PSWh4d.js";import"./VertexColor.glsl-CScvx9pF.js";import"./ViewingMode-Dodu7ZZk.js";import"./OrderIndependentTransparency-Cua2R8AE.js";import"./projectVectorToVector-C3SBBDgz.js";import"./projectPointToVector-qKp-AJ2b.js";import"./hydratedFeatures-DqrDm0_F.js";import"./floatRGBA-CCqnXShd.js";import"./Attribute-B-NAci_J.js";import"./Geometry-CqGtfd4N.js";import"./Indices-DP3oX5Sg.js";import"./triangle-CTblFuF6.js";import"./ObjectStack-BPo9QGhV.js";import"./vec2f32-BbH2jxlN.js";import"./featureConversionUtils-BzfH5fda.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./OptimizedGeometry-DLPswkPy.js";import"./edgeUtils-D8J_3GIe.js";import"./earcut-BqgeR2O3.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./computeTranslationToOriginAndRotation-BbJd4iYX.js";import"./DoubleArray-068mylUp.js";import"./vec3-DPXcG_yS.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-C0V38kt7.js";import"./deduplicate-j8p9VETP.js";import"./Normals-BAXqRpCA.js";import"./objectResourceUtils-D-wPKn4W.js";import"./devEnvironmentUtils-Blrp8lZ5.js";import"./DefaultMaterial_COLOR_GAMMA-D4SZcGoz.js";import"./quat-DUnoL8dP.js";import"./quatf64-BrpT0VRp.js";import"./resourceUtils-ayGD6aG4.js";import"./NestedMap-DgiGbX8E.js";import"./verticalOffsetUtils-BYv4Nk2v.js";import"./orientedBoundingBox-BQvYwCTM.js";import"./spatialReferenceEllipsoidUtils-CmEPjh7T.js";import"./symbolColorUtils-B_k_VgHH.js";import"./RenderState-DaVlEYWY.js";import"./CIMSymbolHelper-C-U_lWVp.js";import"./BidiEngine-DL33fnW5.js";import"./fontUtils-Dz0hN_7q.js";import"./GeometryUtils-_MjrRDxY.js";import"./enums-BRqP_wXA.js";import"./definitions-B54owTRu.js";import"./mat2d-D9yIh3Tx.js";import"./mat2df32-orApM5a3.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./cimSymbolUtils-DwzauUMk.js";import"./utils-j-RBNfeR.js";import"./lineStippleUtils-B9K4R8oO.js";import"./projectVectorToPoint-CPW7kXva.js";import"./MeshComponent-BCGFLGQh.js";import"./imageUtils-D1MsbWS6.js";import"./meshVertexSpaceUtils-KRc33Yrq.js";import"./MeshLocalVertexSpace-C8ABjEju.js";import"./georeference-CwPKO8dc.js";import"./axisAngleDegrees-CaSFQR2z.js";import"./interfaces-DkjgzG8v.js";import"./frustum-BrAPXuhm.js";import"./DefaultLayouts-BrmJbx_o.js";import"./webStyleSymbolUtils-BzDS5WjL.js";import"./glUtil-DS73TAjp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./Octree-E7a40xr7.js";import"./mathUtils-iSLnUy_4.js";import"./BufferObject-CaEbWulZ.js";import"./Intersector-CTjLkyei.js";import"./weather-D00pIeau.js";import"./LayerConstants-B33OP6sh.js";import"./boundedPlane-CLJ-Xnn_.js";import"./Object3DVisualElement-D2TYUCro.js";import"./VisualElement-CI1nOGdz.js";import"./signal-DoM1gSF0.js";import"./debugFlags-BbJIqrPU.js";import"./vec3f32-Cw9Q6TO_.js";import"./VertexArrayObject-Cv4RwmVi.js";import"./jsxFactory-BxQYPm-b.js";import"./GraphicsCollection-CKieR40M.js";import"./ReactiveMap-C-O0lKvJ.js";import"./heightModelInfoUtils-CdtST1Ra.js";import"./Viewpoint-CB1GAuK3.js";import"./Cyclical-BY9qISY1.js";import"./mat2df64-CBKYtunK.js";import"./normalizeUtils-Cm7zySIZ.js";import"./normalizeUtilsCommon-DRIluWnF.js";import"./utils-1zmckiYC.js";import"./utils-D-bI9C7C.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./globalCss-DfZw-NIf.js";import"./accessibleHandler-DsewpcQ5.js";import"./Compass-C-feYp_a.js";import"./utils-DsJqvptN.js";import"./GoTo-BzS22eXk.js";import"./NavigationToggle-QjJqvxo5.js";import"./Zoom-Ct1er6X1.js";import"./drawUtils-C6Di23Hl.js";let A=class extends k{constructor(t){super(t),this.target=null,this.intersectedGraphic=null,this.intersectedLocation=null,this.elevationAlignedTargetLocation=null,this.visible=void 0}};r([a()],A.prototype,"target",void 0),r([a()],A.prototype,"intersectedGraphic",void 0),r([a()],A.prototype,"intersectedLocation",void 0),r([a()],A.prototype,"elevationAlignedTargetLocation",void 0),r([a({type:Boolean})],A.prototype,"visible",void 0),A=r([D("esri.views.3d.analysis.LineOfSightAnalysisResult")],A);let H=class extends k{constructor(t){super(t),this.elevationAlignedTargetLocation=null,this.inputPoints={isValid:!1,observer:v(),observerSurfaceNormal:null,observerFeatureId:null,target:v(),targetSurfaceNormal:null,targetFeatureId:null,observerAdjusted:v(),targetAdjusted:v()},this.computationResult={start:v(),end:v(),intersection:v(),isValid:!1,isTargetVisible:!1},this.result=null}notifyResultChanged(){this.notifyChange("computationResult")}notifyInputPointsChanged(){this.notifyChange("inputPoints")}};r([a()],H.prototype,"target",void 0),r([a()],H.prototype,"elevationAlignedTargetLocation",void 0),r([a()],H.prototype,"inputPoints",void 0),r([a()],H.prototype,"computationResult",void 0),r([a()],H.prototype,"result",void 0),H=r([D("esri.views.3d.analysis.LineOfSight.LineOfSightComputation")],H);var ht;let I=ht=class extends k{constructor(e){super(e)}clone(){return new ht({type:this.type,id:W(this.id),mapPoint:W(this.mapPoint),renderPoint:dt(this.renderPoint),normal:W(this.normal),ray:W(this.ray),graphic:this.graphic})}equals(e){return this.type===e.type&&this.id===e.id&&jt(this.mapPoint,e.mapPoint)&&Nt(this.renderPoint,e.renderPoint)&&Ut(this.normal,e.normal)&&oe(this.ray,e.ray)&&this.graphic===e.graphic}};r([a()],I.prototype,"type",void 0),r([a({constructOnly:!0})],I.prototype,"id",void 0),r([a({constructOnly:!0})],I.prototype,"mapPoint",void 0),r([a({constructOnly:!0})],I.prototype,"renderPoint",void 0),r([a({constructOnly:!0})],I.prototype,"normal",void 0),r([a({constructOnly:!0})],I.prototype,"graphic",void 0),r([a({constructOnly:!0})],I.prototype,"ray",void 0),I=ht=r([D("esri.views.3d.analysis.LineOfSight.LineOfSightIntersectionResult")],I);let j=class extends k{constructor(t){super(t),this._terrainIntersectionOptionsLayerUids=new Set(["terrain"])}initialize(){this.intersector=ge(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=nt.MIN}getScreenPointIntersection(t){const i=Bt(t,ae.get()),n=he(this.view.state.camera,i,lt);return this._getRayIntersection(n)}_getRayIntersection(t,i){if(t==null||this.view.sceneIntersectionHelper==null)return null;const{intersector:n}=this;n.options.store=nt.MIN,this.view.sceneIntersectionHelper.intersectToolIntersectorRay(t,n,i);const o=n.results.min,s=v();if(!o.getIntersectionPoint(s)||(i==null?void 0:i.maxDistance)!=null&&Wt(s,t.origin)>i.maxDistance**2)return null;const l=this.view.renderCoordsHelper.fromRenderCoords(s,new Et({spatialReference:this.view.spatialReference})),p=dt(o.normal);if(ue(o))return new I({type:G.OBJECT,id:`${o.target.layerUid}/${o.target.nodeIndex}/${o.target.componentIndex}`,mapPoint:l,renderPoint:s,normal:p,ray:q(t),graphic:null});if(de(o))return new I({type:G.OBJECT,id:`${o.target.layerUid}/${o.target.graphicUid}`,mapPoint:l,renderPoint:s,normal:p,ray:q(t),graphic:null});if(me(o))return new I({type:G.TERRAIN,id:o.target.lij.slice(),mapPoint:l,renderPoint:s,normal:p,ray:q(t),graphic:null});const d=tt(o,this.view);if(d!=null){const c=d.layer,u=d.sourceLayer;let h;return u&&u.type==="scene"?h=le(d,u.objectIdField):h=d.uid,new I({type:G.OBJECT,id:`${c==null?void 0:c.uid}/${h}`,mapPoint:l,renderPoint:s,normal:p,ray:q(t),graphic:d})}return null}updateFromGroundIntersection(t,i,n){const o=Oe,s=Te,l=Ie,p=Lt;T(s,t),this.view.renderCoordsHelper.worldUpAtPosition(s,l),ct(l,l);const d=this.view.basemapTerrain.visibleElevationBounds,c=(i>=0?1:-1)*((d?Math.abs(d.max-d.min):100)+Math.abs(i));F(p,l,c),z(o,s,p),pt(o,s,lt);const u=this._getRayIntersection(lt,{include:this._terrainIntersectionOptionsLayerUids,maxDistance:c});if(u!=null){const h=Lt;return F(h,l,i),z(n,u.renderPoint,h),dt(u.normal)}return T(n,t),null}};r([a()],j.prototype,"view",void 0),r([a()],j.prototype,"intersector",void 0),j=r([D("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],j);const Oe=v(),Te=v(),Ie=v(),Lt=v(),lt=Dt();let y=class extends $t.EventedMixin(k){constructor(e){super(e),this.updateOnCameraChange=!0,this._observerGroundOffsetRenderSpace=0,this._effectiveObserverElevationMode="absolute-height",this._observerFeatureId=null,this._updatingHandles=new mt,this._frameTask=Ot,this._computationHandles=new et,this._externalObserverUpdate=!0}initialize(){var t;const e=(t=this.view.resourceController)==null?void 0:t.scheduler;this._frameTask=e?e.registerTask(K.LINE_OF_SIGHT_TOOL):Ot,this._intersector=new j({view:this.view}),this.addHandles([this._connectObserver(),this._connectComputations(),this._connectTargets()])}destroy(){this._computationHandles.destroy(),this._computations.removeAll(),this._updatingHandles.destroy()}get updating(){return this._frameTask.updating||this._updatingHandles.updating}get priority(){return this._frameTask.priority}set priority(e){this._frameTask.priority=e}get _computations(){return this.analysisViewData.computations}get _elevationAlignedObserverPositionRenderSpace(){return this.analysisViewData.observerEngineLocation}set _elevationAlignedObserverPositionRenderSpace(e){this.analysisViewData.observerEngineLocation=e}get _screenPixelSize(){return this.view.state.camera.computeScreenPixelSizeAt(this._elevationAlignedObserverPositionRenderSpace)}_computeResult(e){const t=e.computation,{inputPoints:i,computationResult:n}=t,{observerAdjusted:o,targetAdjusted:s}=i,{start:l,end:p}=n;T(l,o),T(p,s),this._canCompute(t)?this._computeIntersection(e):this._interpolateIntersection(e),t.notifyResultChanged(),this.emit("result-changed",{target:e.computation.target,result:t.result})}_updateAdjustedPointsFromFeatures(e){const t=this.view,{sceneIntersectionHelper:i}=t,{inputPoints:n}=e,{observerAdjusted:o,observerFeatureId:s,targetFeatureId:l,targetAdjusted:p}=n;if(s==null&&l==null)return;const d=Jt(o,p),c=this._intersector.intersector,u=pt(n.observer,n.target,Vt);c.options.store=nt.ALL,i.intersectToolIntersectorRay(u,c);let h=null,m=null,C=null,f=null;for(const w of c.results.all){const _=tt(w,this.view);if(_==null||w.distanceInRenderSpace==null)continue;const L=ot(_);L!=null&&(s!=null&&L===s&&(h==null&&(h=this._getFeatureDistanceThreshold(w,t,d)),w.distanceInRenderSpace<h&&(C=w)),l!=null&&L===l&&(m==null&&(m=this._getFeatureDistanceThreshold(w,t,d)),f==null&&w.distanceInRenderSpace<d&&d-w.distanceInRenderSpace<m&&(f=w)))}C!=null&&C.getIntersectionPoint(o)&&(n.observerSurfaceNormal=C.getTransformedNormal(v())),f!=null&&f.getIntersectionPoint(p)&&(n.targetSurfaceNormal=f.getTransformedNormal(v()))}_getFeatureDistanceThreshold(e,t,i){if(ce(e)){const n=pe(e,t);if(n!=null)return Math.min(n*Le,i)}return 1e-5*i}_adjustStartEndPositions(e){const t=this._screenPixelSize,i=this.view,{inputPoints:n}=e,{observer:o,observerSurfaceNormal:s,target:l,targetSurfaceNormal:p,observerAdjusted:d,targetAdjusted:c}=n,u=X;T(d,o),T(c,l),this._updateAdjustedPointsFromFeatures(e),s!=null?T(u,s):B(u,c,d);const h=t;ct(u,u),F(u,u,Math.min(h,1)),z(d,d,u),p!=null?T(u,p):B(u,d,c);const m=i.state.camera.computeScreenPixelSizeAt(c);ct(u,u),F(u,u,Math.min(m,1)),z(c,c,u)}_computeIntersection({computation:e,interpolationInfo:t}){const{view:i}=this,{sceneIntersectionHelper:n,renderCoordsHelper:o}=i;if(n==null)return;const s=this._intersector.intersector,{computationResult:l,inputPoints:p}=e,{observer:d,target:c}=p,{start:u,end:h}=l,m=pt(u,h,Vt);s.options.store=nt.MIN,n.intersectToolIntersectorRay(m,s);const C=s.results.min,f=l.intersection,w=X;let _=!0;if(C!=null&&C.getIntersectionPoint(f)){T(t.originalIntersection,f),T(t.originalObserver,u),T(t.originalTarget,h),o.fromRenderCoords(f,w,i.spatialReference);const P=1-x(h,c)/x(u,c);_=x(d,f)>=P*x(d,c)}const L=new Et(w,i.spatialReference);{const{result:P,target:R}=e;P!=null?(P.target=R,P.intersectedGraphic=_?null:tt(C,i),P.intersectedLocation=_?null:L,P.visible=_):e.result=new A({target:R,elevationAlignedTargetLocation:e.elevationAlignedTargetLocation,intersectedGraphic:_?null:tt(C,i),intersectedLocation:_?null:L,visible:_})}l.isValid=p.isValid=!0,l.isTargetVisible=_}_interpolateIntersection({computation:e,interpolationInfo:t}){const{computationResult:i,inputPoints:n}=e,{start:o,end:s,intersection:l}=i,{originalIntersection:p,originalObserver:d,originalTarget:c}=t;if(T(l,p),n.isValid){const u=X,h=x(d,p)/x(d,c);gt(u,o,d),F(u,u,1-h),z(l,l,u),gt(u,s,c),F(u,u,h),z(l,l,u),i.isValid=!0}else e.result=null,i.isValid=!1,i.isTargetVisible=!1}_canCompute(e){const t=this.analysisViewData.elevationAlignedObserver,i=this.view.frustum;if(t==null||e.elevationAlignedTargetLocation==null||i==null)return!1;const{observerAdjusted:n,targetAdjusted:o}=e.inputPoints,s=i.intersectsPoint(n),l=i.intersectsPoint(o);return s&&l}_onObserverPositionChange(e,t,i,n,o){if(this._externalObserverUpdate=o,e==null)return this.analysisViewData.elevationAlignedObserver=null,void(this._observerFeatureId=null);if(t==null)return wt(this.analysis,e.spatialReference,it.getLogger(this)),void(this.analysisViewData.elevationAlignedObserver=null);const s=this._getEffectiveElevationInfo(t,i),{absoluteZ:l,elevation:p}=Ct(t.x,t.y,t.z,this.view.spatialReference,this.view,s),d=t.clone();d.z=l,this._effectiveObserverElevationMode=s.mode,this.analysisViewData.elevationAlignedObserver=d;const c=v();this.view.renderCoordsHelper.toRenderCoords(d,c),this._elevationAlignedObserverPositionRenderSpace=c,this._observerGroundOffsetRenderSpace=l-p,this._observerFeatureId=ot(n),this.priority=K.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onObserverRenderSpacePositionChangeForComputation(e,t,i,n,o){const{inputPoints:s}=e;switch(T(s.observer,t),s.observerFeatureId=o,s.observerSurfaceNormal=null,n){case"on-the-ground":case"relative-to-ground":{const l=this._intersector.updateFromGroundIntersection(s.observer,i,s.observer);s.observerFeatureId==null&&(s.observerSurfaceNormal=l)}}this._adjustStartEndPositions(e),e.notifyInputPointsChanged(),this.priority=K.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onTargetPositionChange(e,t,i,n,o,s=!0){const l=e.inputPoints;if(s&&(l.isValid=!1),i==null)return t!=null&&wt(this.analysis,t.spatialReference,it.getLogger(this)),e.elevationAlignedTargetLocation=null,void e.notifyInputPointsChanged();const p=this._getEffectiveElevationInfo(i,n),{absoluteZ:d,elevation:c}=Ct(i.x,i.y,i.z,this.view.spatialReference,this.view,p),u=i.clone();switch(u.z=d,e.elevationAlignedTargetLocation=u,this.view.renderCoordsHelper.toRenderCoords(e.elevationAlignedTargetLocation,l.target),l.targetFeatureId=ot(o),l.targetSurfaceNormal=null,p.mode){case"on-the-ground":case"relative-to-ground":{const h=this._intersector.updateFromGroundIntersection(l.target,d-c,l.target);l.targetFeatureId==null&&(l.targetSurfaceNormal=h)}}this._adjustStartEndPositions(e),e.notifyInputPointsChanged(),this.priority=K.LINE_OF_SIGHT_TOOL_INTERACTIVE}_connectComputationToTarget(e){return J([this._updatingHandles.add(()=>({computation:e,targetPosition:e.target.position,targetElevationInfo:e.target.elevationInfo,targetFeatureInfo:e.target.feature,projectedTargetPosition:Z(e.target.position,this.view.spatialReference)}),({computation:t,targetPosition:i,targetElevationInfo:n,targetFeatureInfo:o,projectedTargetPosition:s})=>{s.pending==null?this._onTargetPositionChange(t,i,s.geometry,n,o):this._updatingHandles.addPromise(s.pending)},S)])}_connectComputationToObserver(e){return this._updatingHandles.add(()=>({computation:e,observer:this.analysisViewData.elevationAlignedObserver}),({computation:t})=>{this._externalObserverUpdate&&(t.inputPoints.isValid=!1,t.notifyInputPointsChanged())},S)}_connectComputationToRenderSpaceObserver(e){return this._updatingHandles.add(()=>({computation:e,observer:this._elevationAlignedObserverPositionRenderSpace,observerGroundOffset:this._observerGroundOffsetRenderSpace,observerElevationMode:this._effectiveObserverElevationMode,observerFeatureId:this._observerFeatureId}),({computation:t,observer:i,observerGroundOffset:n,observerElevationMode:o,observerFeatureId:s})=>{this._onObserverRenderSpacePositionChangeForComputation(t,i,n,o,s)},S)}_connectComputationToCamera(e){return this._updatingHandles.add(()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty}),({isDirty:t})=>{!this.updateOnCameraChange||e.inputPoints.isValid&&!t||e.notifyInputPointsChanged()})}_connectComputationToSlicePlane(e){return this._updatingHandles.add(()=>this.view.slicePlane,()=>{e.inputPoints.isValid=!1,e.notifyInputPointsChanged()})}_connectComputationToElevation(e){const t=(i,n)=>{const o=this.analysis.observer,s=e.target;let l=null,p=null,d=null,c=null,u=null,h=null;if((o==null?void 0:o.position)!=null){const m=Z(o.position,this.view.spatialReference);if(m.pending!=null)return this._updatingHandles.addPromise(m.pending),void m.pending.finally(()=>t(i,n));l=m.geometry,p=o.elevationInfo,d=o.feature}if(s.position!=null){const m=Z(s.position,this.view.spatialReference);if(m.pending!=null)return this._updatingHandles.addPromise(m.pending),void m.pending.finally(()=>t(i,n));c=m.geometry,u=s.elevationInfo,h=s.feature}l==null&&c==null||(ne(i,n,Y,this.view.spatialReference),l!=null&&_t(Y,l)&&this._onObserverPositionChange(o!=null?o.position:null,l,p,d,!1),c!=null&&_t(Y,c)&&this._onTargetPositionChange(e,s.position,c,u,h,!1),l!=null&&c!=null&&Xt(Y,l,c)&&e.notifyInputPointsChanged())};return this.view.elevationProvider.on("elevation-change",({extent:i,spatialReference:n})=>t(i,n))}_connectComputationToTask(e){let t=null;const i={computation:e,interpolationInfo:{originalIntersection:v(),originalObserver:v(),originalTarget:v()}};return J([this._updatingHandles.add(()=>e.inputPoints,()=>{t=vt(t),t=Zt(async n=>{await qt(this._frameTask.schedule(()=>this._computeResult(i),n))})},{initial:!0,equals:()=>!1}),At(()=>t=vt(t))])}_connectComputation(e){const t=this._computationHandles;t.has(e)||t.add([this._connectComputationToTarget(e),this._connectComputationToObserver(e),this._connectComputationToRenderSpaceObserver(e),this._connectComputationToCamera(e),this._connectComputationToSlicePlane(e),this._connectComputationToElevation(e),this._connectComputationToTask(e)],e)}_disconnectComputation(e){this._computationHandles.remove(e)}_onComputationCollectionChange({added:e,removed:t}){for(const i of t)this._disconnectComputation(i);for(const i of e)this._connectComputation(i)}_onTargetCollectionChange({added:e,removed:t}){for(const i of t)this._removeTarget(i);for(const i of e)this._addTarget(i)}_onCursorTargetChange(e,t){t!=null&&this._removeTarget(t),e!=null&&this._addTarget(e)}_addTarget(e){this._computations.some(t=>t.target===e)||this._computations.add(new H({target:e}))}_removeTarget(e){const t=this._computations.findIndex(i=>i.target===e);this._computations.removeAt(t)}_connectObserver(){return J([this._updatingHandles.add(()=>({observerPosition:this.analysis.observer!=null?this.analysis.observer.position:null,projectedObserverPosition:Z(this.analysis.observer!=null?this.analysis.observer.position:null,this.view.spatialReference),observerElevationInfo:this.analysis.observer!=null?this.analysis.observer.elevationInfo:null,observerFeatureInfo:this.analysis.observer!=null?this.analysis.observer.feature:null}),({observerPosition:e,projectedObserverPosition:t,observerElevationInfo:i,observerFeatureInfo:n})=>{t.pending==null?this._onObserverPositionChange(e,t.geometry,i,n,!0):this._updatingHandles.addPromise(t.pending)},S)])}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this._computations,e=>this._onComputationCollectionChange(e),{initial:!0,final:!0})}_connectTargets(){return J([this._updatingHandles.addOnCollectionChange(()=>this.analysis.targets,e=>this._onTargetCollectionChange(e),{initial:!0,final:!0}),this._updatingHandles.add(()=>this.analysisViewData.cursorTarget,(e,t)=>{this._onCursorTargetChange(e,t)})])}get _isCameraDirty(){const e=this.analysisViewData.elevationAlignedObserver,{view:t}=this,{renderCoordsHelper:i}=t;if(e==null||i==null)return!1;const n=X;i.toRenderCoords(e,n);const o=t.state.camera.computeScreenPixelSizeAt(n);return Math.abs((o-this._screenPixelSize)/this._screenPixelSize)>Pe}_getEffectiveElevationInfo(e,t){return e.hasZ?t??{mode:"absolute-height",offset:0}:{mode:"on-the-ground",offset:0}}};r([a({constructOnly:!0})],y.prototype,"analysis",void 0),r([a({constructOnly:!0})],y.prototype,"analysisViewData",void 0),r([a({constructOnly:!0})],y.prototype,"view",void 0),r([a()],y.prototype,"updating",null),r([a()],y.prototype,"priority",null),r([a()],y.prototype,"updateOnCameraChange",void 0),r([a()],y.prototype,"_computations",null),r([a()],y.prototype,"_elevationAlignedObserverPositionRenderSpace",null),r([a()],y.prototype,"_observerGroundOffsetRenderSpace",void 0),r([a()],y.prototype,"_effectiveObserverElevationMode",void 0),r([a()],y.prototype,"_observerFeatureId",void 0),r([a()],y.prototype,"_screenPixelSize",null),r([a({readOnly:!0})],y.prototype,"_updatingHandles",void 0),r([a()],y.prototype,"_frameTask",void 0),r([a()],y.prototype,"_isCameraDirty",null),y=r([D("esri.views.3d.analysis.LineOfSight.LineOfSightController")],y);const Pe=.1,X=v(),Vt=Dt(),Y=Kt(),Le=.05;let Ve=class{constructor(){this.glowWidth=8,this.innerWidth=.75}};const Se=new Ve;function Re(e){const t=e.accentColor;return{glowColor:t,innerColor:Yt(t),globalAlpha:.75*t.a}}class Ee{constructor(){this.size=.5}}const $e=new Ee;function St(e){return Qt(e.accentColor,.75)}class Ae{constructor(){this.size=.5,this.visibleColor=new g([3,252,111,.75]),this.occludedColor=new g([252,3,69,.75]),this.undefinedColor=new g([127,127,127,.75])}}const He=new Ae;let De=class{constructor(){this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new g([3,252,111,1]),this.visibleOuterColor=new g([3,252,111,.15]),this.occludedInnerColor=new g([252,3,69,1]),this.occludedOuterColor=new g([252,3,69,.1]),this.undefinedInnerColor=new g([255,255,255,1]),this.undefinedOuterColor=new g([127,127,127,.2])}};const Q=new De;class Me extends Mt{constructor(t,i){const n=kt(St(t.effectiveTheme)),o=zt(n,$e.size,32,32),s=new xt(o);super({view:t,renderObjects:[s],metadata:i,elevationInfo:{mode:"absolute-height",offset:0}}),Ft(this),this.themeHandle=Ht(()=>({color:St(t.effectiveTheme)}),l=>{n.setParameters(l)})}destroy(){this.themeHandle.remove(),super.destroy()}}let ke=class extends Mt{constructor(t,i){const{size:n,visibleColor:o,occludedColor:s,undefinedColor:l}=He;super({view:t,renderObjects:[ut(n,o,N.Custom1),ut(n,s,N.Custom2),ut(n,l,N.Custom3)],metadata:i,elevationInfo:{mode:"absolute-height",offset:0}}),Ft(this)}};function ut(e,t,i){return new xt(zt(kt(g.toUnitRGBA(t)),e,32,32),i)}var M;(function(e){e.Ready="ready",e.Creating="creating",e.Created="created"})(M||(M={}));let O=class extends fe{constructor(t){super(t),this.removeIncompleteOnCancel=!1,this.analysisViewData=null,this._latestPointerMovePointerType=null,this._laserlineVisualElement=null,this._grabbedManipulator=null,this._analysisHandles=new et,this._updatingHandles=new mt,this._manipulatorHandles=new et,this._targetTrackerManipulator=null}initialize(){this._intersector=new j({view:this.view}),this.addHandles(Ht(()=>this.state,t=>{t===M.Created&&this.finishToolCreation()},te)),this._observerManipulator=this._createObserverManipulator(),this._createLaserLine(),this.addHandles([this._updatingHandles.add(()=>{var t;return(t=this.analysisViewData)==null?void 0:t.elevationAlignedObserver},t=>this._onObserverLocationChange(t),S),this._updatingHandles.add(()=>Re(this.view.effectiveTheme),({glowColor:t,innerColor:i,globalAlpha:n})=>this._updateLaserLineStyle(t,i,n),S),this._updatingHandles.add(()=>this._laserLineRendererDependencies(),t=>this._updateLaserLineRenderer(t)),this._connectComputations(),this._updatingHandles.addWhen(()=>!this._shouldRenderTracker,()=>this._clearCursorTracker(),S)])}destroy(){this._updatingHandles=E(this._updatingHandles),this._manipulatorHandles=E(this._manipulatorHandles),this._analysisHandles=E(this._analysisHandles),this._observerManipulator=null,this._clearCursorTracker(),this._removeLaserLine(),this._intersector=null,this._set("analysis",null)}get state(){var t;return this.active?this.hasGrabbedManipulators?M.Created:M.Creating:((t=this.analysis.observer)==null?void 0:t.position)!=null?M.Created:M.Ready}get cursor(){return this.active&&this._showTracker?"crosshair":null}get updating(){return this.analysisViewData!=null&&this.analysisViewData.updating||this._updatingHandles.updating}get _showTracker(){return this.active&&this._latestPointerMovePointerType==="mouse"}get _shouldRenderTracker(){var t;return this._showTracker&&((t=this.analysis.observer)==null?void 0:t.position)!=null&&!this.hasGrabbedManipulators}continue(){this.view.activeTool=this}stop(){this.view.activeTool=null}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}onInputEvent(t){switch(t.type){case"immediate-double-click":this._doubleClickHandler(t);break;case"key-down":this._keyDownHandler(t);break;case"pointer-move":this._pointerMoveHandler(t)}}onInputEventAfter(t){t.type==="immediate-click"&&this._clickHandler(t)}onShow(){}onHide(){}onDeactivate(){this._clearCursorTracker()}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,t=>this._onComputationsCollectionChange(t),{initial:!0,final:!0})}_onComputationsCollectionChange({added:t,removed:i}){for(const n of i)this._disconnectComputation(n);for(const n of t)this._connectComputation(n)}_connectComputation(t){if(this.destroyed)return void it.getLogger(this).warn("Attempting to connect an analysis to a destroyed LineOfSight tool. Ignoring.");const i=this._analysisHandles;if(i.has(t))return;const n=this._createTargetManipulator(t.target);this._targetTrackerManipulator==null&&n.metadata.target===this.analysisViewData.cursorTarget&&(this._targetTrackerManipulator=n,this._targetTrackerManipulator.available=!1,this._targetTrackerManipulator.interactive=!1,this._updateLaserLineRenderer()),i.add([this._updatingHandles.add(()=>this._getLineOfSightManipulatorStateDependencies(t),()=>this._updateManipulatorState(n,t),S),this._updatingHandles.add(()=>t.elevationAlignedTargetLocation,o=>this._onTargetLocationChange(o,n),S)],t)}_disconnectComputation(t){if(this.destroyed)return void it.getLogger(this).warn("Attempting to disconnect an analysis from a destroyed LineOfSight tool. Ignoring.");this._analysisHandles.remove(t);const i=this._getTargetManipulator(t.target);i!=null&&(this.manipulators.remove(i),this._manipulatorHandles.remove(i),this._targetTrackerManipulator!=null&&this._targetTrackerManipulator===i&&(this._targetTrackerManipulator=null))}_clearCursorTracker(){this.analysisViewData.cursorTarget=E(this.analysisViewData.cursorTarget)}_createTargetManipulator(t){const i={target:t,type:"target"},n=new ke(this.view,i);return this._manipulatorHandles.add([this._createTargetManipulatorDragPipeline(n),n.events.on("grab-changed",o=>this._manipulatorGrabChanged(n,o)),n.events.on("immediate-click",o=>this._manipulatorClick(n,o))],n),this.manipulators.add(n),t.position!=null?n.elevationAlignedLocation=t.position:n.available=!1,n}_getTargetManipulator(t){let i=null;return this.manipulators.forEach(n=>{const o=n.manipulator;i==null&&o.metadata.type==="target"&&o.metadata.target===t&&(i=o)}),i}_createObserverManipulator(){const t=new Me(this.view,{type:"observer",intersection:null});return this._manipulatorHandles.add([this._createObserverManipulatorDragPipeline(t),t.events.on("grab-changed",i=>this._manipulatorGrabChanged(t,i)),t.events.on("immediate-click",i=>this._manipulatorClick(t,i))],t),this.manipulators.add(t),t}_screenToIntersection(){return t=>{const i=this._intersector.getScreenPointIntersection(t.screenEnd);return i==null?null:{...t,intersection:i}}}_createTargetManipulatorDragPipeline(t){return Tt(t,(i,n,o)=>{n.next(this._screenToIntersection()).next(this._updateTargetDragStep(t)).next(()=>this._updateLaserLineRenderer()),o.next(this._cancelTargetDragStep(t.metadata.target)).next(()=>this._updateLaserLineRenderer())})}_createObserverManipulatorDragPipeline(t){return Tt(t,(i,n,o)=>{n.next(this._screenToIntersection()).next(this._updateObserverDragStep()).next(()=>this._updateLaserLineRenderer()),o.next(this._cancelObserverDragStep()).next(()=>this._updateLaserLineRenderer())})}_updateObserverDragStep(){return t=>(t.intersection.mapPoint!=null?(this.analysis.observer==null&&(this.analysis.observer=new ft),this._updateFromIntersection(this.analysis.observer,t.intersection)):this.analysis.observer=null,t)}_cancelObserverDragStep(){var i;const t=((i=this.analysis.observer)==null?void 0:i.position)!=null?this.analysis.observer.clone():null;return n=>(this.analysis.observer=t,n)}_updateTargetDragStep(t){return i=>{this._updateFromIntersection(t.metadata.target,i.intersection);const n=i.intersection.mapPoint;return n!=null&&(t.elevationAlignedLocation=n),i}}_cancelTargetDragStep(t){var n;const i=(n=t.position)==null?void 0:n.clone();return o=>(t.position=i,o)}_manipulatorGrabChanged(t,i){switch(i.action){case"start":this._grabbedManipulator=t;break;case"end":this._grabbedManipulator===t&&(this._grabbedManipulator=null)}}_updateManipulatorState(t,i){const{isValid:n,isTargetVisible:o}=i.computationResult;t.state=n?o?N.Custom1:N.Custom2:N.Custom3}_getLineOfSightManipulatorStateDependencies(t){const{isValid:i,isTargetVisible:n}=t.computationResult;return{isValid:i,isTargetVisible:n}}_laserLineRendererDependencies(){return{laserlineVisualElement:this._laserlineVisualElement,grabbedManipulator:this._grabbedManipulator,shouldRenderTracker:this._shouldRenderTracker,observerPosition:this.analysis.observer!=null?this.analysis.observer.position:null,visible:this.visible}}_updateLaserLineRenderer(t=this._laserLineRendererDependencies()){const{laserlineVisualElement:i,grabbedManipulator:n,shouldRenderTracker:o,observerPosition:s,visible:l}=t;if(i==null)return;const p=n??(o&&s!=null?this._targetTrackerManipulator:null);p!=null&&l?(i.visible=!0,i.heightManifoldTarget=p.renderLocation,p!==this._observerManipulator?i.lineVerticalPlaneSegment=_e(this._observerManipulator.renderLocation,p.renderLocation,xe):i.lineVerticalPlaneSegment=null):(i.visible=!1,i.heightManifoldTarget=null,i.lineVerticalPlaneSegment=null)}_createLaserLine(){this._removeLaserLine();const{glowWidth:t,innerWidth:i}=Se;this._laserlineVisualElement=new ye({view:this.view,attached:!0,visible:this.visible,style:{glowWidth:t,innerWidth:i},isDecoration:!0})}_removeLaserLine(){this._laserlineVisualElement!=null&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}_updateLaserLineStyle(t,i,n){const o=this._laserlineVisualElement;if(o==null)return;const s=o.style;o.style={...s,glowColor:g.toUnitRGB(t),innerColor:g.toUnitRGB(i),globalAlpha:n}}_onObserverLocationChange(t){t!=null?(this._observerManipulator.metadata.intersection=null,this._observerManipulator.available=!0,this._observerManipulator.elevationAlignedLocation=t):this._observerManipulator.available=!1}_onTargetLocationChange(t,i){t!=null?(i.elevationAlignedLocation=t,i!==this._targetTrackerManipulator&&(i.available=!0)):i.available=!1}_addPointFromClickEvent(t){var n;const i=this._intersector.getScreenPointIntersection(t);if((i==null?void 0:i.mapPoint)!=null)if(((n=this.analysis.observer)==null?void 0:n.position)!=null){this._clearCursorTracker();const o=new bt;this._updateFromIntersection(o,i),this.analysis.targets.add(o)}else{const o=new ft;this._updateFromIntersection(o,i),this.analysis.observer=o}}_clickHandler(t){this.active&&t.button!==st.Right&&(this._addPointFromClickEvent(It(t)),t.stopPropagation())}_doubleClickHandler(t){this.active&&t.button!==st.Right&&(this.stop(),t.stopPropagation())}_keyDownHandler(t){this.active&&t.key==="Escape"&&(this.stop(),t.stopPropagation())}_pointerMoveHandler(t){var o;if(this.hasGrabbedManipulators||(this._latestPointerMovePointerType=t.pointerType,this._updateLaserLineRenderer(),!this._showTracker||((o=this.analysis.observer)==null?void 0:o.position)==null))return;const i=It(t),n=this._intersector.getScreenPointIntersection(i);(n==null?void 0:n.mapPoint)!=null&&(this.analysisViewData.cursorTarget==null&&(this.analysisViewData.cursorTarget=new bt),this._updateFromIntersection(this.analysisViewData.cursorTarget,n),this._updateLaserLineRenderer())}_updateFromIntersection(t,i){if(i.mapPoint==null)return t.position=null,t.elevationInfo=null,void(t.feature=null);switch(i.type){case G.OBJECT:if(i.graphic!=null){const o=i.graphic,s=re(o);s.mode==="on-the-ground"&&(s.mode="relative-to-ground",s.offset=0),t.elevationInfo=new yt(s),t.feature=o}else t.elevationInfo=null,t.feature=null;break;case G.TERRAIN:t.elevationInfo=new yt({mode:"on-the-ground"}),t.feature=null;break;default:t.elevationInfo=null,t.feature=null}const n=i.mapPoint.clone();n.z=se(this.view,n,{mode:"absolute-height",offset:0},t.elevationInfo),t.position=n}_manipulatorClick(t,i){if(t.metadata.type==="observer"||t.grabbing||t.dragging||i.button!==st.Right||this.analysis.targets.length<=1)return;const{target:n}=t.metadata;this.analysis.targets.remove(n),i.stopPropagation()}get testInfo(){return{laserLineVisualElement:this._laserlineVisualElement,getTargetManipulator:t=>this._getTargetManipulator(t)}}};r([a({constructOnly:!0})],O.prototype,"view",void 0),r([a({constructOnly:!0})],O.prototype,"analysis",void 0),r([a({readOnly:!0})],O.prototype,"state",null),r([a({readOnly:!0})],O.prototype,"cursor",null),r([a()],O.prototype,"removeIncompleteOnCancel",void 0),r([a({readOnly:!0})],O.prototype,"updating",null),r([a({constructOnly:!0})],O.prototype,"analysisViewData",void 0),r([a({readOnly:!0})],O.prototype,"_showTracker",null),r([a()],O.prototype,"_latestPointerMovePointerType",void 0),r([a()],O.prototype,"_shouldRenderTracker",null),r([a()],O.prototype,"_laserlineVisualElement",void 0),r([a()],O.prototype,"_grabbedManipulator",void 0),O=r([D("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTool")],O);const xe=ve();class Fe{constructor(t,i,n,o){this.visibleLineVisualElement=t,this.occludedLineVisualElement=i,this.undefinedLineVisualElement=n,this.targetVisualElement=o}destroy(){this.visibleLineVisualElement.destroy(),this.occludedLineVisualElement.destroy(),this.undefinedLineVisualElement.destroy(),this.targetVisualElement.destroy()}}let V=class extends k{constructor(e){super(e),this._lineOfSightVisualElements=new Array,this._computationHandles=new et,this._updatingHandles=new mt}initialize(){this.addHandles(this._connectComputations()),this._createObserverVisualization()}destroy(){this._updatingHandles=E(this._updatingHandles),this._computationHandles=E(this._computationHandles),this._observerVisualElement=E(this._observerVisualElement)}get visible(){return this.analysisViewData.visible}get updating(){return this._updatingHandles.updating}get interactiveAndEditable(){return this.analysisViewData.interactive&&this.analysisViewData.editable}get test(){return{disablePartialOcclusion:()=>{for(const e of this._lineOfSightVisualElements)e.visibleLineVisualElement.renderOccluded=at.Occlude,e.occludedLineVisualElement.renderOccluded=at.Occlude,e.undefinedLineVisualElement.renderOccluded=at.Occlude},visualizations:this._lineOfSightVisualElements}}_createLineOfSightVisualization(){const e=Q,t=this.view,i=this.isDecoration,n={view:t,attached:!0,width:e.outerWidth,innerWidth:e.innerWidth,isDecoration:i},o=g.toUnitRGBA(e.visibleOuterColor),s=g.toUnitRGBA(e.visibleInnerColor),l=g.toUnitRGBA(e.occludedOuterColor),p=g.toUnitRGBA(e.occludedInnerColor),d=g.toUnitRGBA(e.undefinedOuterColor),c=g.toUnitRGBA(e.undefinedInnerColor),u=new rt({...n,color:o,innerColor:s}),h=new rt({...n,color:l,innerColor:p}),m=new rt({...n,color:d,innerColor:c}),C=new Pt({view:t,attached:!0,...Rt,size:8,isDecoration:i}),f=new Fe(u,h,m,C);return this._lineOfSightVisualElements.push(f),f}_destroyLineOfSightVisualization(e){e.destroy(),this._lineOfSightVisualElements.splice(this._lineOfSightVisualElements.indexOf(e),1)}_updateLineOfSightVisualization(e,t,i){const n=Q,{computationResult:o,inputPoints:s}=e,{start:l,end:p,intersection:d,isValid:c,isTargetVisible:u}=o,{observer:h}=s,m=Ne;m[12]=h[0],m[13]=h[1],m[14]=h[2];const C=B(ze,l,h),f=B(Ge,p,h),w=B(je,d,h),{visibleLineVisualElement:_,occludedLineVisualElement:L,undefinedLineVisualElement:P,targetVisualElement:R}=t,Gt=this.analysisViewData.elevationAlignedObserver==null||e.elevationAlignedTargetLocation==null,U=this.visible&&!Gt;_.visible=U,L.visible=U,P.visible=U,R.visible=U,R.attached=!i.interactiveAndEditable,U&&(_.geometry=null,L.geometry=null,P.geometry=null,R.geometry=e.elevationAlignedTargetLocation,c?u?(_.geometry=[[$(C),$(f)]],_.transform=m,_.color=g.toUnitRGBA(n.visibleOuterColor),R.color=g.toUnitRGBA(n.visibleInnerColor)):(_.geometry=[[$(C),$(w)]],_.transform=m,_.color=g.toUnitRGBA(n.occludedOuterColor),L.geometry=[[$(w),$(f)]],L.transform=m,R.color=g.toUnitRGBA(n.occludedInnerColor)):(P.geometry=[[$(C),$(f)]],P.transform=m,R.color=g.toUnitRGBA(n.undefinedInnerColor)))}_getLineOfSightVisualizationDependencies(e){const{computationResult:t}=e,{occludedOuterColor:i,visibleOuterColor:n}=Q;return{computationResult:t,occludedOuterColor:i,visibleOuterColor:n,visible:this.visible,interactiveAndEditable:this.interactiveAndEditable}}_connectComputation(e){const t=this._computationHandles;if(t.has(e))return;const i=this._createLineOfSightVisualization();t.add([this._updatingHandles.add(()=>this._getLineOfSightVisualizationDependencies(e),n=>this._updateLineOfSightVisualization(e,i,n),{initial:!0,equals:()=>!1}),At(()=>this._destroyLineOfSightVisualization(i))],e)}_disconnectComputation(e){this._computationHandles.remove(e)}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,e=>this._onComputationsCollectionChange(e),{initial:!0,final:!0})}_onComputationsCollectionChange({added:e,removed:t}){for(const i of t)this._disconnectComputation(i);for(const i of e)this._connectComputation(i)}_createObserverVisualization(){const e=g.toUnitRGBA(Q.visibleInnerColor),t=new Pt({view:this.view,color:e,...Rt,isDecoration:this.isDecoration});this._observerVisualElement=t,this.addHandles(this._updatingHandles.add(()=>({observer:this.analysisViewData.elevationAlignedObserver,interactiveAndEditable:this.interactiveAndEditable,visible:this.visible}),({observer:i,interactiveAndEditable:n,visible:o})=>{i!=null&&!n&&o?(t.geometry=i,this._observerVisualElement.attached=!0):t.attached=!1},S))}};r([a({constructOnly:!0})],V.prototype,"analysis",void 0),r([a({constructOnly:!0})],V.prototype,"analysisViewData",void 0),r([a({constructOnly:!0})],V.prototype,"view",void 0),r([a({readOnly:!0})],V.prototype,"visible",null),r([a({constructOnly:!0})],V.prototype,"isDecoration",void 0),r([a()],V.prototype,"updating",null),r([a()],V.prototype,"interactiveAndEditable",null),r([a()],V.prototype,"test",null),V=r([D("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],V);const Rt={size:6,pixelSnappingEnabled:!1,primitive:"circle",elevationInfo:{mode:"absolute-height",offset:0},outlineSize:0},ze=v(),Ge=v(),je=v(),Ne=be();let b=class extends ie($t.EventedMixin(k)){constructor(e){super(e),this.type="line-of-sight-view-3d",this.analysis=null,this.tool=null,this.computations=new ee,this.elevationAlignedObserver=null,this.observerEngineLocation=v(),this.cursorTarget=null,this.editable=!0}initialize(){const e=this.view,t=this.analysis;this._analysisController=new y({analysis:t,analysisViewData:this,view:e}),this._analysisVisualization=new V({analysis:t,analysisViewData:this,view:e,isDecoration:!this.parent}),this.addHandles([this._analysisController.on("result-changed",i=>{i.target!==this.cursorTarget&&this.emit("result-changed",i)}),Ce(this,O)])}destroy(){we(this),this._analysisController=E(this._analysisController),this._analysisVisualization=E(this._analysisVisualization)}get results(){return this.computations.map(e=>e.result)}get priority(){return this._analysisController.priority}set priority(e){this._analysisController.priority=e}get updating(){return this._analysisController!=null&&this._analysisController.updating||this._analysisVisualization!=null&&this._analysisVisualization.updating}getResultForTarget(e){var t;return(t=this.computations.find(i=>i.target===e))==null?void 0:t.result}get testInfo(){return{visualization:this._analysisVisualization,controller:this._analysisController}}};r([a({readOnly:!0})],b.prototype,"type",void 0),r([a({constructOnly:!0,nonNullable:!0})],b.prototype,"analysis",void 0),r([a()],b.prototype,"tool",void 0),r([a({readOnly:!0})],b.prototype,"results",null),r([a()],b.prototype,"priority",null),r([a()],b.prototype,"computations",void 0),r([a()],b.prototype,"elevationAlignedObserver",void 0),r([a()],b.prototype,"observerEngineLocation",void 0),r([a()],b.prototype,"cursorTarget",void 0),r([a()],b.prototype,"updating",null),r([a()],b.prototype,"editable",void 0),r([a()],b.prototype,"_analysisController",void 0),r([a()],b.prototype,"_analysisVisualization",void 0),b=r([D("esri.views.3d.analysis.LineOfSightAnalysisView3D")],b);const No=b;export{No as default};
