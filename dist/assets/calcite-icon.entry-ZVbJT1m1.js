import{r as f,h,H as b,g as m,j as g}from"./index-8ERthB3p.js";import{g as x,t as v}from"./dom-bea5da81-_E6DDA15.js";import{c as z}from"./observers-fe652afa-BKcjSNKG.js";import"./guid-9a252389-Cgw_FQNn.js";/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v2.6.0
 */const I={icon:"icon",flipRtl:"flip-rtl"},p={},d={},u={s:16,m:24,l:32};async function y({icon:t,scale:n}){const e=u[n],s=C(t),a=s.charAt(s.length-1)==="F",i=`${a?s.substring(0,s.length-1):s}${e}${a?"F":""}`;if(p[i])return p[i];d[i]||(d[i]=fetch(g(`./assets/icon/${i}.json`)).then(r=>r.json()).catch(()=>(console.error(`"${i}" is not a valid calcite-ui-icon name`),"")));const o=await d[i];return p[i]=o,o}function C(t){const n=!isNaN(Number(t.charAt(0))),e=t.split("-");if(e.length>0){const a=/[a-z]/i;t=e.map((l,i)=>l.replace(a,function(r,c){return i===0&&c===0?r:r.toUpperCase()})).join("")}return n?`i${t}`:t}const D=":host{display:inline-flex;color:var(--calcite-ui-icon-color)}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}",w=class{constructor(t){f(this,t),this.icon=null,this.flipRtl=!1,this.scale="m",this.textLabel=void 0,this.pathData=void 0,this.visible=!1}connectedCallback(){this.waitUntilVisible(()=>{this.visible=!0,this.loadIconPathData()})}disconnectedCallback(){var t;(t=this.intersectionObserver)==null||t.disconnect(),this.intersectionObserver=null}async componentWillLoad(){this.loadIconPathData()}render(){const{el:t,flipRtl:n,pathData:e,scale:s,textLabel:a}=this,l=x(t),i=u[s],o=!!a,r=[].concat(e||"");return h(b,{"aria-hidden":v(!o),"aria-label":o?a:null,role:o?"img":null},h("svg",{"aria-hidden":"true",class:{[I.flipRtl]:l==="rtl"&&n,svg:!0},fill:"currentColor",height:"100%",viewBox:`0 0 ${i} ${i}`,width:"100%",xmlns:"http://www.w3.org/2000/svg"},r.map(c=>typeof c=="string"?h("path",{d:c}):h("path",{d:c.d,opacity:"opacity"in c?c.opacity:1}))))}async loadIconPathData(){const{icon:t,scale:n,visible:e}=this;if(!t||!e)return;const s=await y({icon:t,scale:n});t===this.icon&&(this.pathData=s)}waitUntilVisible(t){if(this.intersectionObserver=z("intersection",n=>{n.forEach(e=>{e.isIntersecting&&(this.intersectionObserver.disconnect(),this.intersectionObserver=null,t())})},{rootMargin:"50px"}),!this.intersectionObserver){t();return}this.intersectionObserver.observe(this.el)}static get assetsDirs(){return["assets"]}get el(){return m(this)}static get watchers(){return{icon:["loadIconPathData"],scale:["loadIconPathData"]}}};w.style=D;export{w as calcite_icon};
